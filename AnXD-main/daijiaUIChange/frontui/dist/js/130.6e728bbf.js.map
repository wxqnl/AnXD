{"version":3,"file":"js/130.6e728bbf.js","mappings":"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","sources":["webpack://daijia-admin/./src/api/dept.js","webpack://daijia-admin/./src/pages/system/SysDept.vue","webpack://daijia-admin/./src/pages/system/SysDept.vue?4e86"],"sourcesContent":["import request from '@/utils/request'\n\n// 获取部门列表\nexport function getDeptTree(params) {\n  // 确保必须参数存在\n  const queryParams = {\n    pageSize: params?.pageSize || 10,\n    pageNum: params?.pageNum || 1,\n    ...params\n  }\n  return request({\n    url: '/sysDept/list',\n    method: 'get',\n    params: queryParams\n  })\n}\n\n// 获取部门详情\nexport function getDeptById(id) {\n  return request({\n    url: '/sysDept/getById',\n    method: 'get',\n    params: { id }\n  })\n}\n\n// 添加部门\nexport function addDept(data) {\n  return request({\n    url: '/sysDept/add',\n    method: 'post',\n    data\n  })\n}\n\n// 更新部门\nexport function updateDept(data) {\n  return request({\n    url: '/sysDept/update',\n    method: 'post',\n    data\n  })\n}\n\n// 删除部门\nexport function deleteDept(id) {\n  return request({\n    url: '/sysDept/delete',\n    method: 'post',\n    params: { id }\n  })\n} ","<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"queryParams.name\" placeholder=\"请输入部门名称\" clearable />\n        </el-form-item>\n        <el-form-item label=\"负责人\" prop=\"leader\">\n          <el-input v-model=\"queryParams.leader\" placeholder=\"请输入负责人\" clearable />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n            <el-option label=\"正常\" :value=\"1\" />\n            <el-option label=\"停用\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>部门管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">新增部门</el-button>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"deptList\" row-key=\"id\" border :tree-props=\"{ children: 'children' }\" :default-expand-all=\"true\">\n        <el-table-column prop=\"name\" label=\"部门名称\" />\n        <el-table-column prop=\"leader\" label=\"负责人\" />\n        <el-table-column prop=\"phone\" label=\"联系电话\" />\n        <!-- <el-table-column prop=\"email\" label=\"邮箱\" /> -->\n        <!-- <el-table-column prop=\"sortValue\" label=\"排序\" width=\"80\" /> -->\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '正常' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"danger\" link @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n\n    <!-- 添加/编辑部门对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      v-model=\"dialogVisible\" \n      width=\"500px\" \n      append-to-body\n      :close-on-click-modal=\"false\"\n    >\n      <el-form \n        ref=\"deptFormRef\" \n        :model=\"deptForm\" \n        :rules=\"rules\" \n        label-width=\"80px\"\n      >\n        <el-form-item label=\"上级部门\" prop=\"parentId\">\n          <el-tree-select\n            v-model=\"deptForm.parentId\"\n            :data=\"deptTreeOptions\"\n            :render-after-expand=\"false\"\n            node-key=\"id\"\n            :props=\"{ label: 'name', value: 'id', children: 'children' }\"\n            placeholder=\"请选择上级部门\"\n            check-strictly\n            clearable\n          />\n        </el-form-item>\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"deptForm.name\" placeholder=\"请输入部门名称\" />\n        </el-form-item>\n        <el-form-item label=\"负责人\" prop=\"leader\">\n          <el-input v-model=\"deptForm.leader\" placeholder=\"请输入负责人\" />\n        </el-form-item>\n        <el-form-item label=\"联系电话\" prop=\"phone\">\n          <el-input v-model=\"deptForm.phone\" placeholder=\"请输入联系电话\" />\n        </el-form-item>\n        <el-form-item label=\"排序\" prop=\"sortValue\">\n          <el-input-number v-model=\"deptForm.sortValue\" :min=\"0\" :max=\"999\" controls-position=\"right\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"deptForm.status\">\n            <el-radio :label=\"1\">正常</el-radio>\n            <el-radio :label=\"0\">停用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"cancelForm\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getDeptTree, addDept, updateDept, deleteDept, getDeptById } from '@/api/dept'\n\n// 表格数据和状态\nconst deptList = ref([])\nconst deptTreeOptions = ref([])\nconst loading = ref(false)\nconst total = ref(0)\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  name: '',\n  leader: '',\n  status: undefined\n})\n\n// 对话框相关\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\nconst deptFormRef = ref(null)\nconst deptForm = reactive({\n  id: undefined,\n  parentId: 0,\n  name: '',\n  leader: '',\n  phone: '',\n  sortValue: 0,\n  status: 1\n})\n\n// 表单验证规则\nconst rules = {\n  name: [\n    { required: true, message: '请输入部门名称', trigger: 'blur' },\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n  ],\n  parentId: [\n    { required: true, message: '请选择上级部门', trigger: 'change' }\n  ],\n  sortValue: [\n    { required: true, message: '请输入排序', trigger: 'blur' }\n  ],\n  status: [\n    { required: true, message: '请选择状态', trigger: 'change' }\n  ]\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1  // 确保有值\n  queryParams.pageSize = queryParams.pageSize || 10  // 确保有值\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.name = ''\n  queryParams.leader = ''\n  queryParams.status = undefined\n  queryParams.pageNum = 1  // 确保有值\n  queryParams.pageSize = 10  // 确保有值 \n  getList()\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 获取部门树\nconst getList = async () => {\n  try {\n    loading.value = true\n    \n    // 确保必填参数存在\n    const params = {\n      pageSize: queryParams.pageSize || 10,\n      pageNum: queryParams.pageNum || 1,\n      name: queryParams.name,\n      leader: queryParams.leader,\n      status: queryParams.status\n    }\n    \n    // 获取部门列表数据，传递分页参数\n    const res = await getDeptTree(params)\n    console.log('部门列表响应:', res)\n    \n    // 处理后端返回的数据\n    if (res.data && res.data.items) {\n      // 使用后端返回的数据\n      deptList.value = res.data.items || []\n      total.value = res.data.total || 0\n      \n      // 构建部门树结构\n      deptList.value = deptList.value.map(item => ({\n        ...item,\n        parentId: item.parentId || 0, // 确保parentId不为空\n        children: [] // 初始化children数组\n      }))\n      \n      // 构建树形选择器数据\n      deptTreeOptions.value = [{ id: 0, name: '顶级部门', parentId: -1 }].concat(\n        deptList.value.map(item => ({\n          id: item.id,\n          name: item.name,\n          parentId: item.parentId\n        }))\n      )\n    } else {\n      deptList.value = []\n      deptTreeOptions.value = [{ id: 0, name: '顶级部门', parentId: -1 }]\n      total.value = 0\n    }\n  } catch (error) {\n    console.error('获取部门列表失败', error)\n    ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n  } finally {\n    loading.value = false\n  }\n}\n\n// 重置表单\nconst resetForm = () => {\n  deptForm.id = undefined\n  deptForm.parentId = 0\n  deptForm.name = ''\n  deptForm.leader = ''\n  deptForm.phone = ''\n  deptForm.sortValue = 0\n  deptForm.status = 1\n  nextTick(() => {\n    deptFormRef.value?.resetFields()\n  })\n}\n\n// 新增部门\nconst handleAdd = () => {\n  resetForm()\n  dialogTitle.value = '新增部门'\n  dialogVisible.value = true\n}\n\n// 编辑部门\nconst handleEdit = async (row) => {\n  resetForm()\n  dialogTitle.value = '编辑部门'\n  dialogVisible.value = true\n  \n  // 获取最新的部门信息\n  try {\n    const res = await getDeptById(row.id)\n    if (res.data) {\n      // 填充表单数据\n      Object.assign(deptForm, res.data)\n    }\n  } catch (error) {\n    ElMessage.error('获取部门信息失败')\n  }\n}\n\n// 删除部门\nconst handleDelete = (row) => {\n  ElMessageBox.confirm(`确定要删除部门 ${row.name} 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await deleteDept(row.id)\n      ElMessage.success('删除成功')\n      getList()\n    } catch (error) {\n      ElMessage.error('删除失败')\n    }\n  }).catch(() => {})\n}\n\n// 取消表单\nconst cancelForm = () => {\n  dialogVisible.value = false\n  resetForm()\n}\n\n// 提交表单\nconst submitForm = async () => {\n  deptFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        if (deptForm.id) {\n          // 编辑部门\n          await updateDept(deptForm)\n          ElMessage.success('修改部门成功')\n        } else {\n          // 新增部门\n          await addDept(deptForm)\n          ElMessage.success('新增部门成功')\n        }\n        dialogVisible.value = false\n        getList()\n      } catch (error) {\n        console.error('操作失败', error)\n        ElMessage.error('操作失败，请稍后重试')\n      }\n    }\n  })\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style> ","import script from \"./SysDept.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SysDept.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SysDept.vue?vue&type=style&index=0&id=3c1b736c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3c1b736c\"]])\n\nexport default __exports__"],"names":["getDeptTree","params","queryParams","pageSize","pageNum","request","url","method","getDeptById","id","addDept","data","updateDept","deleteDept","deptList","ref","deptTreeOptions","loading","total","reactive","name","leader","status","undefined","dialogVisible","dialogTitle","deptFormRef","deptForm","parentId","phone","sortValue","rules","required","message","trigger","min","max","handleQuery","getList","resetQuery","handleSizeChange","size","handleCurrentChange","page","async","value","res","console","log","items","map","item","children","concat","error","ElMessage","resetForm","nextTick","resetFields","handleAdd","handleEdit","row","Object","assign","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","cancelForm","submitForm","validate","valid","onMounted","__exports__"],"sourceRoot":""}