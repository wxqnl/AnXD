{"ast":null,"code":"import request from '@/utils/request';\n\n// 获取部门列表 - 使用模拟数据\nexport function getDeptTree(params) {\n  console.log('模拟部门列表查询:', params);\n\n  // 返回一个Promise，模拟API响应\n  return new Promise(resolve => {\n    setTimeout(() => {\n      // 模拟的部门数据\n      const mockDepts = [{\n        id: 1,\n        name: '总公司',\n        parentId: 0,\n        leader: '张三',\n        phone: '13800138000',\n        status: 1,\n        sortValue: 1\n      }, {\n        id: 2,\n        name: '研发部',\n        parentId: 1,\n        leader: '李四',\n        phone: '13900139000',\n        status: 1,\n        sortValue: 1\n      }, {\n        id: 3,\n        name: '市场部',\n        parentId: 1,\n        leader: '王五',\n        phone: '13700137000',\n        status: 1,\n        sortValue: 2\n      }, {\n        id: 4,\n        name: '销售部',\n        parentId: 1,\n        leader: '赵六',\n        phone: '13600136000',\n        status: 1,\n        sortValue: 3\n      }, {\n        id: 5,\n        name: '财务部',\n        parentId: 1,\n        leader: '钱七',\n        phone: '13500135000',\n        status: 1,\n        sortValue: 4\n      }];\n\n      // 筛选逻辑\n      let filteredDepts = [...mockDepts];\n      if (params.name) {\n        filteredDepts = filteredDepts.filter(dept => dept.name.includes(params.name));\n      }\n      if (params.leader) {\n        filteredDepts = filteredDepts.filter(dept => dept.leader.includes(params.leader));\n      }\n      if (params.status !== undefined && params.status !== null) {\n        filteredDepts = filteredDepts.filter(dept => dept.status === params.status);\n      }\n\n      // 计算总数\n      const total = filteredDepts.length;\n\n      // 分页逻辑\n      const pageSize = params.pageSize || 10;\n      const pageNum = params.pageNum || 1;\n      const startIndex = (pageNum - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const items = filteredDepts.slice(startIndex, endIndex);\n\n      // 构造返回数据\n      resolve({\n        code: 200,\n        message: '成功',\n        data: {\n          items,\n          total\n        }\n      });\n    }, 300); // 模拟网络延迟\n  });\n}\n\n// 获取部门详情 - 使用模拟数据\nexport function getDeptById(id) {\n  // 模拟的部门数据\n  const mockDepts = [{\n    id: 1,\n    name: '总公司',\n    parentId: 0,\n    leader: '张三',\n    phone: '13800138000',\n    status: 1,\n    sortValue: 1\n  }, {\n    id: 2,\n    name: '研发部',\n    parentId: 1,\n    leader: '李四',\n    phone: '13900139000',\n    status: 1,\n    sortValue: 1\n  }, {\n    id: 3,\n    name: '市场部',\n    parentId: 1,\n    leader: '王五',\n    phone: '13700137000',\n    status: 1,\n    sortValue: 2\n  }, {\n    id: 4,\n    name: '销售部',\n    parentId: 1,\n    leader: '赵六',\n    phone: '13600136000',\n    status: 1,\n    sortValue: 3\n  }, {\n    id: 5,\n    name: '财务部',\n    parentId: 1,\n    leader: '钱七',\n    phone: '13500135000',\n    status: 1,\n    sortValue: 4\n  }];\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const dept = mockDepts.find(d => d.id === Number(id));\n      resolve({\n        code: 200,\n        message: '成功',\n        data: dept || null\n      });\n    }, 300);\n  });\n}\n\n// 添加部门 - 模拟\nexport function addDept(data) {\n  console.log('模拟添加部门:', data);\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        message: '添加成功',\n        data: null\n      });\n    }, 300);\n  });\n}\n\n// 更新部门 - 模拟\nexport function updateDept(data) {\n  console.log('模拟更新部门:', data);\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        message: '更新成功',\n        data: null\n      });\n    }, 300);\n  });\n}\n\n// 删除部门 - 模拟\nexport function deleteDept(id) {\n  console.log('模拟删除部门:', id);\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        message: '删除成功',\n        data: null\n      });\n    }, 300);\n  });\n}","map":{"version":3,"names":["request","getDeptTree","params","console","log","Promise","resolve","setTimeout","mockDepts","id","name","parentId","leader","phone","status","sortValue","filteredDepts","filter","dept","includes","undefined","total","length","pageSize","pageNum","startIndex","endIndex","items","slice","code","message","data","getDeptById","find","d","Number","addDept","updateDept","deleteDept"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/api/dept.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 获取部门列表 - 使用模拟数据\nexport function getDeptTree(params) {\n  console.log('模拟部门列表查询:', params);\n  \n  // 返回一个Promise，模拟API响应\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      // 模拟的部门数据\n      const mockDepts = [\n        { \n          id: 1, \n          name: '总公司', \n          parentId: 0, \n          leader: '张三', \n          phone: '13800138000', \n          status: 1,\n          sortValue: 1\n        },\n        { \n          id: 2, \n          name: '研发部', \n          parentId: 1, \n          leader: '李四', \n          phone: '13900139000', \n          status: 1,\n          sortValue: 1 \n        },\n        { \n          id: 3, \n          name: '市场部', \n          parentId: 1, \n          leader: '王五', \n          phone: '13700137000', \n          status: 1,\n          sortValue: 2\n        },\n        { \n          id: 4, \n          name: '销售部', \n          parentId: 1, \n          leader: '赵六', \n          phone: '13600136000', \n          status: 1,\n          sortValue: 3\n        },\n        { \n          id: 5, \n          name: '财务部', \n          parentId: 1, \n          leader: '钱七', \n          phone: '13500135000', \n          status: 1,\n          sortValue: 4\n        }\n      ];\n      \n      // 筛选逻辑\n      let filteredDepts = [...mockDepts];\n      if (params.name) {\n        filteredDepts = filteredDepts.filter(dept => dept.name.includes(params.name));\n      }\n      if (params.leader) {\n        filteredDepts = filteredDepts.filter(dept => dept.leader.includes(params.leader));\n      }\n      if (params.status !== undefined && params.status !== null) {\n        filteredDepts = filteredDepts.filter(dept => dept.status === params.status);\n      }\n      \n      // 计算总数\n      const total = filteredDepts.length;\n      \n      // 分页逻辑\n      const pageSize = params.pageSize || 10;\n      const pageNum = params.pageNum || 1;\n      const startIndex = (pageNum - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const items = filteredDepts.slice(startIndex, endIndex);\n      \n      // 构造返回数据\n      resolve({\n        code: 200,\n        message: '成功',\n        data: {\n          items,\n          total\n        }\n      });\n    }, 300); // 模拟网络延迟\n  });\n}\n\n// 获取部门详情 - 使用模拟数据\nexport function getDeptById(id) {\n  // 模拟的部门数据\n  const mockDepts = [\n    { \n      id: 1, \n      name: '总公司', \n      parentId: 0, \n      leader: '张三', \n      phone: '13800138000', \n      status: 1,\n      sortValue: 1\n    },\n    { \n      id: 2, \n      name: '研发部', \n      parentId: 1, \n      leader: '李四', \n      phone: '13900139000', \n      status: 1,\n      sortValue: 1 \n    },\n    { \n      id: 3, \n      name: '市场部', \n      parentId: 1, \n      leader: '王五', \n      phone: '13700137000', \n      status: 1,\n      sortValue: 2\n    },\n    { \n      id: 4, \n      name: '销售部', \n      parentId: 1, \n      leader: '赵六', \n      phone: '13600136000', \n      status: 1,\n      sortValue: 3\n    },\n    { \n      id: 5, \n      name: '财务部', \n      parentId: 1, \n      leader: '钱七', \n      phone: '13500135000', \n      status: 1,\n      sortValue: 4\n    }\n  ];\n  \n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const dept = mockDepts.find(d => d.id === Number(id));\n      resolve({\n        code: 200,\n        message: '成功',\n        data: dept || null\n      });\n    }, 300);\n  });\n}\n\n// 添加部门 - 模拟\nexport function addDept(data) {\n  console.log('模拟添加部门:', data);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        message: '添加成功',\n        data: null\n      });\n    }, 300);\n  });\n}\n\n// 更新部门 - 模拟\nexport function updateDept(data) {\n  console.log('模拟更新部门:', data);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        message: '更新成功',\n        data: null\n      });\n    }, 300);\n  });\n}\n\n// 删除部门 - 模拟\nexport function deleteDept(id) {\n  console.log('模拟删除部门:', id);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        message: '删除成功',\n        data: null\n      });\n    }, 300);\n  });\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}