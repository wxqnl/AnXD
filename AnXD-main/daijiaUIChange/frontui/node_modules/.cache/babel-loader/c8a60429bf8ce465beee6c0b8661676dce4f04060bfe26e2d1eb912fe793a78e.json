{"ast":null,"code":"import request from '@/utils/request';\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  });\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  });\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  });\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  });\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  });\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 确保ID字段为字符串类型\n  if (data.id !== undefined && data.id !== null && typeof data.id !== 'string') {\n    data.id = String(data.id);\n  }\n\n  // 确保数字类型字段为正确的类型\n  if (data.deptId !== undefined && data.deptId !== null) {\n    data.deptId = Number(data.deptId);\n  }\n  if (data.postId !== undefined && data.postId !== null) {\n    data.postId = Number(data.postId);\n  }\n  if (data.status !== undefined && data.status !== null) {\n    data.status = Number(data.status);\n  }\n\n  // 移除可能导致问题的未定义字段\n  const cleanData = {};\n  Object.keys(data).forEach(key => {\n    if (data[key] !== undefined) {\n      cleanData[key] = data[key];\n    }\n  });\n  console.log('API发送格式化后的数据:', cleanData);\n\n  // 模仿CustomerInfoController的update方法，使用POST请求并发送表单数据\n  return request({\n    url: '/sysUser/update',\n    method: 'post',\n    params: cleanData,\n    // 使用params而非data，作为URL参数发送而非JSON正文\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  });\n}\n\n// 获取用户登录日志 - 使用get方法并格式化参数\nexport function getUserLoginLog(params) {\n  // 确保参数类型正确并且移除undefined值\n  const requestParams = {\n    pageNum: params.pageNum || 1,\n    pageSize: params.pageSize || 10\n  };\n\n  // 仅添加有值的参数\n  if (params.username) requestParams.username = params.username;\n  if (params.minAccessTime) requestParams.minAccessTime = params.minAccessTime;\n  if (params.maxAccessTime) requestParams.maxAccessTime = params.maxAccessTime;\n  console.log('登录日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志 - 使用get方法并格式化参数\nexport function getUserOperLog(params) {\n  // 确保参数类型正确并且移除undefined值\n  const requestParams = {\n    pageNum: params.pageNum || 1,\n    pageSize: params.pageSize || 10\n  };\n\n  // 仅添加有值的参数\n  if (params.operName) requestParams.operName = params.operName;\n  if (params.deptName) requestParams.deptName = params.deptName;\n  if (params.status !== undefined) requestParams.status = params.status;\n  if (params.operatorType) requestParams.operatorType = params.operatorType;\n  if (params.businessType) requestParams.businessType = params.businessType;\n  if (params.requestMethod) requestParams.requestMethod = params.requestMethod;\n  if (params.minOperTime) requestParams.minOperTime = params.minOperTime;\n  if (params.maxOperTime) requestParams.maxOperTime = params.maxOperTime;\n  console.log('操作日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n}","map":{"version":3,"names":["request","login","data","url","method","params","getUserInfo","getAllUsers","getUserById","id","createUser","updateUser","undefined","String","deptId","Number","postId","status","cleanData","Object","keys","forEach","key","console","log","timeout","deleteUser","getUserLoginLog","requestParams","pageNum","pageSize","username","minAccessTime","maxAccessTime","getUserOperLog","operName","deptName","operatorType","businessType","requestMethod","minOperTime","maxOperTime"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/api/user.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  })\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  })\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  })\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  })\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  })\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 确保ID字段为字符串类型\n  if (data.id !== undefined && data.id !== null && typeof data.id !== 'string') {\n    data.id = String(data.id);\n  }\n  \n  // 确保数字类型字段为正确的类型\n  if (data.deptId !== undefined && data.deptId !== null) {\n    data.deptId = Number(data.deptId);\n  }\n  \n  if (data.postId !== undefined && data.postId !== null) {\n    data.postId = Number(data.postId);\n  }\n  \n  if (data.status !== undefined && data.status !== null) {\n    data.status = Number(data.status);\n  }\n  \n  // 移除可能导致问题的未定义字段\n  const cleanData = {};\n  Object.keys(data).forEach(key => {\n    if (data[key] !== undefined) {\n      cleanData[key] = data[key];\n    }\n  });\n  \n  console.log('API发送格式化后的数据:', cleanData);\n  \n  // 模仿CustomerInfoController的update方法，使用POST请求并发送表单数据\n  return request({\n    url: '/sysUser/update',\n    method: 'post',\n    params: cleanData,  // 使用params而非data，作为URL参数发送而非JSON正文\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  })\n}\n\n// 获取用户登录日志 - 使用get方法并格式化参数\nexport function getUserLoginLog(params) {\n  // 确保参数类型正确并且移除undefined值\n  const requestParams = {\n    pageNum: params.pageNum || 1,\n    pageSize: params.pageSize || 10\n  };\n  \n  // 仅添加有值的参数\n  if (params.username) requestParams.username = params.username;\n  if (params.minAccessTime) requestParams.minAccessTime = params.minAccessTime;\n  if (params.maxAccessTime) requestParams.maxAccessTime = params.maxAccessTime;\n  \n  console.log('登录日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志 - 使用get方法并格式化参数\nexport function getUserOperLog(params) {\n  // 确保参数类型正确并且移除undefined值\n  const requestParams = {\n    pageNum: params.pageNum || 1,\n    pageSize: params.pageSize || 10\n  };\n  \n  // 仅添加有值的参数\n  if (params.operName) requestParams.operName = params.operName;\n  if (params.deptName) requestParams.deptName = params.deptName;\n  if (params.status !== undefined) requestParams.status = params.status;\n  if (params.operatorType) requestParams.operatorType = params.operatorType;\n  if (params.businessType) requestParams.businessType = params.businessType;\n  if (params.requestMethod) requestParams.requestMethod = params.requestMethod;\n  if (params.minOperTime) requestParams.minOperTime = params.minOperTime;\n  if (params.maxOperTime) requestParams.maxOperTime = params.maxOperTime;\n  \n  console.log('操作日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}