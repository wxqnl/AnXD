{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"image-container\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_4 = {\n  class: \"image-container\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_6 = {\n  class: \"image-container\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_8 = {\n  class: \"image-container\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_10 = {\n  class: \"image-container\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_12 = {\n  class: \"image-container\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_14 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_15 = {\n  key: 0\n};\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = {\n  key: 2,\n  class: \"empty-data\"\n};\nconst _hoisted_18 = {\n  key: 0\n};\nconst _hoisted_19 = {\n  class: \"income\"\n};\nconst _hoisted_20 = {\n  class: \"withdraw\"\n};\nconst _hoisted_21 = {\n  key: 1,\n  class: \"empty-data\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_23 = {\n  key: 3,\n  class: \"empty-data\"\n};\nimport { ref, reactive, onMounted, nextTick } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getDriverList, updateDriver, removeDriver, getDriverLoginLog, getDriverByName, getDriverAccountDetail, getDriverAccount } from '@/api/driver';\n\n// 查询参数\n\nexport default {\n  __name: 'DriverInfo',\n  setup(__props) {\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      name: '',\n      jobNo: '',\n      phone: '',\n      status: undefined\n    });\n\n    // 表格数据和状态\n    const driverList = ref([]);\n    const loading = ref(false);\n    const total = ref(0);\n\n    // 弹窗相关\n    const dialogVisible = ref(false);\n    const driverFormRef = ref(null);\n    const editActiveTab = ref('basic');\n    const driverForm = reactive({\n      name: '',\n      nickname: '',\n      jobNo: '',\n      phone: '',\n      gender: '',\n      birthday: '',\n      idcardNo: '',\n      idcardAddress: '',\n      idcardExpire: '',\n      idcardFrontUrl: '',\n      // 身份证正面\n      idcardBackUrl: '',\n      // 身份证背面\n      idcardHandUrl: '',\n      // 手持身份证\n      driverLicenseNo: '',\n      driverLicenseClazz: '',\n      driverLicenseExpire: '',\n      driverLicenseIssueDate: '',\n      driverLicenseFrontUrl: '',\n      // 驾驶证正面\n      driverLicenseBackUrl: '',\n      // 行驶证副页\n      driverLicenseHandUrl: '',\n      // 手持驾驶证\n      contactName: '',\n      contactPhone: '',\n      contactRelationship: '',\n      authStatus: 0,\n      status: 1,\n      auditRemark: '' // 审核备注\n    });\n\n    // 日志查看相关\n    const logDialogVisible = ref(false);\n    const logData = ref(null);\n    const logList = ref([]);\n\n    // 账户信息相关\n    const accountDialogVisible = ref(false);\n    const accountData = ref(null);\n    const activeTab = ref('overview');\n    const accountDetailList = ref([]);\n    const accountDetailTotal = ref(0);\n    const detailLoading = ref(false);\n    const currentDriverId = ref('');\n    const accountDetailError = ref('');\n\n    // 账单查询参数\n    const accountDetailQuery = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      dirverId: '',\n      tradeType: '',\n      tradeNo: '',\n      minAmount: undefined,\n      maxAmount: undefined\n    });\n\n    // 司机详情相关\n    const detailDialogVisible = ref(false);\n    const detailForm = reactive({});\n\n    // 表单验证规则\n    const rules = {\n      authStatus: [{\n        required: true,\n        message: '请选择认证状态',\n        trigger: 'change'\n      }],\n      status: [{\n        required: true,\n        message: '请选择状态',\n        trigger: 'change'\n      }]\n    };\n\n    // 获取司机列表\n    const getList = async () => {\n      try {\n        loading.value = true;\n        const res = await getDriverList(queryParams);\n        console.log('司机列表响应:', res);\n        driverList.value = res.data.items || [];\n        total.value = res.data.total || 0;\n      } catch (error) {\n        console.error('获取司机列表失败', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 查询按钮\n    const handleQuery = () => {\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      queryParams.name = '';\n      queryParams.jobNo = '';\n      queryParams.phone = '';\n      queryParams.status = undefined;\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      driverForm.name = '';\n      driverForm.nickname = '';\n      driverForm.jobNo = '';\n      driverForm.phone = '';\n      driverForm.gender = '';\n      driverForm.birthday = '';\n      driverForm.idcardNo = '';\n      driverForm.idcardAddress = '';\n      driverForm.idcardExpire = '';\n      driverForm.idcardFrontUrl = '';\n      driverForm.idcardBackUrl = '';\n      driverForm.idcardHandUrl = '';\n      driverForm.driverLicenseNo = '';\n      driverForm.driverLicenseClazz = '';\n      driverForm.driverLicenseExpire = '';\n      driverForm.driverLicenseIssueDate = '';\n      driverForm.driverLicenseFrontUrl = '';\n      driverForm.driverLicenseBackUrl = '';\n      driverForm.driverLicenseHandUrl = '';\n      driverForm.contactName = '';\n      driverForm.contactPhone = '';\n      driverForm.contactRelationship = '';\n      driverForm.authStatus = 0;\n      driverForm.status = 1;\n      driverForm.auditRemark = '';\n      editActiveTab.value = 'basic';\n      nextTick(() => {\n        driverFormRef.value?.resetFields();\n      });\n    };\n\n    // 编辑司机\n    const handleEdit = async row => {\n      resetForm();\n      dialogVisible.value = true;\n\n      // 获取最新的司机信息\n      try {\n        const res = await getDriverByName(row.name);\n        if (res.data) {\n          // 填充表单数据前处理日期格式\n          const driverData = {\n            ...res.data\n          };\n          if (driverData.birthday) {\n            driverData.birthday = formatDate(driverData.birthday);\n          }\n          if (driverData.idcardExpire) {\n            driverData.idcardExpire = formatDate(driverData.idcardExpire);\n          }\n          if (driverData.driverLicenseExpire) {\n            driverData.driverLicenseExpire = formatDate(driverData.driverLicenseExpire);\n          }\n          if (driverData.driverLicenseIssueDate) {\n            driverData.driverLicenseIssueDate = formatDate(driverData.driverLicenseIssueDate);\n          }\n\n          // 填充表单数据\n          Object.assign(driverForm, driverData);\n        }\n      } catch (error) {\n        ElMessage.error('获取司机信息失败');\n      }\n    };\n\n    // 删除司机\n    const handleDelete = row => {\n      ElMessageBox.confirm(`确定要删除司机 ${row.name} 吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await removeDriver(row.name);\n          ElMessage.success('删除成功');\n          getList();\n        } catch (error) {\n          ElMessage.error('删除失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 查看日志\n    const viewLog = async row => {\n      try {\n        logDialogVisible.value = true;\n        logData.value = null;\n        logList.value = [];\n        const res = await getDriverLoginLog(row.name);\n        console.log('登录日志响应:', res);\n        if (res.data) {\n          // 处理后端返回的数据，后端可能返回单个对象或数组\n          if (Array.isArray(res.data)) {\n            logList.value = res.data.map(item => ({\n              ...item,\n              driverId: item.driver_id || item.driverId,\n              createTime: item.create_time || item.createTime\n            }));\n          } else if (Array.isArray(res.data.items)) {\n            // 如果返回的是分页数据\n            logList.value = res.data.items.map(item => ({\n              ...item,\n              driverId: item.driver_id || item.driverId,\n              createTime: item.create_time || item.createTime\n            }));\n          } else {\n            // 单个对象情况\n            logData.value = {\n              ...res.data,\n              driverId: res.data.driver_id || res.data.driverId,\n              createTime: res.data.create_time || res.data.createTime\n            };\n          }\n        }\n      } catch (error) {\n        console.error('获取登录日志失败', error);\n        ElMessage.error('获取登录日志失败');\n      }\n    };\n\n    // 查看账户信息\n    const viewAccount = async row => {\n      accountDialogVisible.value = true;\n      activeTab.value = 'overview';\n      currentDriverId.value = row.id || row.driverId;\n\n      // 获取账户概览\n      try {\n        const res = await getDriverAccount(currentDriverId.value);\n        accountData.value = res.data;\n      } catch (error) {\n        console.error('获取账户信息失败', error);\n        ElMessage.error('获取账户信息失败');\n        accountData.value = null;\n      }\n\n      // 账单查询参数设置\n      accountDetailQuery.dirverId = currentDriverId.value;\n\n      // 获取账单明细\n      getAccountDetail();\n    };\n\n    // 获取账单明细\n    const getAccountDetail = async () => {\n      try {\n        detailLoading.value = true;\n        accountDetailError.value = '';\n        console.log('账单查询参数:', accountDetailQuery); // 调试日志\n        const res = await getDriverAccountDetail(accountDetailQuery);\n        if (res.data) {\n          accountDetailList.value = res.data.items || [];\n          accountDetailTotal.value = res.data.total || 0;\n        } else {\n          accountDetailList.value = [];\n          accountDetailTotal.value = 0;\n          accountDetailError.value = '服务器返回数据为空';\n        }\n      } catch (error) {\n        console.error('获取账单明细失败', error);\n        accountDetailList.value = [];\n        accountDetailTotal.value = 0;\n        accountDetailError.value = error.message || '获取账单明细数据失败';\n      } finally {\n        detailLoading.value = false;\n      }\n    };\n\n    // 重试获取账单明细\n    const retryGetAccountDetail = () => {\n      getAccountDetail();\n    };\n\n    // 账单分页操作\n    const handleDetailSizeChange = size => {\n      accountDetailQuery.pageSize = size;\n      getAccountDetail();\n    };\n    const handleDetailCurrentChange = page => {\n      accountDetailQuery.pageNum = page;\n      getAccountDetail();\n    };\n\n    // 交易类型标签颜色\n    const getTradeTypeTag = type => {\n      const typeMap = {\n        '1': 'success',\n        // 订单收入\n        '2': 'danger',\n        // 提现\n        '3': 'warning',\n        // 退款\n        '4': 'info' // 其他\n      };\n      return typeMap[type] || 'info';\n    };\n\n    // 交易类型名称\n    const getTradeTypeName = type => {\n      const typeMap = {\n        '1': '订单收入',\n        '2': '提现',\n        '3': '退款',\n        '4': '其他'\n      };\n      return typeMap[type] || '未知类型';\n    };\n\n    // 取消表单\n    const cancelForm = () => {\n      dialogVisible.value = false;\n      resetForm();\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      driverFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            // 创建一个新对象，只包含需要更新的字段\n            const updateData = {\n              name: driverForm.name,\n              nickname: driverForm.nickname || '',\n              avatarUrl: driverForm.avatarUrl || '',\n              phone: driverForm.phone || '',\n              gender: driverForm.gender || '',\n              score: driverForm.score || 0,\n              status: driverForm.status,\n              authStatus: driverForm.authStatus\n            };\n            console.log('提交的司机数据:', updateData);\n\n            // 编辑司机\n            const res = await updateDriver(updateData);\n            ElMessage.success('修改司机信息成功');\n            dialogVisible.value = false;\n            getList();\n          } catch (error) {\n            console.error('操作失败', error);\n            ElMessage.error('操作失败，请稍后重试');\n          }\n        }\n      });\n    };\n\n    // 分页操作\n    const handleSizeChange = size => {\n      queryParams.pageSize = size;\n      getList();\n    };\n    const handleCurrentChange = page => {\n      queryParams.pageNum = page;\n      getList();\n    };\n\n    // 格式化日期时间\n    const formatDateTime = dateTime => {\n      if (!dateTime) return '未记录';\n      try {\n        // 处理ISO格式时间\n        const date = new Date(dateTime);\n        if (isNaN(date.getTime())) return dateTime; // 如果无法解析则返回原始值\n\n        return date.toLocaleString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: false\n        }).replace(/\\//g, '-');\n      } catch (e) {\n        console.error('日期格式化错误', e);\n        return dateTime;\n      }\n    };\n\n    // 获取认证状态类型\n    const getAuthStatusType = status => {\n      const typeMap = {\n        0: 'info',\n        // 未认证\n        1: 'success',\n        // 已认证\n        2: 'warning',\n        // 认证中\n        3: 'danger' // 认证失败\n      };\n      return typeMap[status] || 'info';\n    };\n\n    // 获取认证状态名称\n    const getAuthStatusName = status => {\n      const nameMap = {\n        0: '未认证',\n        1: '已认证',\n        2: '认证中',\n        3: '认证失败'\n      };\n      return nameMap[status] || '未知';\n    };\n\n    // 格式化日期\n    const formatDate = date => {\n      if (!date) return '';\n      if (typeof date === 'string' && date.includes('T')) {\n        // 处理ISO格式日期\n        return date.split('T')[0];\n      }\n      if (date instanceof Date) {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n        return `${year}-${month}-${day}`;\n      }\n      return date;\n    };\n\n    // 查看司机详情\n    const viewDetail = async row => {\n      try {\n        detailDialogVisible.value = true;\n        const res = await getDriverByName(row.name);\n        if (res.data) {\n          Object.assign(detailForm, res.data);\n        }\n      } catch (error) {\n        console.error('获取司机详情失败', error);\n        ElMessage.error('获取司机详情失败');\n      }\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getList();\n    });\n    return (_ctx, _cache) => {\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n      const _component_el_option = _resolveComponent(\"el-option\");\n      const _component_el_select = _resolveComponent(\"el-select\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_form = _resolveComponent(\"el-form\");\n      const _component_el_card = _resolveComponent(\"el-card\");\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n      const _component_el_tag = _resolveComponent(\"el-tag\");\n      const _component_el_table = _resolveComponent(\"el-table\");\n      const _component_el_pagination = _resolveComponent(\"el-pagination\");\n      const _component_el_col = _resolveComponent(\"el-col\");\n      const _component_el_row = _resolveComponent(\"el-row\");\n      const _component_el_divider = _resolveComponent(\"el-divider\");\n      const _component_el_radio = _resolveComponent(\"el-radio\");\n      const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n      const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n      const _component_el_image = _resolveComponent(\"el-image\");\n      const _component_el_tabs = _resolveComponent(\"el-tabs\");\n      const _component_el_dialog = _resolveComponent(\"el-dialog\");\n      const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n      const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n      const _component_el_alert = _resolveComponent(\"el-alert\");\n      const _directive_loading = _resolveDirective(\"loading\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n        class: \"search-card\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          model: queryParams,\n          ref: \"queryForm\",\n          inline: true,\n          class: \"search-form\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"司机姓名\",\n            prop: \"name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: queryParams.name,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => queryParams.name = $event),\n              placeholder: \"请输入司机姓名\",\n              clearable: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"工号\",\n            prop: \"jobNo\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: queryParams.jobNo,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => queryParams.jobNo = $event),\n              placeholder: \"请输入工号\",\n              clearable: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"手机号\",\n            prop: \"phone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: queryParams.phone,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => queryParams.phone = $event),\n              placeholder: \"请输入手机号\",\n              clearable: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"状态\",\n            prop: \"status\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: queryParams.status,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => queryParams.status = $event),\n              placeholder: \"请选择状态\",\n              clearable: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"正常\",\n                value: 1\n              }), _createVNode(_component_el_option, {\n                label: \"停用\",\n                value: 0\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: handleQuery\n            }, {\n              default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"查询\")])),\n              _: 1\n            }), _createVNode(_component_el_button, {\n              onClick: resetQuery\n            }, {\n              default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"重置\")])),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"model\"])]),\n        _: 1\n      }), _createVNode(_component_el_card, null, {\n        header: _withCtx(() => _cache[23] || (_cache[23] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"司机列表\")], -1)])),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          data: driverList.value,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            type: \"index\",\n            label: \"#\",\n            width: \"50\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"司机姓名\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"jobNo\",\n            label: \"工号\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"phone\",\n            label: \"手机号\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"gender\",\n            label: \"性别\",\n            width: \"60\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"nickname\",\n            label: \"昵称\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"driverLicenseClazz\",\n            label: \"准驾车型\",\n            width: \"80\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"score\",\n            label: \"评分\",\n            width: \"80\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.score || '暂无'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            prop: \"orderCount\",\n            label: \"订单量\",\n            width: \"80\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.orderCount || 0), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            prop: \"authStatus\",\n            label: \"认证状态\",\n            width: \"100\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: getAuthStatusType(scope.row.authStatus)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(getAuthStatusName(scope.row.authStatus)), 1)]),\n              _: 2\n            }, 1032, [\"type\"])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"80\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: scope.row.status === 1 ? 'success' : 'danger'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.status === 1 ? '正常' : '停用'), 1)]),\n              _: 2\n            }, 1032, [\"type\"])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"350\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              link: \"\",\n              onClick: $event => handleEdit(scope.row)\n            }, {\n              default: _withCtx(() => _cache[24] || (_cache[24] = [_createTextVNode(\"编辑\")])),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"danger\",\n              link: \"\",\n              onClick: $event => handleDelete(scope.row)\n            }, {\n              default: _withCtx(() => _cache[25] || (_cache[25] = [_createTextVNode(\"删除\")])),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"info\",\n              link: \"\",\n              onClick: $event => viewLog(scope.row)\n            }, {\n              default: _withCtx(() => _cache[26] || (_cache[26] = [_createTextVNode(\"查看日志\")])),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"success\",\n              link: \"\",\n              onClick: $event => viewAccount(scope.row)\n            }, {\n              default: _withCtx(() => _cache[27] || (_cache[27] = [_createTextVNode(\"查看账户\")])),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"warning\",\n              link: \"\",\n              onClick: $event => viewDetail(scope.row)\n            }, {\n              default: _withCtx(() => _cache[28] || (_cache[28] = [_createTextVNode(\"查看详情\")])),\n              _: 2\n            }, 1032, [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"data\"])), [[_directive_loading, loading.value]]), total.value > 0 ? (_openBlock(), _createBlock(_component_el_pagination, {\n          key: 0,\n          \"current-page\": queryParams.pageNum,\n          \"onUpdate:currentPage\": _cache[4] || (_cache[4] = $event => queryParams.pageNum = $event),\n          \"page-size\": queryParams.pageSize,\n          \"onUpdate:pageSize\": _cache[5] || (_cache[5] = $event => queryParams.pageSize = $event),\n          \"page-sizes\": [10, 20, 50, 100],\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          total: total.value,\n          onSizeChange: handleSizeChange,\n          onCurrentChange: handleCurrentChange\n        }, null, 8, [\"current-page\", \"page-size\", \"total\"])) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }), _createVNode(_component_el_dialog, {\n        title: \"司机审核\",\n        modelValue: dialogVisible.value,\n        \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => dialogVisible.value = $event),\n        width: \"800px\",\n        \"append-to-body\": \"\",\n        \"close-on-click-modal\": false\n      }, {\n        footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_button, {\n          onClick: cancelForm\n        }, {\n          default: _withCtx(() => _cache[38] || (_cache[38] = [_createTextVNode(\"取消\")])),\n          _: 1\n        }), _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: submitForm\n        }, {\n          default: _withCtx(() => _cache[39] || (_cache[39] = [_createTextVNode(\"提交审核\")])),\n          _: 1\n        })])]),\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          ref_key: \"driverFormRef\",\n          ref: driverFormRef,\n          model: driverForm,\n          rules: rules,\n          \"label-width\": \"120px\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tabs, {\n            modelValue: editActiveTab.value,\n            \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => editActiveTab.value = $event)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n              label: \"基本信息\",\n              name: \"basic\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_row, {\n                gutter: 20\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_col, {\n                  span: 12\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                    label: \"司机姓名\",\n                    prop: \"name\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_el_input, {\n                      modelValue: driverForm.name,\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => driverForm.name = $event),\n                      disabled: \"\"\n                    }, null, 8, [\"modelValue\"])]),\n                    _: 1\n                  })]),\n                  _: 1\n                }), _createVNode(_component_el_col, {\n                  span: 12\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                    label: \"手机号码\",\n                    prop: \"phone\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_el_input, {\n                      modelValue: driverForm.phone,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => driverForm.phone = $event),\n                      disabled: \"\"\n                    }, null, 8, [\"modelValue\"])]),\n                    _: 1\n                  })]),\n                  _: 1\n                })]),\n                _: 1\n              }), _createVNode(_component_el_row, {\n                gutter: 20\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_col, {\n                  span: 12\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                    label: \"身份证号\",\n                    prop: \"idcardNo\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_el_input, {\n                      modelValue: driverForm.idcardNo,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => driverForm.idcardNo = $event),\n                      disabled: \"\"\n                    }, null, 8, [\"modelValue\"])]),\n                    _: 1\n                  })]),\n                  _: 1\n                }), _createVNode(_component_el_col, {\n                  span: 12\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                    label: \"驾驶证号\",\n                    prop: \"driverLicenseNo\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_el_input, {\n                      modelValue: driverForm.driverLicenseNo,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => driverForm.driverLicenseNo = $event),\n                      disabled: \"\"\n                    }, null, 8, [\"modelValue\"])]),\n                    _: 1\n                  })]),\n                  _: 1\n                })]),\n                _: 1\n              }), _createVNode(_component_el_divider, {\n                \"content-position\": \"center\"\n              }, {\n                default: _withCtx(() => _cache[29] || (_cache[29] = [_createTextVNode(\"审核信息\")])),\n                _: 1\n              }), _createVNode(_component_el_row, {\n                gutter: 20\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_col, {\n                  span: 12\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                    label: \"认证状态\",\n                    prop: \"authStatus\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_el_select, {\n                      modelValue: driverForm.authStatus,\n                      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => driverForm.authStatus = $event),\n                      placeholder: \"请选择认证状态\"\n                    }, {\n                      default: _withCtx(() => [_createVNode(_component_el_option, {\n                        label: \"未认证\",\n                        value: 0\n                      }), _createVNode(_component_el_option, {\n                        label: \"已认证\",\n                        value: 1\n                      }), _createVNode(_component_el_option, {\n                        label: \"认证中\",\n                        value: 2\n                      }), _createVNode(_component_el_option, {\n                        label: \"认证失败\",\n                        value: 3\n                      })]),\n                      _: 1\n                    }, 8, [\"modelValue\"])]),\n                    _: 1\n                  })]),\n                  _: 1\n                }), _createVNode(_component_el_col, {\n                  span: 12\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                    label: \"账户状态\",\n                    prop: \"status\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n                      modelValue: driverForm.status,\n                      \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => driverForm.status = $event)\n                    }, {\n                      default: _withCtx(() => [_createVNode(_component_el_radio, {\n                        value: 1\n                      }, {\n                        default: _withCtx(() => _cache[30] || (_cache[30] = [_createTextVNode(\"正常\")])),\n                        _: 1\n                      }), _createVNode(_component_el_radio, {\n                        value: 0\n                      }, {\n                        default: _withCtx(() => _cache[31] || (_cache[31] = [_createTextVNode(\"停用\")])),\n                        _: 1\n                      })]),\n                      _: 1\n                    }, 8, [\"modelValue\"])]),\n                    _: 1\n                  })]),\n                  _: 1\n                })]),\n                _: 1\n              }), _createVNode(_component_el_form_item, {\n                label: \"审核备注\",\n                prop: \"auditRemark\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_input, {\n                  modelValue: driverForm.auditRemark,\n                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => driverForm.auditRemark = $event),\n                  type: \"textarea\",\n                  placeholder: \"请输入审核备注信息，如拒绝原因等\",\n                  rows: \"3\"\n                }, null, 8, [\"modelValue\"])]),\n                _: 1\n              })]),\n              _: 1\n            }), _createVNode(_component_el_tab_pane, {\n              label: \"身份证照片\",\n              name: \"idcard\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_row, {\n                gutter: 20\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_col, {\n                  span: 8\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[32] || (_cache[32] = _createElementVNode(\"p\", {\n                    class: \"image-title\"\n                  }, \"身份证正面\", -1)), driverForm.idcardFrontUrl ? (_openBlock(), _createBlock(_component_el_image, {\n                    key: 0,\n                    src: driverForm.idcardFrontUrl,\n                    fit: \"contain\",\n                    \"preview-src-list\": [driverForm.idcardFrontUrl]\n                  }, null, 8, [\"src\", \"preview-src-list\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"未上传\"))])]),\n                  _: 1\n                }), _createVNode(_component_el_col, {\n                  span: 8\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_cache[33] || (_cache[33] = _createElementVNode(\"p\", {\n                    class: \"image-title\"\n                  }, \"身份证背面\", -1)), driverForm.idcardBackUrl ? (_openBlock(), _createBlock(_component_el_image, {\n                    key: 0,\n                    src: driverForm.idcardBackUrl,\n                    fit: \"contain\",\n                    \"preview-src-list\": [driverForm.idcardBackUrl]\n                  }, null, 8, [\"src\", \"preview-src-list\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"未上传\"))])]),\n                  _: 1\n                }), _createVNode(_component_el_col, {\n                  span: 8\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_cache[34] || (_cache[34] = _createElementVNode(\"p\", {\n                    class: \"image-title\"\n                  }, \"手持身份证\", -1)), driverForm.idcardHandUrl ? (_openBlock(), _createBlock(_component_el_image, {\n                    key: 0,\n                    src: driverForm.idcardHandUrl,\n                    fit: \"contain\",\n                    \"preview-src-list\": [driverForm.idcardHandUrl]\n                  }, null, 8, [\"src\", \"preview-src-list\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"未上传\"))])]),\n                  _: 1\n                })]),\n                _: 1\n              })]),\n              _: 1\n            }), _createVNode(_component_el_tab_pane, {\n              label: \"驾驶证照片\",\n              name: \"license\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_row, {\n                gutter: 20\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_col, {\n                  span: 8\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_8, [_cache[35] || (_cache[35] = _createElementVNode(\"p\", {\n                    class: \"image-title\"\n                  }, \"驾驶证正面\", -1)), driverForm.driverLicenseFrontUrl ? (_openBlock(), _createBlock(_component_el_image, {\n                    key: 0,\n                    src: driverForm.driverLicenseFrontUrl,\n                    fit: \"contain\",\n                    \"preview-src-list\": [driverForm.driverLicenseFrontUrl]\n                  }, null, 8, [\"src\", \"preview-src-list\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"未上传\"))])]),\n                  _: 1\n                }), _createVNode(_component_el_col, {\n                  span: 8\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_cache[36] || (_cache[36] = _createElementVNode(\"p\", {\n                    class: \"image-title\"\n                  }, \"行驶证副页\", -1)), driverForm.driverLicenseBackUrl ? (_openBlock(), _createBlock(_component_el_image, {\n                    key: 0,\n                    src: driverForm.driverLicenseBackUrl,\n                    fit: \"contain\",\n                    \"preview-src-list\": [driverForm.driverLicenseBackUrl]\n                  }, null, 8, [\"src\", \"preview-src-list\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"未上传\"))])]),\n                  _: 1\n                }), _createVNode(_component_el_col, {\n                  span: 8\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_cache[37] || (_cache[37] = _createElementVNode(\"p\", {\n                    class: \"image-title\"\n                  }, \"手持驾驶证\", -1)), driverForm.driverLicenseHandUrl ? (_openBlock(), _createBlock(_component_el_image, {\n                    key: 0,\n                    src: driverForm.driverLicenseHandUrl,\n                    fit: \"contain\",\n                    \"preview-src-list\": [driverForm.driverLicenseHandUrl]\n                  }, null, 8, [\"src\", \"preview-src-list\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"未上传\"))])]),\n                  _: 1\n                })]),\n                _: 1\n              })]),\n              _: 1\n            })]),\n            _: 1\n          }, 8, [\"modelValue\"])]),\n          _: 1\n        }, 8, [\"model\"])]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n        title: \"司机登录日志\",\n        modelValue: logDialogVisible.value,\n        \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => logDialogVisible.value = $event),\n        width: \"800px\"\n      }, {\n        default: _withCtx(() => [logData.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_table, {\n          data: [logData.value],\n          border: \"\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"driverId\",\n            label: \"司机ID\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"msg\",\n            label: \"登录消息\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"ipaddr\",\n            label: \"IP地址\",\n            width: \"150\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.ipaddr || '未记录'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"100\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: scope.row.status ? 'success' : 'info'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.status ? '成功' : '小程序登录'), 1)]),\n              _: 2\n            }, 1032, [\"type\"])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"登录时间\",\n            width: \"180\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(formatDateTime(scope.row.createTime)), 1)]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"data\"])])) : logList.value && logList.value.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createVNode(_component_el_table, {\n          data: logList.value,\n          border: \"\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"driverId\",\n            label: \"司机ID\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"msg\",\n            label: \"登录消息\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"ipaddr\",\n            label: \"IP地址\",\n            width: \"150\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.ipaddr || '未记录'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"100\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: scope.row.status ? 'success' : 'info'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.status ? '成功' : '小程序登录'), 1)]),\n              _: 2\n            }, 1032, [\"type\"])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"登录时间\",\n            width: \"180\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(formatDateTime(scope.row.createTime)), 1)]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"data\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \" 暂无登录日志数据 \"))]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n        title: \"司机账户信息\",\n        modelValue: accountDialogVisible.value,\n        \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => accountDialogVisible.value = $event),\n        width: \"700px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tabs, {\n          modelValue: activeTab.value,\n          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => activeTab.value = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"账户概览\",\n            name: \"overview\"\n          }, {\n            default: _withCtx(() => [accountData.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createVNode(_component_el_descriptions, {\n              column: 2,\n              border: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n                label: \"司机ID\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(accountData.value.driverId), 1)]),\n                _: 1\n              }), _createVNode(_component_el_descriptions_item, {\n                label: \"司机姓名\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(accountData.value.driverName || '未知'), 1)]),\n                _: 1\n              }), _createVNode(_component_el_descriptions_item, {\n                label: \"总收入\"\n              }, {\n                default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_19, \"¥ \" + _toDisplayString(accountData.value.totalIncome || '0.00'), 1)]),\n                _: 1\n              }), _createVNode(_component_el_descriptions_item, {\n                label: \"可提现金额\"\n              }, {\n                default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_20, \"¥ \" + _toDisplayString(accountData.value.availableAmount || '0.00'), 1)]),\n                _: 1\n              }), _createVNode(_component_el_descriptions_item, {\n                label: \"冻结金额\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"¥ \" + _toDisplayString(accountData.value.frozenAmount || '0.00'), 1)]),\n                _: 1\n              }), _createVNode(_component_el_descriptions_item, {\n                label: \"已提现金额\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"¥ \" + _toDisplayString(accountData.value.withdrawAmount || '0.00'), 1)]),\n                _: 1\n              }), _createVNode(_component_el_descriptions_item, {\n                label: \"账户状态\",\n                span: 2\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_tag, {\n                  type: accountData.value.status === 1 ? 'success' : 'danger'\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(accountData.value.status === 1 ? '正常' : '冻结'), 1)]),\n                  _: 1\n                }, 8, [\"type\"])]),\n                _: 1\n              })]),\n              _: 1\n            })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, \" 暂无账户信息数据 \"))]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"账单明细\",\n            name: \"detail\"\n          }, {\n            default: _withCtx(() => [accountDetailError.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createVNode(_component_el_alert, {\n              title: \"获取账单明细失败\",\n              type: \"error\",\n              closable: false,\n              \"show-icon\": \"\"\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(accountDetailError.value), 1), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"primary\",\n                onClick: retryGetAccountDetail\n              }, {\n                default: _withCtx(() => _cache[40] || (_cache[40] = [_createTextVNode(\"重试\")])),\n                _: 1\n              })]),\n              _: 1\n            })])) : _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n              key: 1,\n              data: accountDetailList.value,\n              border: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_table_column, {\n                type: \"index\",\n                label: \"#\",\n                width: \"50\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"tradeNo\",\n                label: \"交易号\",\n                width: \"180\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"tradeType\",\n                label: \"交易类型\"\n              }, {\n                default: _withCtx(scope => [_createVNode(_component_el_tag, {\n                  type: getTradeTypeTag(scope.row.tradeType)\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(getTradeTypeName(scope.row.tradeType)), 1)]),\n                  _: 2\n                }, 1032, [\"type\"])]),\n                _: 1\n              }), _createVNode(_component_el_table_column, {\n                prop: \"amount\",\n                label: \"金额\"\n              }, {\n                default: _withCtx(scope => [_createElementVNode(\"span\", {\n                  class: _normalizeClass(scope.row.amount > 0 ? 'income-amount' : 'expense-amount')\n                }, _toDisplayString(scope.row.amount > 0 ? '+' : '') + _toDisplayString(scope.row.amount), 3)]),\n                _: 1\n              }), _createVNode(_component_el_table_column, {\n                prop: \"createTime\",\n                label: \"交易时间\",\n                width: \"160\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"remark\",\n                label: \"备注\"\n              })]),\n              _: 1\n            }, 8, [\"data\"])), [[_directive_loading, detailLoading.value]]), !accountDetailError.value && accountDetailTotal.value > 0 ? (_openBlock(), _createBlock(_component_el_pagination, {\n              key: 2,\n              \"current-page\": accountDetailQuery.pageNum,\n              \"onUpdate:currentPage\": _cache[16] || (_cache[16] = $event => accountDetailQuery.pageNum = $event),\n              \"page-size\": accountDetailQuery.pageSize,\n              \"onUpdate:pageSize\": _cache[17] || (_cache[17] = $event => accountDetailQuery.pageSize = $event),\n              \"page-sizes\": [5, 10, 20, 50],\n              layout: \"total, sizes, prev, pager, next, jumper\",\n              total: accountDetailTotal.value,\n              onSizeChange: handleDetailSizeChange,\n              onCurrentChange: handleDetailCurrentChange,\n              class: \"detail-pagination\"\n            }, null, 8, [\"current-page\", \"page-size\", \"total\"])) : !accountDetailError.value && accountDetailList.value.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, \" 暂无交易明细数据 \")) : _createCommentVNode(\"\", true)]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"modelValue\"])]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n        title: \"司机详情\",\n        modelValue: detailDialogVisible.value,\n        \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => detailDialogVisible.value = $event),\n        width: \"800px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_descriptions, {\n          column: 2,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"司机姓名\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.name || '未知'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"昵称\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.nickname || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"工号\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.jobNo || '未分配'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"手机号\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.phone || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"性别\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.gender || '未知'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"生日\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(formatDate(detailForm.birthday) || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"订单数量\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.orderCount || 0), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"评分\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.score || '暂无评分'), 1)]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_el_divider, {\n          \"content-position\": \"center\"\n        }, {\n          default: _withCtx(() => _cache[41] || (_cache[41] = [_createTextVNode(\"证件信息\")])),\n          _: 1\n        }), _createVNode(_component_el_descriptions, {\n          column: 2,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"身份证号\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.idcardNo || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"身份证有效期\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(formatDate(detailForm.idcardExpire) || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"身份证地址\",\n            span: 2\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.idcardAddress || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"驾驶证号\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.driverLicenseNo || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"准驾车型\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.driverLicenseClazz || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"驾驶证有效期\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(formatDate(detailForm.driverLicenseExpire) || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"驾驶证初领日期\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(formatDate(detailForm.driverLicenseIssueDate) || '未设置'), 1)]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_el_divider, {\n          \"content-position\": \"center\"\n        }, {\n          default: _withCtx(() => _cache[42] || (_cache[42] = [_createTextVNode(\"紧急联系人\")])),\n          _: 1\n        }), _createVNode(_component_el_descriptions, {\n          column: 2,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"联系人姓名\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.contactName || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"联系人电话\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.contactPhone || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"联系人关系\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.contactRelationship || '未设置'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"微信OpenID\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.wxOpenId || '未关联'), 1)]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_el_divider, {\n          \"content-position\": \"center\"\n        }, {\n          default: _withCtx(() => _cache[43] || (_cache[43] = [_createTextVNode(\"状态信息\")])),\n          _: 1\n        }), _createVNode(_component_el_descriptions, {\n          column: 2,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"认证状态\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tag, {\n              type: getAuthStatusType(detailForm.authStatus)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(getAuthStatusName(detailForm.authStatus)), 1)]),\n              _: 1\n            }, 8, [\"type\"])]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"账户状态\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tag, {\n              type: detailForm.status === 1 ? 'success' : 'danger'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.status === 1 ? '正常' : '停用'), 1)]),\n              _: 1\n            }, 8, [\"type\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"modelValue\"])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","ElMessage","ElMessageBox","getDriverList","updateDriver","removeDriver","getDriverLoginLog","getDriverByName","getDriverAccountDetail","getDriverAccount","queryParams","pageNum","pageSize","name","jobNo","phone","status","undefined","driverList","loading","total","dialogVisible","driverFormRef","editActiveTab","driverForm","nickname","gender","birthday","idcardNo","idcardAddress","idcardExpire","idcardFrontUrl","idcardBackUrl","idcardHandUrl","driverLicenseNo","driverLicenseClazz","driverLicenseExpire","driverLicenseIssueDate","driverLicenseFrontUrl","driverLicenseBackUrl","driverLicenseHandUrl","contactName","contactPhone","contactRelationship","authStatus","auditRemark","logDialogVisible","logData","logList","accountDialogVisible","accountData","activeTab","accountDetailList","accountDetailTotal","detailLoading","currentDriverId","accountDetailError","accountDetailQuery","dirverId","tradeType","tradeNo","minAmount","maxAmount","detailDialogVisible","detailForm","rules","required","message","trigger","getList","value","res","console","log","data","items","error","handleQuery","resetQuery","resetForm","resetFields","handleEdit","row","driverData","formatDate","Object","assign","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","viewLog","Array","isArray","map","item","driverId","driver_id","createTime","create_time","viewAccount","id","getAccountDetail","retryGetAccountDetail","handleDetailSizeChange","size","handleDetailCurrentChange","page","getTradeTypeTag","typeMap","getTradeTypeName","cancelForm","submitForm","validate","valid","updateData","avatarUrl","score","handleSizeChange","handleCurrentChange","formatDateTime","dateTime","date","Date","isNaN","getTime","toLocaleString","year","month","day","hour","minute","second","hour12","replace","e","getAuthStatusType","getAuthStatusName","nameMap","includes","split","getFullYear","String","getMonth","padStart","getDate","viewDetail"],"sources":["D:/LIHAOZE/JavaStudyCode/frontui/frontui/src/pages/driver/DriverInfo.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"司机姓名\" prop=\"name\">\n          <el-input v-model=\"queryParams.name\" placeholder=\"请输入司机姓名\" clearable />\n        </el-form-item>\n        <el-form-item label=\"工号\" prop=\"jobNo\">\n          <el-input v-model=\"queryParams.jobNo\" placeholder=\"请输入工号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"queryParams.phone\" placeholder=\"请输入手机号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n            <el-option label=\"正常\" :value=\"1\" />\n            <el-option label=\"停用\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>司机列表</span>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"driverList\" border>\n        <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n        <el-table-column prop=\"name\" label=\"司机姓名\" width=\"100\" />\n        <el-table-column prop=\"jobNo\" label=\"工号\" width=\"100\" />\n        <el-table-column prop=\"phone\" label=\"手机号\" width=\"120\" />\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"60\" />\n        <el-table-column prop=\"nickname\" label=\"昵称\" width=\"100\" />\n        <el-table-column prop=\"driverLicenseClazz\" label=\"准驾车型\" width=\"80\" />\n        <el-table-column prop=\"score\" label=\"评分\" width=\"80\">\n          <template #default=\"scope\">\n            {{ scope.row.score || '暂无' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"orderCount\" label=\"订单量\" width=\"80\">\n          <template #default=\"scope\">\n            {{ scope.row.orderCount || 0 }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"authStatus\" label=\"认证状态\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getAuthStatusType(scope.row.authStatus)\">\n              {{ getAuthStatusName(scope.row.authStatus) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '正常' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"350\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"danger\" link @click=\"handleDelete(scope.row)\">删除</el-button>\n            <el-button type=\"info\" link @click=\"viewLog(scope.row)\">查看日志</el-button>\n            <el-button type=\"success\" link @click=\"viewAccount(scope.row)\">查看账户</el-button>\n            <el-button type=\"warning\" link @click=\"viewDetail(scope.row)\">查看详情</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n\n    <!-- 编辑司机对话框 -->\n    <el-dialog \n      title=\"司机审核\" \n      v-model=\"dialogVisible\" \n      width=\"800px\" \n      append-to-body\n      :close-on-click-modal=\"false\"\n    >\n      <el-form \n        ref=\"driverFormRef\" \n        :model=\"driverForm\" \n        :rules=\"rules\" \n        label-width=\"120px\"\n      >\n        <el-tabs v-model=\"editActiveTab\">\n          <el-tab-pane label=\"基本信息\" name=\"basic\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <el-form-item label=\"司机姓名\" prop=\"name\">\n                  <el-input v-model=\"driverForm.name\" disabled />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-form-item label=\"手机号码\" prop=\"phone\">\n                  <el-input v-model=\"driverForm.phone\" disabled />\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <el-form-item label=\"身份证号\" prop=\"idcardNo\">\n                  <el-input v-model=\"driverForm.idcardNo\" disabled />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-form-item label=\"驾驶证号\" prop=\"driverLicenseNo\">\n                  <el-input v-model=\"driverForm.driverLicenseNo\" disabled />\n                </el-form-item>\n              </el-col>\n            </el-row>\n            \n            <el-divider content-position=\"center\">审核信息</el-divider>\n            \n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <el-form-item label=\"认证状态\" prop=\"authStatus\">\n                  <el-select v-model=\"driverForm.authStatus\" placeholder=\"请选择认证状态\">\n                    <el-option label=\"未认证\" :value=\"0\" />\n                    <el-option label=\"已认证\" :value=\"1\" />\n                    <el-option label=\"认证中\" :value=\"2\" />\n                    <el-option label=\"认证失败\" :value=\"3\" />\n                  </el-select>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-form-item label=\"账户状态\" prop=\"status\">\n                  <el-radio-group v-model=\"driverForm.status\">\n                    <el-radio :value=\"1\">正常</el-radio>\n                    <el-radio :value=\"0\">停用</el-radio>\n                  </el-radio-group>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            \n            <el-form-item label=\"审核备注\" prop=\"auditRemark\">\n              <el-input \n                v-model=\"driverForm.auditRemark\" \n                type=\"textarea\" \n                placeholder=\"请输入审核备注信息，如拒绝原因等\" \n                rows=\"3\"\n              />\n            </el-form-item>\n          </el-tab-pane>\n          \n          <el-tab-pane label=\"身份证照片\" name=\"idcard\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"8\">\n                <div class=\"image-container\">\n                  <p class=\"image-title\">身份证正面</p>\n                  <el-image \n                    v-if=\"driverForm.idcardFrontUrl\" \n                    :src=\"driverForm.idcardFrontUrl\" \n                    fit=\"contain\"\n                    :preview-src-list=\"[driverForm.idcardFrontUrl]\"\n                  />\n                  <div v-else class=\"no-image\">未上传</div>\n                </div>\n              </el-col>\n              <el-col :span=\"8\">\n                <div class=\"image-container\">\n                  <p class=\"image-title\">身份证背面</p>\n                  <el-image \n                    v-if=\"driverForm.idcardBackUrl\" \n                    :src=\"driverForm.idcardBackUrl\" \n                    fit=\"contain\"\n                    :preview-src-list=\"[driverForm.idcardBackUrl]\"\n                  />\n                  <div v-else class=\"no-image\">未上传</div>\n                </div>\n              </el-col>\n              <el-col :span=\"8\">\n                <div class=\"image-container\">\n                  <p class=\"image-title\">手持身份证</p>\n                  <el-image \n                    v-if=\"driverForm.idcardHandUrl\" \n                    :src=\"driverForm.idcardHandUrl\" \n                    fit=\"contain\"\n                    :preview-src-list=\"[driverForm.idcardHandUrl]\"\n                  />\n                  <div v-else class=\"no-image\">未上传</div>\n                </div>\n              </el-col>\n            </el-row>\n          </el-tab-pane>\n          \n          <el-tab-pane label=\"驾驶证照片\" name=\"license\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"8\">\n                <div class=\"image-container\">\n                  <p class=\"image-title\">驾驶证正面</p>\n                  <el-image \n                    v-if=\"driverForm.driverLicenseFrontUrl\" \n                    :src=\"driverForm.driverLicenseFrontUrl\" \n                    fit=\"contain\"\n                    :preview-src-list=\"[driverForm.driverLicenseFrontUrl]\"\n                  />\n                  <div v-else class=\"no-image\">未上传</div>\n                </div>\n              </el-col>\n              <el-col :span=\"8\">\n                <div class=\"image-container\">\n                  <p class=\"image-title\">行驶证副页</p>\n                  <el-image \n                    v-if=\"driverForm.driverLicenseBackUrl\" \n                    :src=\"driverForm.driverLicenseBackUrl\" \n                    fit=\"contain\"\n                    :preview-src-list=\"[driverForm.driverLicenseBackUrl]\"\n                  />\n                  <div v-else class=\"no-image\">未上传</div>\n                </div>\n              </el-col>\n              <el-col :span=\"8\">\n                <div class=\"image-container\">\n                  <p class=\"image-title\">手持驾驶证</p>\n                  <el-image \n                    v-if=\"driverForm.driverLicenseHandUrl\" \n                    :src=\"driverForm.driverLicenseHandUrl\" \n                    fit=\"contain\"\n                    :preview-src-list=\"[driverForm.driverLicenseHandUrl]\"\n                  />\n                  <div v-else class=\"no-image\">未上传</div>\n                </div>\n              </el-col>\n            </el-row>\n          </el-tab-pane>\n        </el-tabs>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"cancelForm\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">提交审核</el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 登录日志对话框 -->\n    <el-dialog title=\"司机登录日志\" v-model=\"logDialogVisible\" width=\"800px\">\n      <div v-if=\"logData\">\n        <el-table :data=\"[logData]\" border style=\"width: 100%\">\n          <el-table-column prop=\"driverId\" label=\"司机ID\" width=\"100\" />\n          <el-table-column prop=\"msg\" label=\"登录消息\" width=\"150\" />\n          <el-table-column prop=\"ipaddr\" label=\"IP地址\" width=\"150\">\n            <template #default=\"scope\">\n              {{ scope.row.ipaddr || '未记录' }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n            <template #default=\"scope\">\n              <el-tag :type=\"scope.row.status ? 'success' : 'info'\">\n                {{ scope.row.status ? '成功' : '小程序登录' }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"登录时间\" width=\"180\">\n            <template #default=\"scope\">\n              {{ formatDateTime(scope.row.createTime) }}\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div v-else-if=\"logList && logList.length > 0\">\n        <el-table :data=\"logList\" border style=\"width: 100%\">\n          <el-table-column prop=\"driverId\" label=\"司机ID\" width=\"100\" />\n          <el-table-column prop=\"msg\" label=\"登录消息\" width=\"150\" />\n          <el-table-column prop=\"ipaddr\" label=\"IP地址\" width=\"150\">\n            <template #default=\"scope\">\n              {{ scope.row.ipaddr || '未记录' }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n            <template #default=\"scope\">\n              <el-tag :type=\"scope.row.status ? 'success' : 'info'\">\n                {{ scope.row.status ? '成功' : '小程序登录' }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"登录时间\" width=\"180\">\n            <template #default=\"scope\">\n              {{ formatDateTime(scope.row.createTime) }}\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div v-else class=\"empty-data\">\n        暂无登录日志数据\n      </div>\n    </el-dialog>\n\n    <!-- 账户信息对话框 -->\n    <el-dialog title=\"司机账户信息\" v-model=\"accountDialogVisible\" width=\"700px\">\n      <el-tabs v-model=\"activeTab\">\n        <el-tab-pane label=\"账户概览\" name=\"overview\">\n          <div v-if=\"accountData\">\n            <el-descriptions :column=\"2\" border>\n              <el-descriptions-item label=\"司机ID\">{{ accountData.driverId }}</el-descriptions-item>\n              <el-descriptions-item label=\"司机姓名\">{{ accountData.driverName || '未知' }}</el-descriptions-item>\n              <el-descriptions-item label=\"总收入\">\n                <span class=\"income\">¥ {{ accountData.totalIncome || '0.00' }}</span>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"可提现金额\">\n                <span class=\"withdraw\">¥ {{ accountData.availableAmount || '0.00' }}</span>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"冻结金额\">¥ {{ accountData.frozenAmount || '0.00' }}</el-descriptions-item>\n              <el-descriptions-item label=\"已提现金额\">¥ {{ accountData.withdrawAmount || '0.00' }}</el-descriptions-item>\n              <el-descriptions-item label=\"账户状态\" :span=\"2\">\n                <el-tag :type=\"accountData.status === 1 ? 'success' : 'danger'\">\n                  {{ accountData.status === 1 ? '正常' : '冻结' }}\n                </el-tag>\n              </el-descriptions-item>\n            </el-descriptions>\n          </div>\n          <div v-else class=\"empty-data\">\n            暂无账户信息数据\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"账单明细\" name=\"detail\">\n          <div v-if=\"accountDetailError\" class=\"error-message\">\n            <el-alert title=\"获取账单明细失败\" type=\"error\" :closable=\"false\" show-icon>\n              <p>{{ accountDetailError }}</p>\n              <el-button size=\"small\" type=\"primary\" @click=\"retryGetAccountDetail\">重试</el-button>\n            </el-alert>\n          </div>\n          <el-table v-else v-loading=\"detailLoading\" :data=\"accountDetailList\" border>\n            <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n            <el-table-column prop=\"tradeNo\" label=\"交易号\" width=\"180\" />\n            <el-table-column prop=\"tradeType\" label=\"交易类型\">\n              <template #default=\"scope\">\n                <el-tag :type=\"getTradeTypeTag(scope.row.tradeType)\">\n                  {{ getTradeTypeName(scope.row.tradeType) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"amount\" label=\"金额\">\n              <template #default=\"scope\">\n                <span :class=\"scope.row.amount > 0 ? 'income-amount' : 'expense-amount'\">\n                  {{ scope.row.amount > 0 ? '+' : '' }}{{ scope.row.amount }}\n                </span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"createTime\" label=\"交易时间\" width=\"160\" />\n            <el-table-column prop=\"remark\" label=\"备注\" />\n          </el-table>\n          \n          <el-pagination\n            v-if=\"!accountDetailError && accountDetailTotal > 0\"\n            v-model:current-page=\"accountDetailQuery.pageNum\"\n            v-model:page-size=\"accountDetailQuery.pageSize\"\n            :page-sizes=\"[5, 10, 20, 50]\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"accountDetailTotal\"\n            @size-change=\"handleDetailSizeChange\"\n            @current-change=\"handleDetailCurrentChange\"\n            class=\"detail-pagination\"\n          />\n          <div v-else-if=\"!accountDetailError && accountDetailList.length === 0\" class=\"empty-data\">\n            暂无交易明细数据\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </el-dialog>\n\n    <!-- 司机详情对话框 -->\n    <el-dialog title=\"司机详情\" v-model=\"detailDialogVisible\" width=\"800px\">\n      <el-descriptions :column=\"2\" border>\n        <el-descriptions-item label=\"司机姓名\">{{ detailForm.name || '未知' }}</el-descriptions-item>\n        <el-descriptions-item label=\"昵称\">{{ detailForm.nickname || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"工号\">{{ detailForm.jobNo || '未分配' }}</el-descriptions-item>\n        <el-descriptions-item label=\"手机号\">{{ detailForm.phone || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"性别\">{{ detailForm.gender || '未知' }}</el-descriptions-item>\n        <el-descriptions-item label=\"生日\">{{ formatDate(detailForm.birthday) || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"订单数量\">{{ detailForm.orderCount || 0 }}</el-descriptions-item>\n        <el-descriptions-item label=\"评分\">{{ detailForm.score || '暂无评分' }}</el-descriptions-item>\n      </el-descriptions>\n      \n      <el-divider content-position=\"center\">证件信息</el-divider>\n      \n      <el-descriptions :column=\"2\" border>\n        <el-descriptions-item label=\"身份证号\">{{ detailForm.idcardNo || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"身份证有效期\">{{ formatDate(detailForm.idcardExpire) || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"身份证地址\" :span=\"2\">{{ detailForm.idcardAddress || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"驾驶证号\">{{ detailForm.driverLicenseNo || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"准驾车型\">{{ detailForm.driverLicenseClazz || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"驾驶证有效期\">{{ formatDate(detailForm.driverLicenseExpire) || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"驾驶证初领日期\">{{ formatDate(detailForm.driverLicenseIssueDate) || '未设置' }}</el-descriptions-item>\n      </el-descriptions>\n      \n      <el-divider content-position=\"center\">紧急联系人</el-divider>\n      \n      <el-descriptions :column=\"2\" border>\n        <el-descriptions-item label=\"联系人姓名\">{{ detailForm.contactName || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"联系人电话\">{{ detailForm.contactPhone || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"联系人关系\">{{ detailForm.contactRelationship || '未设置' }}</el-descriptions-item>\n        <el-descriptions-item label=\"微信OpenID\">{{ detailForm.wxOpenId || '未关联' }}</el-descriptions-item>\n      </el-descriptions>\n      \n      <el-divider content-position=\"center\">状态信息</el-divider>\n      \n      <el-descriptions :column=\"2\" border>\n        <el-descriptions-item label=\"认证状态\">\n          <el-tag :type=\"getAuthStatusType(detailForm.authStatus)\">\n            {{ getAuthStatusName(detailForm.authStatus) }}\n          </el-tag>\n        </el-descriptions-item>\n        <el-descriptions-item label=\"账户状态\">\n          <el-tag :type=\"detailForm.status === 1 ? 'success' : 'danger'\">\n            {{ detailForm.status === 1 ? '正常' : '停用' }}\n          </el-tag>\n        </el-descriptions-item>\n      </el-descriptions>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  getDriverList, \n  updateDriver, \n  removeDriver, \n  getDriverLoginLog, \n  getDriverByName,\n  getDriverAccountDetail,\n  getDriverAccount\n} from '@/api/driver'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  name: '',\n  jobNo: '',\n  phone: '',\n  status: undefined\n})\n\n// 表格数据和状态\nconst driverList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 弹窗相关\nconst dialogVisible = ref(false)\nconst driverFormRef = ref(null)\nconst editActiveTab = ref('basic')\nconst driverForm = reactive({\n  name: '',\n  nickname: '',\n  jobNo: '',\n  phone: '',\n  gender: '',\n  birthday: '',\n  idcardNo: '',\n  idcardAddress: '',\n  idcardExpire: '',\n  idcardFrontUrl: '', // 身份证正面\n  idcardBackUrl: '',  // 身份证背面\n  idcardHandUrl: '',  // 手持身份证\n  driverLicenseNo: '',\n  driverLicenseClazz: '',\n  driverLicenseExpire: '',\n  driverLicenseIssueDate: '',\n  driverLicenseFrontUrl: '', // 驾驶证正面\n  driverLicenseBackUrl: '',  // 行驶证副页\n  driverLicenseHandUrl: '',  // 手持驾驶证\n  contactName: '',\n  contactPhone: '',\n  contactRelationship: '',\n  authStatus: 0,\n  status: 1,\n  auditRemark: '' // 审核备注\n})\n\n// 日志查看相关\nconst logDialogVisible = ref(false)\nconst logData = ref(null)\nconst logList = ref([])\n\n// 账户信息相关\nconst accountDialogVisible = ref(false)\nconst accountData = ref(null)\nconst activeTab = ref('overview')\nconst accountDetailList = ref([])\nconst accountDetailTotal = ref(0)\nconst detailLoading = ref(false)\nconst currentDriverId = ref('')\nconst accountDetailError = ref('')\n\n// 账单查询参数\nconst accountDetailQuery = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  dirverId: '',\n  tradeType: '',\n  tradeNo: '',\n  minAmount: undefined,\n  maxAmount: undefined\n})\n\n// 司机详情相关\nconst detailDialogVisible = ref(false)\nconst detailForm = reactive({})\n\n// 表单验证规则\nconst rules = {\n  authStatus: [\n    { required: true, message: '请选择认证状态', trigger: 'change' }\n  ],\n  status: [\n    { required: true, message: '请选择状态', trigger: 'change' }\n  ]\n}\n\n// 获取司机列表\nconst getList = async () => {\n  try {\n    loading.value = true\n    const res = await getDriverList(queryParams)\n    console.log('司机列表响应:', res)\n    driverList.value = res.data.items || []\n    total.value = res.data.total || 0\n  } catch (error) {\n    console.error('获取司机列表失败', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.name = ''\n  queryParams.jobNo = ''\n  queryParams.phone = ''\n  queryParams.status = undefined\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置表单\nconst resetForm = () => {\n  driverForm.name = ''\n  driverForm.nickname = ''\n  driverForm.jobNo = ''\n  driverForm.phone = ''\n  driverForm.gender = ''\n  driverForm.birthday = ''\n  driverForm.idcardNo = ''\n  driverForm.idcardAddress = ''\n  driverForm.idcardExpire = ''\n  driverForm.idcardFrontUrl = ''\n  driverForm.idcardBackUrl = ''\n  driverForm.idcardHandUrl = ''\n  driverForm.driverLicenseNo = ''\n  driverForm.driverLicenseClazz = ''\n  driverForm.driverLicenseExpire = ''\n  driverForm.driverLicenseIssueDate = ''\n  driverForm.driverLicenseFrontUrl = ''\n  driverForm.driverLicenseBackUrl = ''\n  driverForm.driverLicenseHandUrl = ''\n  driverForm.contactName = ''\n  driverForm.contactPhone = ''\n  driverForm.contactRelationship = ''\n  driverForm.authStatus = 0\n  driverForm.status = 1\n  driverForm.auditRemark = ''\n  editActiveTab.value = 'basic'\n  nextTick(() => {\n    driverFormRef.value?.resetFields()\n  })\n}\n\n// 编辑司机\nconst handleEdit = async (row) => {\n  resetForm()\n  dialogVisible.value = true\n  \n  // 获取最新的司机信息\n  try {\n    const res = await getDriverByName(row.name)\n    if (res.data) {\n      // 填充表单数据前处理日期格式\n      const driverData = { ...res.data }\n      if (driverData.birthday) {\n        driverData.birthday = formatDate(driverData.birthday)\n      }\n      if (driverData.idcardExpire) {\n        driverData.idcardExpire = formatDate(driverData.idcardExpire)\n      }\n      if (driverData.driverLicenseExpire) {\n        driverData.driverLicenseExpire = formatDate(driverData.driverLicenseExpire)\n      }\n      if (driverData.driverLicenseIssueDate) {\n        driverData.driverLicenseIssueDate = formatDate(driverData.driverLicenseIssueDate)\n      }\n      \n      // 填充表单数据\n      Object.assign(driverForm, driverData)\n    }\n  } catch (error) {\n    ElMessage.error('获取司机信息失败')\n  }\n}\n\n// 删除司机\nconst handleDelete = (row) => {\n  ElMessageBox.confirm(`确定要删除司机 ${row.name} 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await removeDriver(row.name)\n      ElMessage.success('删除成功')\n      getList()\n    } catch (error) {\n      ElMessage.error('删除失败')\n    }\n  }).catch(() => {})\n}\n\n// 查看日志\nconst viewLog = async (row) => {\n  try {\n    logDialogVisible.value = true\n    logData.value = null\n    logList.value = []\n    \n    const res = await getDriverLoginLog(row.name)\n    console.log('登录日志响应:', res)\n    \n    if (res.data) {\n      // 处理后端返回的数据，后端可能返回单个对象或数组\n      if (Array.isArray(res.data)) {\n        logList.value = res.data.map(item => ({\n          ...item,\n          driverId: item.driver_id || item.driverId,\n          createTime: item.create_time || item.createTime\n        }))\n      } else if (Array.isArray(res.data.items)) {\n        // 如果返回的是分页数据\n        logList.value = res.data.items.map(item => ({\n          ...item,\n          driverId: item.driver_id || item.driverId,\n          createTime: item.create_time || item.createTime\n        }))\n      } else {\n        // 单个对象情况\n        logData.value = {\n          ...res.data,\n          driverId: res.data.driver_id || res.data.driverId,\n          createTime: res.data.create_time || res.data.createTime\n        }\n      }\n    }\n  } catch (error) {\n    console.error('获取登录日志失败', error)\n    ElMessage.error('获取登录日志失败')\n  }\n}\n\n// 查看账户信息\nconst viewAccount = async (row) => {\n  accountDialogVisible.value = true\n  activeTab.value = 'overview'\n  currentDriverId.value = row.id || row.driverId\n  \n  // 获取账户概览\n  try {\n    const res = await getDriverAccount(currentDriverId.value)\n    accountData.value = res.data\n  } catch (error) {\n    console.error('获取账户信息失败', error)\n    ElMessage.error('获取账户信息失败')\n    accountData.value = null\n  }\n  \n  // 账单查询参数设置\n  accountDetailQuery.dirverId = currentDriverId.value\n  \n  // 获取账单明细\n  getAccountDetail()\n}\n\n// 获取账单明细\nconst getAccountDetail = async () => {\n  try {\n    detailLoading.value = true\n    accountDetailError.value = ''\n    console.log('账单查询参数:', accountDetailQuery) // 调试日志\n    const res = await getDriverAccountDetail(accountDetailQuery)\n    if (res.data) {\n      accountDetailList.value = res.data.items || []\n      accountDetailTotal.value = res.data.total || 0\n    } else {\n      accountDetailList.value = []\n      accountDetailTotal.value = 0\n      accountDetailError.value = '服务器返回数据为空'\n    }\n  } catch (error) {\n    console.error('获取账单明细失败', error)\n    accountDetailList.value = []\n    accountDetailTotal.value = 0\n    accountDetailError.value = error.message || '获取账单明细数据失败'\n  } finally {\n    detailLoading.value = false\n  }\n}\n\n// 重试获取账单明细\nconst retryGetAccountDetail = () => {\n  getAccountDetail()\n}\n\n// 账单分页操作\nconst handleDetailSizeChange = (size) => {\n  accountDetailQuery.pageSize = size\n  getAccountDetail()\n}\n\nconst handleDetailCurrentChange = (page) => {\n  accountDetailQuery.pageNum = page\n  getAccountDetail()\n}\n\n// 交易类型标签颜色\nconst getTradeTypeTag = (type) => {\n  const typeMap = {\n    '1': 'success', // 订单收入\n    '2': 'danger',  // 提现\n    '3': 'warning', // 退款\n    '4': 'info'     // 其他\n  }\n  return typeMap[type] || 'info'\n}\n\n// 交易类型名称\nconst getTradeTypeName = (type) => {\n  const typeMap = {\n    '1': '订单收入',\n    '2': '提现',\n    '3': '退款',\n    '4': '其他'\n  }\n  return typeMap[type] || '未知类型'\n}\n\n// 取消表单\nconst cancelForm = () => {\n  dialogVisible.value = false\n  resetForm()\n}\n\n// 提交表单\nconst submitForm = async () => {\n  driverFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        // 创建一个新对象，只包含需要更新的字段\n        const updateData = {\n          name: driverForm.name,\n          nickname: driverForm.nickname || '',\n          avatarUrl: driverForm.avatarUrl || '',\n          phone: driverForm.phone || '',\n          gender: driverForm.gender || '',\n          score: driverForm.score || 0,\n          status: driverForm.status,\n          authStatus: driverForm.authStatus\n        }\n        \n        console.log('提交的司机数据:', updateData)\n        \n        // 编辑司机\n        const res = await updateDriver(updateData)\n        ElMessage.success('修改司机信息成功')\n        dialogVisible.value = false\n        getList()\n      } catch (error) {\n        console.error('操作失败', error)\n        ElMessage.error('操作失败，请稍后重试')\n      }\n    }\n  })\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 格式化日期时间\nconst formatDateTime = (dateTime) => {\n  if (!dateTime) return '未记录';\n  \n  try {\n    // 处理ISO格式时间\n    const date = new Date(dateTime);\n    if (isNaN(date.getTime())) return dateTime; // 如果无法解析则返回原始值\n    \n    return date.toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    }).replace(/\\//g, '-');\n  } catch (e) {\n    console.error('日期格式化错误', e);\n    return dateTime;\n  }\n}\n\n// 获取认证状态类型\nconst getAuthStatusType = (status) => {\n  const typeMap = {\n    0: 'info',     // 未认证\n    1: 'success',  // 已认证\n    2: 'warning',  // 认证中\n    3: 'danger'    // 认证失败\n  }\n  return typeMap[status] || 'info'\n}\n\n// 获取认证状态名称\nconst getAuthStatusName = (status) => {\n  const nameMap = {\n    0: '未认证',\n    1: '已认证',\n    2: '认证中',\n    3: '认证失败'\n  }\n  return nameMap[status] || '未知'\n}\n\n// 格式化日期\nconst formatDate = (date) => {\n  if (!date) return '';\n  \n  if (typeof date === 'string' && date.includes('T')) {\n    // 处理ISO格式日期\n    return date.split('T')[0];\n  }\n  \n  if (date instanceof Date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n  \n  return date;\n}\n\n// 查看司机详情\nconst viewDetail = async (row) => {\n  try {\n    detailDialogVisible.value = true\n    const res = await getDriverByName(row.name)\n    if (res.data) {\n      Object.assign(detailForm, res.data)\n    }\n  } catch (error) {\n    console.error('获取司机详情失败', error)\n    ElMessage.error('获取司机详情失败')\n  }\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.el-pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.empty-data {\n  text-align: center;\n  color: #909399;\n  padding: 30px 0;\n}\n\n.income {\n  color: #67C23A;\n  font-weight: bold;\n}\n\n.withdraw {\n  color: #409EFF;\n  font-weight: bold;\n}\n\n.income-amount {\n  color: #67C23A;\n}\n\n.expense-amount {\n  color: #F56C6C;\n}\n\n.detail-pagination {\n  margin-top: 15px;\n}\n\n.error-message {\n  margin-bottom: 15px;\n}\n\n.image-container {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.image-title {\n  margin-bottom: 10px;\n  font-weight: bold;\n}\n\n.no-image {\n  height: 200px;\n  background-color: #f5f7fa;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #909399;\n  border: 1px dashed #d9d9d9;\n  border-radius: 4px;\n}\n\n.el-image {\n  width: 100%;\n  height: 200px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}