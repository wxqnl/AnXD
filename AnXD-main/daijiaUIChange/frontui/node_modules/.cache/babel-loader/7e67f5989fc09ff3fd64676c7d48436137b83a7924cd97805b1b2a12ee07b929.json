{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getAllCustomerInfo, getCustomerInfo, removeCustomer, updateCustomer, getCustomerLoginLog } from '@/api/customer';\n\n// 查询参数\n\nexport default {\n  __name: 'CustomerInfo',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      nickname: '',\n      gender: undefined,\n      phone: '',\n      status: undefined\n    });\n\n    // 表格数据和状态\n    const customerList = ref([]);\n    const loading = ref(false);\n    const total = ref(0);\n\n    // 获取客户列表\n    const getList = async () => {\n      try {\n        loading.value = true;\n        const res = await getAllCustomerInfo(queryParams);\n        customerList.value = res.data.list || [];\n        total.value = res.data.total || 0;\n      } catch (error) {\n        console.error('获取客户列表失败', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 查询按钮\n    const handleQuery = () => {\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      queryParams.nickname = '';\n      queryParams.gender = undefined;\n      queryParams.phone = '';\n      queryParams.status = undefined;\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 编辑客户\n    const handleEdit = row => {\n      ElMessage.info(`编辑客户: ${row.username}`);\n    };\n\n    // 删除客户\n    const handleDelete = row => {\n      ElMessageBox.confirm(`确定要删除客户 ${row.nickname || row.username} 吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await removeCustomer(row.username);\n          ElMessage.success('删除成功');\n          getList();\n        } catch (error) {\n          ElMessage.error('删除失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 查看日志\n    const viewLog = async row => {\n      try {\n        const res = await getCustomerLoginLog(row.username);\n        ElMessage.info(`查看客户 ${row.username} 的登录日志`);\n      } catch (error) {\n        ElMessage.error('获取登录日志失败');\n      }\n    };\n\n    // 分页操作\n    const handleSizeChange = size => {\n      queryParams.pageSize = size;\n      getList();\n    };\n    const handleCurrentChange = page => {\n      queryParams.pageNum = page;\n      getList();\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getList();\n    });\n    const __returned__ = {\n      queryParams,\n      customerList,\n      loading,\n      total,\n      getList,\n      handleQuery,\n      resetQuery,\n      handleEdit,\n      handleDelete,\n      viewLog,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get getAllCustomerInfo() {\n        return getAllCustomerInfo;\n      },\n      get getCustomerInfo() {\n        return getCustomerInfo;\n      },\n      get removeCustomer() {\n        return removeCustomer;\n      },\n      get updateCustomer() {\n        return updateCustomer;\n      },\n      get getCustomerLoginLog() {\n        return getCustomerLoginLog;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","getAllCustomerInfo","getCustomerInfo","removeCustomer","updateCustomer","getCustomerLoginLog","queryParams","pageNum","pageSize","nickname","gender","undefined","phone","status","customerList","loading","total","getList","value","res","data","list","error","console","handleQuery","resetQuery","handleEdit","row","info","username","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","viewLog","handleSizeChange","size","handleCurrentChange","page"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/pages/customer/CustomerInfo.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"queryParams.nickname\" placeholder=\"请输入昵称\" clearable />\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-select v-model=\"queryParams.gender\" placeholder=\"请选择性别\" clearable>\n            <el-option label=\"男\" :value=\"1\" />\n            <el-option label=\"女\" :value=\"2\" />\n            <el-option label=\"未知\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"queryParams.phone\" placeholder=\"请输入手机号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n            <el-option label=\"正常\" :value=\"1\" />\n            <el-option label=\"停用\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>客户列表</span>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"customerList\" border>\n        <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n        <el-table-column prop=\"username\" label=\"用户名\" />\n        <el-table-column prop=\"nickname\" label=\"昵称\" />\n        <el-table-column prop=\"gender\" label=\"性别\">\n          <template #default=\"scope\">\n            {{ scope.row.gender === 1 ? '男' : scope.row.gender === 2 ? '女' : '未知' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"phone\" label=\"手机号\" />\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === '1' ? 'success' : 'danger'\">\n              {{ scope.row.status === '1' ? '正常' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"220\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"danger\" link @click=\"handleDelete(scope.row)\">删除</el-button>\n            <el-button type=\"info\" link @click=\"viewLog(scope.row)\">查看日志</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getAllCustomerInfo, getCustomerInfo, removeCustomer, updateCustomer, getCustomerLoginLog } from '@/api/customer'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  nickname: '',\n  gender: undefined,\n  phone: '',\n  status: undefined\n})\n\n// 表格数据和状态\nconst customerList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 获取客户列表\nconst getList = async () => {\n  try {\n    loading.value = true\n    const res = await getAllCustomerInfo(queryParams)\n    customerList.value = res.data.list || []\n    total.value = res.data.total || 0\n  } catch (error) {\n    console.error('获取客户列表失败', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.nickname = ''\n  queryParams.gender = undefined\n  queryParams.phone = ''\n  queryParams.status = undefined\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 编辑客户\nconst handleEdit = (row) => {\n  ElMessage.info(`编辑客户: ${row.username}`)\n}\n\n// 删除客户\nconst handleDelete = (row) => {\n  ElMessageBox.confirm(`确定要删除客户 ${row.nickname || row.username} 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await removeCustomer(row.username)\n      ElMessage.success('删除成功')\n      getList()\n    } catch (error) {\n      ElMessage.error('删除失败')\n    }\n  }).catch(() => {})\n}\n\n// 查看日志\nconst viewLog = async (row) => {\n  try {\n    const res = await getCustomerLoginLog(row.username)\n    ElMessage.info(`查看客户 ${row.username} 的登录日志`)\n  } catch (error) {\n    ElMessage.error('获取登录日志失败')\n  }\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.el-pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n</style> "],"mappings":"AA8EA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAI;AAC7C,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAa;AACrD,SAASC,kBAAkB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,cAAc,EAAEC,mBAAmB,QAAQ,gBAAe;;AAExH;;;;;;;;IACA,MAAMC,WAAW,GAAGT,QAAQ,CAAC;MAC3BU,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAEC,SAAS;MACjBC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAEF;IACV,CAAC;;IAED;IACA,MAAMG,YAAY,GAAGlB,GAAG,CAAC,EAAE;IAC3B,MAAMmB,OAAO,GAAGnB,GAAG,CAAC,KAAK;IACzB,MAAMoB,KAAK,GAAGpB,GAAG,CAAC,CAAC;;IAEnB;IACA,MAAMqB,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACFF,OAAO,CAACG,KAAK,GAAG,IAAG;QACnB,MAAMC,GAAG,GAAG,MAAMlB,kBAAkB,CAACK,WAAW;QAChDQ,YAAY,CAACI,KAAK,GAAGC,GAAG,CAACC,IAAI,CAACC,IAAI,IAAI,EAAC;QACvCL,KAAK,CAACE,KAAK,GAAGC,GAAG,CAACC,IAAI,CAACJ,KAAK,IAAI;MAClC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK;MACjC,CAAC,SAAS;QACRP,OAAO,CAACG,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACA,MAAMM,WAAW,GAAGA,CAAA,KAAM;MACxBlB,WAAW,CAACC,OAAO,GAAG;MACtBU,OAAO,CAAC;IACV;;IAEA;IACA,MAAMQ,UAAU,GAAGA,CAAA,KAAM;MACvBnB,WAAW,CAACG,QAAQ,GAAG,EAAC;MACxBH,WAAW,CAACI,MAAM,GAAGC,SAAQ;MAC7BL,WAAW,CAACM,KAAK,GAAG,EAAC;MACrBN,WAAW,CAACO,MAAM,GAAGF,SAAQ;MAC7BL,WAAW,CAACC,OAAO,GAAG;MACtBU,OAAO,CAAC;IACV;;IAEA;IACA,MAAMS,UAAU,GAAIC,GAAG,IAAK;MAC1B5B,SAAS,CAAC6B,IAAI,CAAC,SAASD,GAAG,CAACE,QAAQ,EAAE;IACxC;;IAEA;IACA,MAAMC,YAAY,GAAIH,GAAG,IAAK;MAC5B3B,YAAY,CAAC+B,OAAO,CAAC,WAAWJ,GAAG,CAAClB,QAAQ,IAAIkB,GAAG,CAACE,QAAQ,KAAK,EAAE,IAAI,EAAE;QACvEG,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY;QAClB,IAAI;UACF,MAAMhC,cAAc,CAACwB,GAAG,CAACE,QAAQ;UACjC9B,SAAS,CAACqC,OAAO,CAAC,MAAM;UACxBnB,OAAO,CAAC;QACV,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdvB,SAAS,CAACuB,KAAK,CAAC,MAAM;QACxB;MACF,CAAC,CAAC,CAACe,KAAK,CAAC,MAAM,CAAC,CAAC;IACnB;;IAEA;IACA,MAAMC,OAAO,GAAG,MAAOX,GAAG,IAAK;MAC7B,IAAI;QACF,MAAMR,GAAG,GAAG,MAAMd,mBAAmB,CAACsB,GAAG,CAACE,QAAQ;QAClD9B,SAAS,CAAC6B,IAAI,CAAC,QAAQD,GAAG,CAACE,QAAQ,QAAQ;MAC7C,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdvB,SAAS,CAACuB,KAAK,CAAC,UAAU;MAC5B;IACF;;IAEA;IACA,MAAMiB,gBAAgB,GAAIC,IAAI,IAAK;MACjClC,WAAW,CAACE,QAAQ,GAAGgC,IAAG;MAC1BvB,OAAO,CAAC;IACV;IAEA,MAAMwB,mBAAmB,GAAIC,IAAI,IAAK;MACpCpC,WAAW,CAACC,OAAO,GAAGmC,IAAG;MACzBzB,OAAO,CAAC;IACV;;IAEA;IACAnB,SAAS,CAAC,MAAM;MACdmB,OAAO,CAAC;IACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}