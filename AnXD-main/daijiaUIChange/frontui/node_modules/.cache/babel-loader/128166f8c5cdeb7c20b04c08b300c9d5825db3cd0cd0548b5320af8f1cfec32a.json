{"ast":null,"code":"import { login, getUserInfo } from '@/api/user';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nconst state = {\n  token: getToken(),\n  userInfo: null\n};\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER_INFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  CLEAR_USER(state) {\n    state.token = '';\n    state.userInfo = null;\n    removeToken();\n  }\n};\nconst actions = {\n  // 登录\n  async login({\n    commit\n  }, userInfo) {\n    try {\n      const {\n        data\n      } = await login(userInfo);\n      commit('SET_TOKEN', data);\n      setToken(data);\n      return Promise.resolve();\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n  // 获取用户信息\n  async getUserInfo({\n    commit,\n    state\n  }) {\n    try {\n      const {\n        data\n      } = await getUserInfo();\n      commit('SET_USER_INFO', data);\n      return Promise.resolve(data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n  // 退出登录\n  logout({\n    commit\n  }) {\n    commit('CLEAR_USER');\n    return Promise.resolve();\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["login","getUserInfo","getToken","setToken","removeToken","state","token","userInfo","mutations","SET_TOKEN","SET_USER_INFO","CLEAR_USER","actions","commit","data","Promise","resolve","error","reject","logout","namespaced"],"sources":["D:/LIHAOZE/JavaStudyCode/frontui/frontui/src/store/modules/user.js"],"sourcesContent":["import { login, getUserInfo } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nconst state = {\n  token: getToken(),\n  userInfo: null\n}\n\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token\n  },\n  SET_USER_INFO(state, userInfo) {\n    state.userInfo = userInfo\n  },\n  CLEAR_USER(state) {\n    state.token = ''\n    state.userInfo = null\n    removeToken()\n  }\n}\n\nconst actions = {\n  // 登录\n  async login({ commit }, userInfo) {\n    try {\n      const { data } = await login(userInfo)\n      commit('SET_TOKEN', data)\n      setToken(data)\n      return Promise.resolve()\n    } catch (error) {\n      return Promise.reject(error)\n    }\n  },\n  \n  // 获取用户信息\n  async getUserInfo({ commit, state }) {\n    try {\n      const { data } = await getUserInfo()\n      commit('SET_USER_INFO', data)\n      return Promise.resolve(data)\n    } catch (error) {\n      return Promise.reject(error)\n    }\n  },\n  \n  // 退出登录\n  logout({ commit }) {\n    commit('CLEAR_USER')\n    return Promise.resolve()\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n} "],"mappings":"AAAA,SAASA,KAAK,EAAEC,WAAW,QAAQ,YAAY;AAC/C,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,cAAc;AAE9D,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAEJ,QAAQ,CAAC,CAAC;EACjBK,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAASA,CAACJ,KAAK,EAAEC,KAAK,EAAE;IACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDI,aAAaA,CAACL,KAAK,EAAEE,QAAQ,EAAE;IAC7BF,KAAK,CAACE,QAAQ,GAAGA,QAAQ;EAC3B,CAAC;EACDI,UAAUA,CAACN,KAAK,EAAE;IAChBA,KAAK,CAACC,KAAK,GAAG,EAAE;IAChBD,KAAK,CAACE,QAAQ,GAAG,IAAI;IACrBH,WAAW,CAAC,CAAC;EACf;AACF,CAAC;AAED,MAAMQ,OAAO,GAAG;EACd;EACA,MAAMZ,KAAKA,CAAC;IAAEa;EAAO,CAAC,EAAEN,QAAQ,EAAE;IAChC,IAAI;MACF,MAAM;QAAEO;MAAK,CAAC,GAAG,MAAMd,KAAK,CAACO,QAAQ,CAAC;MACtCM,MAAM,CAAC,WAAW,EAAEC,IAAI,CAAC;MACzBX,QAAQ,CAACW,IAAI,CAAC;MACd,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAOF,OAAO,CAACG,MAAM,CAACD,KAAK,CAAC;IAC9B;EACF,CAAC;EAED;EACA,MAAMhB,WAAWA,CAAC;IAAEY,MAAM;IAAER;EAAM,CAAC,EAAE;IACnC,IAAI;MACF,MAAM;QAAES;MAAK,CAAC,GAAG,MAAMb,WAAW,CAAC,CAAC;MACpCY,MAAM,CAAC,eAAe,EAAEC,IAAI,CAAC;MAC7B,OAAOC,OAAO,CAACC,OAAO,CAACF,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,OAAOF,OAAO,CAACG,MAAM,CAACD,KAAK,CAAC;IAC9B;EACF,CAAC;EAED;EACAE,MAAMA,CAAC;IAAEN;EAAO,CAAC,EAAE;IACjBA,MAAM,CAAC,YAAY,CAAC;IACpB,OAAOE,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B;AACF,CAAC;AAED,eAAe;EACbI,UAAU,EAAE,IAAI;EAChBf,KAAK;EACLG,SAAS;EACTI;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}