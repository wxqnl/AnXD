{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_tree_select = _resolveComponent(\"el-tree-select\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"search-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.queryParams,\n      ref: \"queryForm\",\n      inline: true,\n      class: \"search-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"部门名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.queryParams.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.queryParams.name = $event),\n          placeholder: \"请输入部门名称\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"负责人\",\n        prop: \"leader\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.queryParams.leader,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.queryParams.leader = $event),\n          placeholder: \"请输入负责人\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.queryParams.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.queryParams.status = $event),\n          placeholder: \"请选择状态\",\n          clearable: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"正常\",\n            value: 1\n          }), _createVNode(_component_el_option, {\n            label: \"停用\",\n            value: 0\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: _ctx.handleQuery\n        }, {\n          default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: _ctx.resetQuery\n        }, {\n          default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"重置\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_card, null, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"部门管理\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleAdd\n    }, {\n      default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"新增部门\")])),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $setup.deptList,\n      \"row-key\": \"id\",\n      border: \"\",\n      \"tree-props\": {\n        children: 'children'\n      },\n      \"default-expand-all\": true\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"部门名称\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"leader\",\n        label: \"负责人\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"phone\",\n        label: \"联系电话\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"email\",\n        label: \"邮箱\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"sortValue\",\n        label: \"排序\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"status\",\n        label: \"状态\",\n        width: \"80\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_tag, {\n          type: scope.row.status === 1 ? 'success' : 'danger'\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.status === 1 ? '正常' : '停用'), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"200\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          link: \"\",\n          onClick: $event => $setup.handleEdit(scope.row)\n        }, {\n          default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"编辑\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"danger\",\n          link: \"\",\n          onClick: $event => $setup.handleDelete(scope.row)\n        }, {\n          default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\"删除\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]), _ctx.total > 0 ? (_openBlock(), _createBlock(_component_el_pagination, {\n      key: 0,\n      \"current-page\": $setup.queryParams.pageNum,\n      \"onUpdate:currentPage\": _cache[3] || (_cache[3] = $event => $setup.queryParams.pageNum = $event),\n      \"page-size\": $setup.queryParams.pageSize,\n      \"onUpdate:pageSize\": _cache[4] || (_cache[4] = $event => $setup.queryParams.pageSize = $event),\n      \"page-sizes\": [10, 20, 50, 100],\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: _ctx.total,\n      onSizeChange: _ctx.handleSizeChange,\n      onCurrentChange: _ctx.handleCurrentChange\n    }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 添加/编辑部门对话框 \"), _createVNode(_component_el_dialog, {\n    title: $setup.dialogTitle,\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.dialogVisible = $event),\n    width: \"500px\",\n    \"append-to-body\": \"\",\n    \"close-on-click-modal\": false\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n      onClick: $setup.cancelForm\n    }, {\n      default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"取 消\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.submitForm\n    }, {\n      default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"确 定\")])),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"deptFormRef\",\n      model: $setup.deptForm,\n      rules: $setup.rules,\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"上级部门\",\n        prop: \"parentId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tree_select, {\n          modelValue: $setup.deptForm.parentId,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.deptForm.parentId = $event),\n          data: $setup.deptTreeOptions,\n          \"render-after-expand\": false,\n          \"node-key\": \"id\",\n          props: {\n            label: 'name',\n            value: 'id',\n            children: 'children'\n          },\n          placeholder: \"请选择上级部门\",\n          \"check-strictly\": \"\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"data\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"部门名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.deptForm.name,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.deptForm.name = $event),\n          placeholder: \"请输入部门名称\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"负责人\",\n        prop: \"leader\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.deptForm.leader,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.deptForm.leader = $event),\n          placeholder: \"请输入负责人\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"联系电话\",\n        prop: \"phone\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.deptForm.phone,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.deptForm.phone = $event),\n          placeholder: \"请输入联系电话\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"排序\",\n        prop: \"sortValue\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $setup.deptForm.sortValue,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.deptForm.sortValue = $event),\n          min: 0,\n          max: 999,\n          \"controls-position\": \"right\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.deptForm.status,\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.deptForm.status = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: 1\n          }, {\n            default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"正常\")])),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_radio, {\n            label: 0\n          }, {\n            default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"停用\")])),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","default","_withCtx","_component_el_form","model","$setup","queryParams","ref","inline","_component_el_form_item","label","prop","_component_el_input","modelValue","name","_cache","$event","placeholder","clearable","_","leader","_component_el_select","status","_component_el_option","value","_component_el_button","type","onClick","_ctx","handleQuery","_createTextVNode","resetQuery","header","_createElementVNode","_hoisted_2","handleAdd","_createBlock","_component_el_table","data","deptList","border","children","_component_el_table_column","width","scope","_component_el_tag","row","_toDisplayString","link","handleEdit","handleDelete","loading","total","_component_el_pagination","key","pageNum","pageSize","layout","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_createCommentVNode","_component_el_dialog","title","dialogTitle","dialogVisible","footer","_hoisted_3","cancelForm","submitForm","deptForm","rules","_component_el_tree_select","parentId","deptTreeOptions","props","phone","_component_el_input_number","sortValue","min","max","_component_el_radio_group","_component_el_radio"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/pages/system/SysDept.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"queryParams.name\" placeholder=\"请输入部门名称\" clearable />\n        </el-form-item>\n        <el-form-item label=\"负责人\" prop=\"leader\">\n          <el-input v-model=\"queryParams.leader\" placeholder=\"请输入负责人\" clearable />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n            <el-option label=\"正常\" :value=\"1\" />\n            <el-option label=\"停用\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>部门管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">新增部门</el-button>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"deptList\" row-key=\"id\" border :tree-props=\"{ children: 'children' }\" :default-expand-all=\"true\">\n        <el-table-column prop=\"name\" label=\"部门名称\" />\n        <el-table-column prop=\"leader\" label=\"负责人\" />\n        <el-table-column prop=\"phone\" label=\"联系电话\" />\n        <el-table-column prop=\"email\" label=\"邮箱\" />\n        <el-table-column prop=\"sortValue\" label=\"排序\" width=\"80\" />\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '正常' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"danger\" link @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n\n    <!-- 添加/编辑部门对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      v-model=\"dialogVisible\" \n      width=\"500px\" \n      append-to-body\n      :close-on-click-modal=\"false\"\n    >\n      <el-form \n        ref=\"deptFormRef\" \n        :model=\"deptForm\" \n        :rules=\"rules\" \n        label-width=\"80px\"\n      >\n        <el-form-item label=\"上级部门\" prop=\"parentId\">\n          <el-tree-select\n            v-model=\"deptForm.parentId\"\n            :data=\"deptTreeOptions\"\n            :render-after-expand=\"false\"\n            node-key=\"id\"\n            :props=\"{ label: 'name', value: 'id', children: 'children' }\"\n            placeholder=\"请选择上级部门\"\n            check-strictly\n            clearable\n          />\n        </el-form-item>\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"deptForm.name\" placeholder=\"请输入部门名称\" />\n        </el-form-item>\n        <el-form-item label=\"负责人\" prop=\"leader\">\n          <el-input v-model=\"deptForm.leader\" placeholder=\"请输入负责人\" />\n        </el-form-item>\n        <el-form-item label=\"联系电话\" prop=\"phone\">\n          <el-input v-model=\"deptForm.phone\" placeholder=\"请输入联系电话\" />\n        </el-form-item>\n        <el-form-item label=\"排序\" prop=\"sortValue\">\n          <el-input-number v-model=\"deptForm.sortValue\" :min=\"0\" :max=\"999\" controls-position=\"right\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"deptForm.status\">\n            <el-radio :label=\"1\">正常</el-radio>\n            <el-radio :label=\"0\">停用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"cancelForm\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getDeptTree, addDept, updateDept, deleteDept, getDeptById } from '@/api/dept'\n\n// 表格数据和状态\nconst deptList = ref([])\nconst deptTreeOptions = ref([])\nconst loading = ref(false)\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  name: '',\n  parentId: undefined,\n  leader: '',\n  status: undefined\n})\n\n// 对话框相关\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\nconst deptFormRef = ref(null)\nconst deptForm = reactive({\n  id: undefined,\n  parentId: 0,\n  name: '',\n  leader: '',\n  phone: '',\n  sortValue: 0,\n  status: 1\n})\n\n// 表单验证规则\nconst rules = {\n  name: [\n    { required: true, message: '请输入部门名称', trigger: 'blur' },\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n  ],\n  parentId: [\n    { required: true, message: '请选择上级部门', trigger: 'change' }\n  ],\n  sortValue: [\n    { required: true, message: '请输入排序', trigger: 'blur' }\n  ],\n  status: [\n    { required: true, message: '请选择状态', trigger: 'change' }\n  ]\n}\n\n// 获取部门树\nconst getList = async () => {\n  try {\n    loading.value = true\n    \n    // 获取部门列表数据，传递分页参数\n    const res = await getDeptTree(queryParams)\n    console.log('部门列表响应:', res)\n    \n    // 处理后端返回的数据\n    if (res.data && res.data.items) {\n      // 使用后端返回的数据\n      deptList.value = res.data.items || []\n      \n      // 构建部门树结构\n      deptList.value = deptList.value.map(item => ({\n        ...item,\n        parentId: item.parentId || 0, // 确保parentId不为空\n        children: [] // 初始化children数组\n      }))\n      \n      // 构建树形选择器数据\n      deptTreeOptions.value = [{ id: 0, name: '顶级部门', parentId: -1 }].concat(\n        deptList.value.map(item => ({\n          id: item.id,\n          name: item.name,\n          parentId: item.parentId\n        }))\n      )\n    } else {\n      deptList.value = []\n      deptTreeOptions.value = [{ id: 0, name: '顶级部门', parentId: -1 }]\n    }\n  } catch (error) {\n    console.error('获取部门列表失败', error)\n    ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n  } finally {\n    loading.value = false\n  }\n}\n\n// 重置表单\nconst resetForm = () => {\n  deptForm.id = undefined\n  deptForm.parentId = 0\n  deptForm.name = ''\n  deptForm.leader = ''\n  deptForm.phone = ''\n  deptForm.sortValue = 0\n  deptForm.status = 1\n  nextTick(() => {\n    deptFormRef.value?.resetFields()\n  })\n}\n\n// 新增部门\nconst handleAdd = () => {\n  resetForm()\n  dialogTitle.value = '新增部门'\n  dialogVisible.value = true\n}\n\n// 编辑部门\nconst handleEdit = async (row) => {\n  resetForm()\n  dialogTitle.value = '编辑部门'\n  dialogVisible.value = true\n  \n  // 获取最新的部门信息\n  try {\n    const res = await getDeptById(row.id)\n    if (res.data) {\n      // 填充表单数据\n      Object.assign(deptForm, res.data)\n    }\n  } catch (error) {\n    ElMessage.error('获取部门信息失败')\n  }\n}\n\n// 删除部门\nconst handleDelete = (row) => {\n  ElMessageBox.confirm(`确定要删除部门 ${row.name} 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await deleteDept(row.id)\n      ElMessage.success('删除成功')\n      getList()\n    } catch (error) {\n      ElMessage.error('删除失败')\n    }\n  }).catch(() => {})\n}\n\n// 取消表单\nconst cancelForm = () => {\n  dialogVisible.value = false\n  resetForm()\n}\n\n// 提交表单\nconst submitForm = async () => {\n  deptFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        if (deptForm.id) {\n          // 编辑部门\n          await updateDept(deptForm)\n          ElMessage.success('修改部门成功')\n        } else {\n          // 新增部门\n          await addDept(deptForm)\n          ElMessage.success('新增部门成功')\n        }\n        dialogVisible.value = false\n        getList()\n      } catch (error) {\n        console.error('操作失败', error)\n        ElMessage.error('操作失败，请稍后重试')\n      }\n    }\n  })\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}