{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_3 = {\n  class: \"avatar-container\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"empty-data\"\n};\nimport { ref, reactive, onMounted, nextTick } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getAllCustomerInfo, getCustomerInfo, removeCustomer, updateCustomer, getCustomerLoginLog } from '@/api/customer';\n\n// 查询参数\n\nexport default {\n  __name: 'CustomerInfo',\n  setup(__props) {\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      nickname: '',\n      gender: undefined,\n      phone: '',\n      status: undefined\n    });\n\n    // 表格数据和状态\n    const customerList = ref([]);\n    const loading = ref(false);\n    const total = ref(0);\n\n    // 编辑对话框相关\n    const dialogVisible = ref(false);\n    const customerFormRef = ref(null);\n    const customerForm = reactive({\n      id: '',\n      wxOpenId: '',\n      nickname: '',\n      gender: '',\n      avatarUrl: '',\n      phone: '',\n      status: 1\n    });\n\n    // 详情对话框相关\n    const detailDialogVisible = ref(false);\n    const detailForm = reactive({});\n\n    // 日志相关\n    const logDialogVisible = ref(false);\n    const logData = ref(null);\n\n    // 表单验证规则\n    const rules = {\n      status: [{\n        required: true,\n        message: '请选择状态',\n        trigger: 'change'\n      }]\n    };\n\n    // 获取客户列表\n    const getList = async () => {\n      try {\n        loading.value = true;\n        const res = await getAllCustomerInfo(queryParams);\n        console.log('客户列表响应:', res);\n        customerList.value = res.data.items || [];\n        total.value = res.data.total || 0;\n      } catch (error) {\n        console.error('获取客户列表失败', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 查询按钮\n    const handleQuery = () => {\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      queryParams.nickname = '';\n      queryParams.gender = undefined;\n      queryParams.phone = '';\n      queryParams.status = undefined;\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      customerForm.id = '';\n      customerForm.wxOpenId = '';\n      customerForm.nickname = '';\n      customerForm.gender = '';\n      customerForm.avatarUrl = '';\n      customerForm.phone = '';\n      customerForm.status = 1;\n      nextTick(() => {\n        customerFormRef.value?.resetFields();\n      });\n    };\n\n    // 编辑客户\n    const handleEdit = async row => {\n      resetForm();\n      dialogVisible.value = true;\n\n      // 获取最新的客户信息\n      try {\n        // 优先使用昵称查询\n        const res = await getCustomerInfo(row.nickname);\n        if (res.data) {\n          // 填充表单数据\n          Object.assign(customerForm, res.data);\n        }\n      } catch (error) {\n        console.error('获取客户信息失败', error);\n        ElMessage.error('获取客户信息失败');\n      }\n    };\n\n    // 查看客户详情\n    const viewDetail = async row => {\n      try {\n        detailDialogVisible.value = true;\n        // 优先使用昵称查询\n        const res = await getCustomerInfo(row.nickname);\n        if (res.data) {\n          Object.assign(detailForm, res.data);\n        }\n      } catch (error) {\n        console.error('获取客户详情失败', error);\n        ElMessage.error('获取客户详情失败');\n      }\n    };\n\n    // 查看登录日志\n    const viewLog = async row => {\n      try {\n        logDialogVisible.value = true;\n        logData.value = null;\n\n        // 使用nickname查询登录日志\n        const res = await getCustomerLoginLog(row.nickname);\n        console.log('登录日志响应:', res);\n        if (res.data) {\n          logData.value = res.data;\n        }\n      } catch (error) {\n        console.error('获取登录日志失败', error);\n        ElMessage.error('获取登录日志失败');\n      }\n    };\n\n    // 删除客户\n    const handleDelete = row => {\n      ElMessageBox.confirm(`确定要删除客户 ${row.nickname} 吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await removeCustomer(row.nickname);\n          ElMessage.success('删除成功');\n          getList();\n        } catch (error) {\n          console.error('删除客户失败', error);\n          ElMessage.error('删除失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 取消表单\n    const cancelForm = () => {\n      dialogVisible.value = false;\n      resetForm();\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      customerFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            // 编辑客户\n            const res = await updateCustomer(customerForm);\n            ElMessage.success('修改客户信息成功');\n            dialogVisible.value = false;\n            getList();\n          } catch (error) {\n            console.error('操作失败', error);\n            ElMessage.error('操作失败，请稍后重试');\n          }\n        }\n      });\n    };\n\n    // 分页操作\n    const handleSizeChange = size => {\n      queryParams.pageSize = size;\n      getList();\n    };\n    const handleCurrentChange = page => {\n      queryParams.pageNum = page;\n      getList();\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getList();\n    });\n    return (_ctx, _cache) => {\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n      const _component_el_option = _resolveComponent(\"el-option\");\n      const _component_el_select = _resolveComponent(\"el-select\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_form = _resolveComponent(\"el-form\");\n      const _component_el_card = _resolveComponent(\"el-card\");\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n      const _component_el_avatar = _resolveComponent(\"el-avatar\");\n      const _component_el_tag = _resolveComponent(\"el-tag\");\n      const _component_el_table = _resolveComponent(\"el-table\");\n      const _component_el_pagination = _resolveComponent(\"el-pagination\");\n      const _component_el_radio = _resolveComponent(\"el-radio\");\n      const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n      const _component_el_dialog = _resolveComponent(\"el-dialog\");\n      const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n      const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n      const _component_el_divider = _resolveComponent(\"el-divider\");\n      const _component_el_image = _resolveComponent(\"el-image\");\n      const _directive_loading = _resolveDirective(\"loading\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n        class: \"search-card\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          model: queryParams,\n          ref: \"queryForm\",\n          inline: true,\n          class: \"search-form\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"昵称\",\n            prop: \"nickname\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: queryParams.nickname,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => queryParams.nickname = $event),\n              placeholder: \"请输入昵称\",\n              clearable: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"性别\",\n            prop: \"gender\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: queryParams.gender,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => queryParams.gender = $event),\n              placeholder: \"请选择性别\",\n              clearable: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"男\",\n                value: \"男\"\n              }), _createVNode(_component_el_option, {\n                label: \"女\",\n                value: \"女\"\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"手机号\",\n            prop: \"phone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: queryParams.phone,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => queryParams.phone = $event),\n              placeholder: \"请输入手机号\",\n              clearable: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"状态\",\n            prop: \"status\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: queryParams.status,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => queryParams.status = $event),\n              placeholder: \"请选择状态\",\n              clearable: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"正常\",\n                value: 1\n              }), _createVNode(_component_el_option, {\n                label: \"停用\",\n                value: 2\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: handleQuery\n            }, {\n              default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"查询\")])),\n              _: 1\n            }), _createVNode(_component_el_button, {\n              onClick: resetQuery\n            }, {\n              default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"重置\")])),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"model\"])]),\n        _: 1\n      }), _createVNode(_component_el_card, null, {\n        header: _withCtx(() => _cache[16] || (_cache[16] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"客户列表\")], -1)])),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          data: customerList.value,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            type: \"index\",\n            label: \"#\",\n            width: \"50\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"nickname\",\n            label: \"昵称\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"gender\",\n            label: \"性别\",\n            width: \"80\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"phone\",\n            label: \"手机号\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"wxOpenId\",\n            label: \"微信OpenID\",\n            width: \"200\",\n            \"show-overflow-tooltip\": \"\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"头像\",\n            width: \"80\"\n          }, {\n            default: _withCtx(scope => [scope.row.avatarUrl ? (_openBlock(), _createBlock(_component_el_avatar, {\n              key: 0,\n              src: scope.row.avatarUrl,\n              size: 40\n            }, null, 8, [\"src\"])) : (_openBlock(), _createBlock(_component_el_avatar, {\n              key: 1,\n              size: 40,\n              icon: \"el-icon-user\"\n            }))]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"80\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: scope.row.status === 1 ? 'success' : 'danger'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.status === 1 ? '正常' : '禁用'), 1)]),\n              _: 2\n            }, 1032, [\"type\"])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"280\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              link: \"\",\n              onClick: $event => handleEdit(scope.row)\n            }, {\n              default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\"编辑\")])),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"danger\",\n              link: \"\",\n              onClick: $event => handleDelete(scope.row)\n            }, {\n              default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"删除\")])),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"info\",\n              link: \"\",\n              onClick: $event => viewLog(scope.row)\n            }, {\n              default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"查看日志\")])),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"warning\",\n              link: \"\",\n              onClick: $event => viewDetail(scope.row)\n            }, {\n              default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"查看详情\")])),\n              _: 2\n            }, 1032, [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"data\"])), [[_directive_loading, loading.value]]), total.value > 0 ? (_openBlock(), _createBlock(_component_el_pagination, {\n          key: 0,\n          \"current-page\": queryParams.pageNum,\n          \"onUpdate:currentPage\": _cache[4] || (_cache[4] = $event => queryParams.pageNum = $event),\n          \"page-size\": queryParams.pageSize,\n          \"onUpdate:pageSize\": _cache[5] || (_cache[5] = $event => queryParams.pageSize = $event),\n          \"page-sizes\": [10, 20, 50, 100],\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          total: total.value,\n          onSizeChange: handleSizeChange,\n          onCurrentChange: handleCurrentChange\n        }, null, 8, [\"current-page\", \"page-size\", \"total\"])) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }), _createVNode(_component_el_dialog, {\n        title: \"编辑客户\",\n        modelValue: dialogVisible.value,\n        \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => dialogVisible.value = $event),\n        width: \"500px\",\n        \"append-to-body\": \"\",\n        \"close-on-click-modal\": false\n      }, {\n        footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n          onClick: cancelForm\n        }, {\n          default: _withCtx(() => _cache[23] || (_cache[23] = [_createTextVNode(\"取消\")])),\n          _: 1\n        }), _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: submitForm\n        }, {\n          default: _withCtx(() => _cache[24] || (_cache[24] = [_createTextVNode(\"确定\")])),\n          _: 1\n        })])]),\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          ref_key: \"customerFormRef\",\n          ref: customerFormRef,\n          model: customerForm,\n          rules: rules,\n          \"label-width\": \"100px\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"客户ID\",\n            prop: \"id\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: customerForm.id,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => customerForm.id = $event),\n              disabled: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"微信OpenID\",\n            prop: \"wxOpenId\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: customerForm.wxOpenId,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => customerForm.wxOpenId = $event),\n              disabled: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"昵称\",\n            prop: \"nickname\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: customerForm.nickname,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => customerForm.nickname = $event),\n              disabled: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"手机号码\",\n            prop: \"phone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: customerForm.phone,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => customerForm.phone = $event),\n              disabled: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"状态\",\n            prop: \"status\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n              modelValue: customerForm.status,\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => customerForm.status = $event)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_radio, {\n                value: 1\n              }, {\n                default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"正常\")])),\n                _: 1\n              }), _createVNode(_component_el_radio, {\n                value: 2\n              }, {\n                default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"禁用\")])),\n                _: 1\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"model\"])]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n        title: \"客户详情\",\n        modelValue: detailDialogVisible.value,\n        \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => detailDialogVisible.value = $event),\n        width: \"600px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_descriptions, {\n          title: \"基本信息\",\n          column: 2,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"客户ID\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.id), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"微信OpenID\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.wxOpenId), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"昵称\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.nickname), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"性别\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.gender), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"手机号\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.phone), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"状态\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tag, {\n              type: detailForm.status === 1 ? 'success' : 'danger'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(detailForm.status === 1 ? '正常' : '禁用'), 1)]),\n              _: 1\n            }, 8, [\"type\"])]),\n            _: 1\n          })]),\n          _: 1\n        }), detailForm.avatarUrl ? (_openBlock(), _createElementBlock(_Fragment, {\n          key: 0\n        }, [_createVNode(_component_el_divider, {\n          \"content-position\": \"center\"\n        }, {\n          default: _withCtx(() => _cache[25] || (_cache[25] = [_createTextVNode(\"头像\")])),\n          _: 1\n        }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_image, {\n          src: detailForm.avatarUrl,\n          \"preview-src-list\": [detailForm.avatarUrl],\n          fit: \"contain\",\n          style: {\n            \"width\": \"120px\",\n            \"height\": \"120px\"\n          }\n        }, null, 8, [\"src\", \"preview-src-list\"])])], 64)) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n        title: \"客户登录日志\",\n        modelValue: logDialogVisible.value,\n        \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => logDialogVisible.value = $event),\n        width: \"600px\"\n      }, {\n        default: _withCtx(() => [logData.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_descriptions, {\n          column: 2,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"客户ID\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(logData.value.customerId), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"IP地址\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(logData.value.ipaddr || '未记录'), 1)]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"登录状态\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tag, {\n              type: logData.value.status ? 'danger' : 'success'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(logData.value.status ? '失败' : '成功'), 1)]),\n              _: 1\n            }, 8, [\"type\"])]),\n            _: 1\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"提示信息\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(logData.value.msg || '无'), 1)]),\n            _: 1\n          })]),\n          _: 1\n        })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" 暂无登录日志数据 \"))]),\n        _: 1\n      }, 8, [\"modelValue\"])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","ElMessage","ElMessageBox","getAllCustomerInfo","getCustomerInfo","removeCustomer","updateCustomer","getCustomerLoginLog","queryParams","pageNum","pageSize","nickname","gender","undefined","phone","status","customerList","loading","total","dialogVisible","customerFormRef","customerForm","id","wxOpenId","avatarUrl","detailDialogVisible","detailForm","logDialogVisible","logData","rules","required","message","trigger","getList","value","res","console","log","data","items","error","handleQuery","resetQuery","resetForm","resetFields","handleEdit","row","Object","assign","viewDetail","viewLog","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","cancelForm","submitForm","validate","valid","handleSizeChange","size","handleCurrentChange","page"],"sources":["D:/LIHAOZE/JavaStudyCode/frontui/frontui/src/pages/customer/CustomerInfo.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"queryParams.nickname\" placeholder=\"请输入昵称\" clearable />\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-select v-model=\"queryParams.gender\" placeholder=\"请选择性别\" clearable>\n            <el-option label=\"男\" value=\"男\" />\n            <el-option label=\"女\" value=\"女\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"queryParams.phone\" placeholder=\"请输入手机号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n            <el-option label=\"正常\" :value=\"1\" />\n            <el-option label=\"停用\" :value=\"2\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>客户列表</span>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"customerList\" border>\n        <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n        <el-table-column prop=\"nickname\" label=\"昵称\" width=\"120\" />\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\" />\n        <el-table-column prop=\"phone\" label=\"手机号\" width=\"120\" />\n        <el-table-column prop=\"wxOpenId\" label=\"微信OpenID\" width=\"200\" show-overflow-tooltip />\n        <el-table-column label=\"头像\" width=\"80\">\n          <template #default=\"scope\">\n            <el-avatar v-if=\"scope.row.avatarUrl\" :src=\"scope.row.avatarUrl\" :size=\"40\"></el-avatar>\n            <el-avatar v-else :size=\"40\" icon=\"el-icon-user\"></el-avatar>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '正常' : '禁用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"280\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"danger\" link @click=\"handleDelete(scope.row)\">删除</el-button>\n            <el-button type=\"info\" link @click=\"viewLog(scope.row)\">查看日志</el-button>\n            <el-button type=\"warning\" link @click=\"viewDetail(scope.row)\">查看详情</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n\n    <!-- 客户编辑对话框 -->\n    <el-dialog \n      title=\"编辑客户\" \n      v-model=\"dialogVisible\" \n      width=\"500px\" \n      append-to-body\n      :close-on-click-modal=\"false\"\n    >\n      <el-form \n        ref=\"customerFormRef\" \n        :model=\"customerForm\" \n        :rules=\"rules\" \n        label-width=\"100px\"\n      >\n        <el-form-item label=\"客户ID\" prop=\"id\">\n          <el-input v-model=\"customerForm.id\" disabled />\n        </el-form-item>\n        <el-form-item label=\"微信OpenID\" prop=\"wxOpenId\">\n          <el-input v-model=\"customerForm.wxOpenId\" disabled />\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"customerForm.nickname\" disabled />\n        </el-form-item>\n        <el-form-item label=\"手机号码\" prop=\"phone\">\n          <el-input v-model=\"customerForm.phone\" disabled />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"customerForm.status\">\n            <el-radio :value=\"1\">正常</el-radio>\n            <el-radio :value=\"2\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"cancelForm\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 客户详情对话框 -->\n    <el-dialog \n      title=\"客户详情\" \n      v-model=\"detailDialogVisible\" \n      width=\"600px\"\n    >\n      <el-descriptions title=\"基本信息\" :column=\"2\" border>\n        <el-descriptions-item label=\"客户ID\">{{ detailForm.id }}</el-descriptions-item>\n        <el-descriptions-item label=\"微信OpenID\">{{ detailForm.wxOpenId }}</el-descriptions-item>\n        <el-descriptions-item label=\"昵称\">{{ detailForm.nickname }}</el-descriptions-item>\n        <el-descriptions-item label=\"性别\">{{ detailForm.gender }}</el-descriptions-item>\n        <el-descriptions-item label=\"手机号\">{{ detailForm.phone }}</el-descriptions-item>\n        <el-descriptions-item label=\"状态\">\n          <el-tag :type=\"detailForm.status === 1 ? 'success' : 'danger'\">\n            {{ detailForm.status === 1 ? '正常' : '禁用' }}\n          </el-tag>\n        </el-descriptions-item>\n      </el-descriptions>\n\n      <template v-if=\"detailForm.avatarUrl\">\n        <el-divider content-position=\"center\">头像</el-divider>\n        <div class=\"avatar-container\">\n          <el-image \n            :src=\"detailForm.avatarUrl\" \n            :preview-src-list=\"[detailForm.avatarUrl]\"\n            fit=\"contain\"\n            style=\"width: 120px; height: 120px;\"\n          ></el-image>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 登录日志对话框 -->\n    <el-dialog \n      title=\"客户登录日志\" \n      v-model=\"logDialogVisible\" \n      width=\"600px\"\n    >\n      <div v-if=\"logData\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"客户ID\">{{ logData.customerId }}</el-descriptions-item>\n          <el-descriptions-item label=\"IP地址\">{{ logData.ipaddr || '未记录' }}</el-descriptions-item>\n          <el-descriptions-item label=\"登录状态\">\n            <el-tag :type=\"logData.status ? 'danger' : 'success'\">\n              {{ logData.status ? '失败' : '成功' }}\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"提示信息\">{{ logData.msg || '无' }}</el-descriptions-item>\n        </el-descriptions>\n      </div>\n      <div v-else class=\"empty-data\">\n        暂无登录日志数据\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getAllCustomerInfo, getCustomerInfo, removeCustomer, updateCustomer, getCustomerLoginLog } from '@/api/customer'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  nickname: '',\n  gender: undefined,\n  phone: '',\n  status: undefined\n})\n\n// 表格数据和状态\nconst customerList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 编辑对话框相关\nconst dialogVisible = ref(false)\nconst customerFormRef = ref(null)\nconst customerForm = reactive({\n  id: '',\n  wxOpenId: '',\n  nickname: '',\n  gender: '',\n  avatarUrl: '',\n  phone: '',\n  status: 1\n})\n\n// 详情对话框相关\nconst detailDialogVisible = ref(false)\nconst detailForm = reactive({})\n\n// 日志相关\nconst logDialogVisible = ref(false)\nconst logData = ref(null)\n\n// 表单验证规则\nconst rules = {\n  status: [\n    { required: true, message: '请选择状态', trigger: 'change' }\n  ]\n}\n\n// 获取客户列表\nconst getList = async () => {\n  try {\n    loading.value = true\n    const res = await getAllCustomerInfo(queryParams)\n    console.log('客户列表响应:', res)\n    customerList.value = res.data.items || []\n    total.value = res.data.total || 0\n  } catch (error) {\n    console.error('获取客户列表失败', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.nickname = ''\n  queryParams.gender = undefined\n  queryParams.phone = ''\n  queryParams.status = undefined\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置表单\nconst resetForm = () => {\n  customerForm.id = ''\n  customerForm.wxOpenId = ''\n  customerForm.nickname = ''\n  customerForm.gender = ''\n  customerForm.avatarUrl = ''\n  customerForm.phone = ''\n  customerForm.status = 1\n  nextTick(() => {\n    customerFormRef.value?.resetFields()\n  })\n}\n\n// 编辑客户\nconst handleEdit = async (row) => {\n  resetForm()\n  dialogVisible.value = true\n  \n  // 获取最新的客户信息\n  try {\n    // 优先使用昵称查询\n    const res = await getCustomerInfo(row.nickname)\n    if (res.data) {\n      // 填充表单数据\n      Object.assign(customerForm, res.data)\n    }\n  } catch (error) {\n    console.error('获取客户信息失败', error)\n    ElMessage.error('获取客户信息失败')\n  }\n}\n\n// 查看客户详情\nconst viewDetail = async (row) => {\n  try {\n    detailDialogVisible.value = true\n    // 优先使用昵称查询\n    const res = await getCustomerInfo(row.nickname)\n    if (res.data) {\n      Object.assign(detailForm, res.data)\n    }\n  } catch (error) {\n    console.error('获取客户详情失败', error)\n    ElMessage.error('获取客户详情失败')\n  }\n}\n\n// 查看登录日志\nconst viewLog = async (row) => {\n  try {\n    logDialogVisible.value = true\n    logData.value = null\n    \n    // 使用nickname查询登录日志\n    const res = await getCustomerLoginLog(row.nickname)\n    console.log('登录日志响应:', res)\n    \n    if (res.data) {\n      logData.value = res.data\n    }\n  } catch (error) {\n    console.error('获取登录日志失败', error)\n    ElMessage.error('获取登录日志失败')\n  }\n}\n\n// 删除客户\nconst handleDelete = (row) => {\n  ElMessageBox.confirm(`确定要删除客户 ${row.nickname} 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await removeCustomer(row.nickname)\n      ElMessage.success('删除成功')\n      getList()\n    } catch (error) {\n      console.error('删除客户失败', error)\n      ElMessage.error('删除失败')\n    }\n  }).catch(() => {})\n}\n\n// 取消表单\nconst cancelForm = () => {\n  dialogVisible.value = false\n  resetForm()\n}\n\n// 提交表单\nconst submitForm = async () => {\n  customerFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        // 编辑客户\n        const res = await updateCustomer(customerForm)\n        ElMessage.success('修改客户信息成功')\n        dialogVisible.value = false\n        getList()\n      } catch (error) {\n        console.error('操作失败', error)\n        ElMessage.error('操作失败，请稍后重试')\n      }\n    }\n  })\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.el-pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n}\n\n.empty-data {\n  text-align: center;\n  color: #909399;\n  padding: 30px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}