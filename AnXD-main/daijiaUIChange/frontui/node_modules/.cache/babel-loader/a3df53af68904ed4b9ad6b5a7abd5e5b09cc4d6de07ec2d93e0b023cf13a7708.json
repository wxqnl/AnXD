{"ast":null,"code":"import request from '@/utils/request';\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  });\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  });\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  });\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  });\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  });\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 检查并确保id是字符串类型\n  let userId = data.id;\n  if (userId !== undefined && userId !== null && typeof userId !== 'string') {\n    userId = String(userId);\n  }\n\n  // 检查并确保数字类型字段正确\n  let deptId = null;\n  if (data.deptId !== undefined && data.deptId !== null) {\n    deptId = Number(data.deptId);\n  }\n  let postId = null;\n  if (data.postId !== undefined && data.postId !== null) {\n    postId = Number(data.postId);\n  }\n  let status = 1;\n  if (data.status !== undefined && data.status !== null) {\n    status = Number(data.status);\n  }\n\n  // 创建与SQL完全匹配的用户对象\n  const userObj = {\n    id: userId,\n    username: data.username || '',\n    // 保持用户名必须存在\n    password: data.password || '',\n    // 必须有密码字段但不修改密码内容\n    name: data.name || '',\n    phone: data.phone || '',\n    headUrl: data.headUrl || '',\n    // 头像URL必须存在\n    deptId: deptId,\n    postId: postId,\n    description: data.description || '',\n    status: status\n  };\n  console.log('发送SQL匹配的用户对象:', userObj);\n\n  // 使用PUT方法发送\n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: userObj,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 30000 // 增加超时时间\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  });\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  console.log('登录日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  console.log('操作日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n}","map":{"version":3,"names":["request","login","data","url","method","params","getUserInfo","getAllUsers","getUserById","id","createUser","updateUser","userId","undefined","String","deptId","Number","postId","status","userObj","username","password","name","phone","headUrl","description","console","log","headers","timeout","deleteUser","getUserLoginLog","requestParams","pageNum","pageSize","getUserOperLog","operName"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/api/user.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  })\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  })\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  })\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  })\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  })\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 检查并确保id是字符串类型\n  let userId = data.id;\n  if (userId !== undefined && userId !== null && typeof userId !== 'string') {\n    userId = String(userId);\n  }\n  \n  // 检查并确保数字类型字段正确\n  let deptId = null;\n  if (data.deptId !== undefined && data.deptId !== null) {\n    deptId = Number(data.deptId);\n  }\n  \n  let postId = null;\n  if (data.postId !== undefined && data.postId !== null) {\n    postId = Number(data.postId);\n  }\n  \n  let status = 1;\n  if (data.status !== undefined && data.status !== null) {\n    status = Number(data.status);\n  }\n  \n  // 创建与SQL完全匹配的用户对象\n  const userObj = {\n    id: userId,\n    username: data.username || '', // 保持用户名必须存在\n    password: data.password || '', // 必须有密码字段但不修改密码内容\n    name: data.name || '',\n    phone: data.phone || '',\n    headUrl: data.headUrl || '', // 头像URL必须存在\n    deptId: deptId,\n    postId: postId,\n    description: data.description || '',\n    status: status\n  };\n  \n  console.log('发送SQL匹配的用户对象:', userObj);\n  \n  // 使用PUT方法发送\n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: userObj,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 30000 // 增加超时时间\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  })\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  \n  console.log('登录日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  \n  console.log('操作日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n} "],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;;AAErC;AACA,OAAO,SAASC,KAAKA,CAACC,IAAI,EAAE;EAC1B,OAAOF,OAAO,CAAC;IACbG,GAAG,EAAE,sBAAsB;IAC3BC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAEH;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASI,WAAWA,CAAA,EAAG;EAC5B,OAAON,OAAO,CAAC;IACbG,GAAG,EAAE,4BAA4B;IACjCC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASG,WAAWA,CAACF,MAAM,EAAE;EAClC,OAAOL,OAAO,CAAC;IACbG,GAAG,EAAE,wBAAwB;IAC7BC,MAAM,EAAE,KAAK;IACbC;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASG,WAAWA,CAACC,EAAE,EAAE;EAC9B,OAAOT,OAAO,CAAC;IACbG,GAAG,EAAE,YAAYM,EAAE,EAAE;IACrBL,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,UAAUA,CAACR,IAAI,EAAE;EAC/B,OAAOF,OAAO,CAAC;IACbG,GAAG,EAAE,UAAU;IACfC,MAAM,EAAE,MAAM;IACdF;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASS,UAAUA,CAACT,IAAI,EAAE;EAC/B;EACA,IAAIU,MAAM,GAAGV,IAAI,CAACO,EAAE;EACpB,IAAIG,MAAM,KAAKC,SAAS,IAAID,MAAM,KAAK,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACzEA,MAAM,GAAGE,MAAM,CAACF,MAAM,CAAC;EACzB;;EAEA;EACA,IAAIG,MAAM,GAAG,IAAI;EACjB,IAAIb,IAAI,CAACa,MAAM,KAAKF,SAAS,IAAIX,IAAI,CAACa,MAAM,KAAK,IAAI,EAAE;IACrDA,MAAM,GAAGC,MAAM,CAACd,IAAI,CAACa,MAAM,CAAC;EAC9B;EAEA,IAAIE,MAAM,GAAG,IAAI;EACjB,IAAIf,IAAI,CAACe,MAAM,KAAKJ,SAAS,IAAIX,IAAI,CAACe,MAAM,KAAK,IAAI,EAAE;IACrDA,MAAM,GAAGD,MAAM,CAACd,IAAI,CAACe,MAAM,CAAC;EAC9B;EAEA,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIhB,IAAI,CAACgB,MAAM,KAAKL,SAAS,IAAIX,IAAI,CAACgB,MAAM,KAAK,IAAI,EAAE;IACrDA,MAAM,GAAGF,MAAM,CAACd,IAAI,CAACgB,MAAM,CAAC;EAC9B;;EAEA;EACA,MAAMC,OAAO,GAAG;IACdV,EAAE,EAAEG,MAAM;IACVQ,QAAQ,EAAElB,IAAI,CAACkB,QAAQ,IAAI,EAAE;IAAE;IAC/BC,QAAQ,EAAEnB,IAAI,CAACmB,QAAQ,IAAI,EAAE;IAAE;IAC/BC,IAAI,EAAEpB,IAAI,CAACoB,IAAI,IAAI,EAAE;IACrBC,KAAK,EAAErB,IAAI,CAACqB,KAAK,IAAI,EAAE;IACvBC,OAAO,EAAEtB,IAAI,CAACsB,OAAO,IAAI,EAAE;IAAE;IAC7BT,MAAM,EAAEA,MAAM;IACdE,MAAM,EAAEA,MAAM;IACdQ,WAAW,EAAEvB,IAAI,CAACuB,WAAW,IAAI,EAAE;IACnCP,MAAM,EAAEA;EACV,CAAC;EAEDQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,OAAO,CAAC;;EAErC;EACA,OAAOnB,OAAO,CAAC;IACbG,GAAG,EAAE,UAAU;IACfC,MAAM,EAAE,KAAK;IACbF,IAAI,EAAEiB,OAAO;IACbS,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,OAAO,EAAE,KAAK,CAAC;EACjB,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASC,UAAUA,CAACrB,EAAE,EAAE;EAC7B,OAAOT,OAAO,CAAC;IACbG,GAAG,EAAE,YAAYM,EAAE,EAAE;IACrBL,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAAS2B,eAAeA,CAAC1B,MAAM,EAAE;EACtC;EACA,MAAM2B,aAAa,GAAG;IACpBC,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,IAAI7B,MAAM,CAACe,QAAQ,EAAE;IACnBY,aAAa,CAACZ,QAAQ,GAAGf,MAAM,CAACe,QAAQ;EAC1C;EAEAM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEK,aAAa,CAAC;EAEvC,OAAOhC,OAAO,CAAC;IACbG,GAAG,EAAE,0BAA0B;IAC/BC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE2B;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASG,cAAcA,CAAC9B,MAAM,EAAE;EACrC;EACA,MAAM2B,aAAa,GAAG;IACpBC,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,IAAI7B,MAAM,CAAC+B,QAAQ,EAAE;IACnBJ,aAAa,CAACI,QAAQ,GAAG/B,MAAM,CAAC+B,QAAQ;EAC1C;EAEAV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEK,aAAa,CAAC;EAEvC,OAAOhC,OAAO,CAAC;IACbG,GAAG,EAAE,yBAAyB;IAC9BC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE2B;EACV,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}