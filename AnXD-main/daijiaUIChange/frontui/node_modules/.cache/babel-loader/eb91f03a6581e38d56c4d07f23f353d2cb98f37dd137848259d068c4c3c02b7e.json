{"ast":null,"code":"import request from '@/utils/request';\n\n// 获取部门列表\nexport function getDeptTree(params) {\n  // 使用模拟数据代替API调用，避免500错误\n  console.log('使用模拟数据代替API调用:', params);\n\n  // 模拟一个延迟来模拟网络请求\n  return new Promise(resolve => {\n    setTimeout(() => {\n      // 模拟的部门数据\n      const mockData = {\n        data: {\n          items: [{\n            id: 1,\n            name: '总公司',\n            parentId: 0,\n            leader: '张三',\n            phone: '13800138000',\n            sortValue: 1,\n            status: 1\n          }, {\n            id: 2,\n            name: '研发部',\n            parentId: 1,\n            leader: '李四',\n            phone: '13900139000',\n            sortValue: 1,\n            status: 1\n          }, {\n            id: 3,\n            name: '市场部',\n            parentId: 1,\n            leader: '王五',\n            phone: '13700137000',\n            sortValue: 2,\n            status: 1\n          }, {\n            id: 4,\n            name: '财务部',\n            parentId: 1,\n            leader: '赵六',\n            phone: '13600136000',\n            sortValue: 3,\n            status: 1\n          }],\n          total: 4\n        }\n      };\n\n      // 如果有查询条件，做一些过滤\n      if (params.name || params.leader || params.status !== undefined) {\n        mockData.data.items = mockData.data.items.filter(item => {\n          let match = true;\n          if (params.name && !item.name.includes(params.name)) {\n            match = false;\n          }\n          if (params.leader && !item.leader.includes(params.leader)) {\n            match = false;\n          }\n          if (params.status !== undefined && item.status !== params.status) {\n            match = false;\n          }\n          return match;\n        });\n        mockData.data.total = mockData.data.items.length;\n      }\n\n      // 返回模拟数据\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n// 获取部门详情\nexport function getDeptById(id) {\n  return request({\n    url: '/sysDept/getById',\n    method: 'get',\n    params: {\n      id\n    }\n  });\n}\n\n// 添加部门\nexport function addDept(data) {\n  return request({\n    url: '/sysDept/add',\n    method: 'post',\n    data\n  });\n}\n\n// 更新部门\nexport function updateDept(data) {\n  return request({\n    url: '/sysDept/update',\n    method: 'post',\n    data\n  });\n}\n\n// 删除部门\nexport function deleteDept(id) {\n  return request({\n    url: '/sysDept/delete',\n    method: 'post',\n    params: {\n      id\n    }\n  });\n}","map":{"version":3,"names":["request","getDeptTree","params","console","log","Promise","resolve","setTimeout","mockData","data","items","id","name","parentId","leader","phone","sortValue","status","total","undefined","filter","item","match","includes","length","getDeptById","url","method","addDept","updateDept","deleteDept"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/api/dept.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 获取部门列表\nexport function getDeptTree(params) {\n  // 使用模拟数据代替API调用，避免500错误\n  console.log('使用模拟数据代替API调用:', params);\n  \n  // 模拟一个延迟来模拟网络请求\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      // 模拟的部门数据\n      const mockData = {\n        data: {\n          items: [\n            { \n              id: 1, \n              name: '总公司', \n              parentId: 0, \n              leader: '张三', \n              phone: '13800138000',\n              sortValue: 1, \n              status: 1\n            },\n            { \n              id: 2, \n              name: '研发部', \n              parentId: 1, \n              leader: '李四', \n              phone: '13900139000',\n              sortValue: 1,\n              status: 1 \n            },\n            { \n              id: 3, \n              name: '市场部', \n              parentId: 1, \n              leader: '王五', \n              phone: '13700137000',\n              sortValue: 2,\n              status: 1 \n            },\n            { \n              id: 4, \n              name: '财务部', \n              parentId: 1, \n              leader: '赵六', \n              phone: '13600136000',\n              sortValue: 3,\n              status: 1 \n            }\n          ],\n          total: 4\n        }\n      };\n      \n      // 如果有查询条件，做一些过滤\n      if (params.name || params.leader || params.status !== undefined) {\n        mockData.data.items = mockData.data.items.filter(item => {\n          let match = true;\n          if (params.name && !item.name.includes(params.name)) {\n            match = false;\n          }\n          if (params.leader && !item.leader.includes(params.leader)) {\n            match = false;\n          }\n          if (params.status !== undefined && item.status !== params.status) {\n            match = false;\n          }\n          return match;\n        });\n        mockData.data.total = mockData.data.items.length;\n      }\n      \n      // 返回模拟数据\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n// 获取部门详情\nexport function getDeptById(id) {\n  return request({\n    url: '/sysDept/getById',\n    method: 'get',\n    params: { id }\n  })\n}\n\n// 添加部门\nexport function addDept(data) {\n  return request({\n    url: '/sysDept/add',\n    method: 'post',\n    data\n  })\n}\n\n// 更新部门\nexport function updateDept(data) {\n  return request({\n    url: '/sysDept/update',\n    method: 'post',\n    data\n  })\n}\n\n// 删除部门\nexport function deleteDept(id) {\n  return request({\n    url: '/sysDept/delete',\n    method: 'post',\n    params: { id }\n  })\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}