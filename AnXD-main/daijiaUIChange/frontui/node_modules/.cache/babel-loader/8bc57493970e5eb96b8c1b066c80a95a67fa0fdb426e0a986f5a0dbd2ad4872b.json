{"ast":null,"code":"import request from '@/utils/request';\nimport qs from 'qs';\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    data: qs.stringify(data),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  });\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  });\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  });\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  });\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 确保数据结构完全符合后端SysUser对象的期望\n  const userData = {\n    // 确保id为字符串类型(String)\n    id: data.id ? String(data.id) : '',\n    username: data.username || '',\n    password: data.password || '',\n    name: data.name || '',\n    phone: data.phone || '',\n    headUrl: data.headUrl || '',\n    // 确保deptId为长整型(Long)\n    deptId: data.deptId ? Number(data.deptId) : null,\n    // 确保postId为长整型(Long)\n    postId: data.postId ? Number(data.postId) : null,\n    description: data.description || '',\n    // 确保status为整型(Integer)\n    status: data.status !== undefined ? Number(data.status) : 1\n  };\n\n  // 移除null值字段\n  Object.keys(userData).forEach(key => {\n    if (userData[key] === null || userData[key] === undefined) {\n      delete userData[key];\n    }\n  });\n  console.log('发送严格格式化的用户数据:', userData);\n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: userData,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  });\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  console.log('登录日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  console.log('操作日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n}","map":{"version":3,"names":["request","qs","login","data","url","method","stringify","headers","getUserInfo","getAllUsers","params","getUserById","id","createUser","updateUser","userData","String","username","password","name","phone","headUrl","deptId","Number","postId","description","status","undefined","Object","keys","forEach","key","console","log","timeout","deleteUser","getUserLoginLog","requestParams","pageNum","pageSize","getUserOperLog","operName"],"sources":["D:/javacode/daijiaUIChange/frontui/src/api/user.js"],"sourcesContent":["import request from '@/utils/request'\nimport qs from 'qs'\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    data: qs.stringify(data),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  })\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  })\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  })\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  })\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  })\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 确保数据结构完全符合后端SysUser对象的期望\n  const userData = {\n    // 确保id为字符串类型(String)\n    id: data.id ? String(data.id) : '',\n    username: data.username || '',\n    password: data.password || '',\n    name: data.name || '',\n    phone: data.phone || '',\n    headUrl: data.headUrl || '',\n    // 确保deptId为长整型(Long)\n    deptId: data.deptId ? Number(data.deptId) : null,\n    // 确保postId为长整型(Long)\n    postId: data.postId ? Number(data.postId) : null,\n    description: data.description || '',\n    // 确保status为整型(Integer)\n    status: data.status !== undefined ? Number(data.status) : 1\n  };\n  \n  // 移除null值字段\n  Object.keys(userData).forEach(key => {\n    if (userData[key] === null || userData[key] === undefined) {\n      delete userData[key];\n    }\n  });\n  \n  console.log('发送严格格式化的用户数据:', userData);\n  \n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: userData,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  })\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  \n  console.log('登录日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  \n  console.log('操作日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n} "],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;AACrC,OAAOC,EAAE,MAAM,IAAI;AACnB;AACA,OAAO,SAASC,KAAKA,CAACC,IAAI,EAAE;EAC1B,OAAOH,OAAO,CAAC;IACbI,GAAG,EAAE,sBAAsB;IAC3BC,MAAM,EAAE,MAAM;IACdF,IAAI,EAAEF,EAAE,CAACK,SAAS,CAACH,IAAI,CAAC;IACxBI,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,OAAOR,OAAO,CAAC;IACbI,GAAG,EAAE,4BAA4B;IACjCC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASI,WAAWA,CAACC,MAAM,EAAE;EAClC,OAAOV,OAAO,CAAC;IACbI,GAAG,EAAE,wBAAwB;IAC7BC,MAAM,EAAE,KAAK;IACbK;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASC,WAAWA,CAACC,EAAE,EAAE;EAC9B,OAAOZ,OAAO,CAAC;IACbI,GAAG,EAAE,YAAYQ,EAAE,EAAE;IACrBP,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASQ,UAAUA,CAACV,IAAI,EAAE;EAC/B,OAAOH,OAAO,CAAC;IACbI,GAAG,EAAE,UAAU;IACfC,MAAM,EAAE,MAAM;IACdF;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASW,UAAUA,CAACX,IAAI,EAAE;EAC/B;EACA,MAAMY,QAAQ,GAAG;IACf;IACAH,EAAE,EAAET,IAAI,CAACS,EAAE,GAAGI,MAAM,CAACb,IAAI,CAACS,EAAE,CAAC,GAAG,EAAE;IAClCK,QAAQ,EAAEd,IAAI,CAACc,QAAQ,IAAI,EAAE;IAC7BC,QAAQ,EAAEf,IAAI,CAACe,QAAQ,IAAI,EAAE;IAC7BC,IAAI,EAAEhB,IAAI,CAACgB,IAAI,IAAI,EAAE;IACrBC,KAAK,EAAEjB,IAAI,CAACiB,KAAK,IAAI,EAAE;IACvBC,OAAO,EAAElB,IAAI,CAACkB,OAAO,IAAI,EAAE;IAC3B;IACAC,MAAM,EAAEnB,IAAI,CAACmB,MAAM,GAAGC,MAAM,CAACpB,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI;IAChD;IACAE,MAAM,EAAErB,IAAI,CAACqB,MAAM,GAAGD,MAAM,CAACpB,IAAI,CAACqB,MAAM,CAAC,GAAG,IAAI;IAChDC,WAAW,EAAEtB,IAAI,CAACsB,WAAW,IAAI,EAAE;IACnC;IACAC,MAAM,EAAEvB,IAAI,CAACuB,MAAM,KAAKC,SAAS,GAAGJ,MAAM,CAACpB,IAAI,CAACuB,MAAM,CAAC,GAAG;EAC5D,CAAC;;EAED;EACAE,MAAM,CAACC,IAAI,CAACd,QAAQ,CAAC,CAACe,OAAO,CAACC,GAAG,IAAI;IACnC,IAAIhB,QAAQ,CAACgB,GAAG,CAAC,KAAK,IAAI,IAAIhB,QAAQ,CAACgB,GAAG,CAAC,KAAKJ,SAAS,EAAE;MACzD,OAAOZ,QAAQ,CAACgB,GAAG,CAAC;IACtB;EACF,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAElB,QAAQ,CAAC;EAEtC,OAAOf,OAAO,CAAC;IACbI,GAAG,EAAE,UAAU;IACfC,MAAM,EAAE,KAAK;IACbF,IAAI,EAAEY,QAAQ;IACdR,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACD2B,OAAO,EAAE;EACX,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASC,UAAUA,CAACvB,EAAE,EAAE;EAC7B,OAAOZ,OAAO,CAAC;IACbI,GAAG,EAAE,YAAYQ,EAAE,EAAE;IACrBP,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAAS+B,eAAeA,CAAC1B,MAAM,EAAE;EACtC;EACA,MAAM2B,aAAa,GAAG;IACpBC,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,IAAI7B,MAAM,CAACO,QAAQ,EAAE;IACnBoB,aAAa,CAACpB,QAAQ,GAAGP,MAAM,CAACO,QAAQ;EAC1C;EAEAe,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,aAAa,CAAC;EAEvC,OAAOrC,OAAO,CAAC;IACbI,GAAG,EAAE,0BAA0B;IAC/BC,MAAM,EAAE,MAAM;IACdK,MAAM,EAAE2B;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASG,cAAcA,CAAC9B,MAAM,EAAE;EACrC;EACA,MAAM2B,aAAa,GAAG;IACpBC,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,IAAI7B,MAAM,CAAC+B,QAAQ,EAAE;IACnBJ,aAAa,CAACI,QAAQ,GAAG/B,MAAM,CAAC+B,QAAQ;EAC1C;EAEAT,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,aAAa,CAAC;EAEvC,OAAOrC,OAAO,CAAC;IACbI,GAAG,EAAE,yBAAyB;IAC9BC,MAAM,EAAE,MAAM;IACdK,MAAM,EAAE2B;EACV,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}