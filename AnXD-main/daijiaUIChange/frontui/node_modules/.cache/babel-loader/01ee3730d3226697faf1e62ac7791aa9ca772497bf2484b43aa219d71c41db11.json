{"ast":null,"code":"import request from '@/utils/request';\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  });\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  });\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  });\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  });\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  });\n}\n\n// 更新用户 - 极简版只发送ID、姓名和电话\nexport function updateUserSimplified(data) {\n  // 只包含最必要的字段\n  const minimalData = {\n    id: data.id,\n    name: data.name,\n    phone: data.phone\n  };\n  console.log('发送极简用户数据:', minimalData);\n\n  // 使用PUT方法，只发送最少字段\n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: minimalData,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 20000\n  });\n}\n\n// 更新用户 - 使用表单格式而非JSON (模仿CustomerInfoController)\nexport function updateUserForm(data) {\n  // 创建表单数据对象，便于日志输出\n  const formData = {\n    id: data.id,\n    username: data.username,\n    name: data.name,\n    phone: data.phone,\n    status: data.status === undefined ? 1 : Number(data.status)\n  };\n\n  // 只有在有值时才添加可选字段\n  if (data.deptId !== undefined && data.deptId !== null) {\n    formData.deptId = Number(data.deptId);\n  }\n  if (data.postId !== undefined && data.postId !== null) {\n    formData.postId = Number(data.postId);\n  }\n  if (data.description !== undefined) {\n    formData.description = data.description;\n  }\n  console.log('发送表单格式用户数据:', formData);\n\n  // 使用POST方法，用params发送表单数据\n  return request({\n    url: '/sysUser/update',\n    method: 'post',\n    params: formData,\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  });\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  console.log('登录日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  console.log('操作日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n}","map":{"version":3,"names":["request","login","data","url","method","params","getUserInfo","getAllUsers","getUserById","id","createUser","updateUserSimplified","minimalData","name","phone","console","log","headers","timeout","updateUserForm","formData","username","status","undefined","Number","deptId","postId","description","deleteUser","getUserLoginLog","requestParams","pageNum","pageSize","getUserOperLog","operName"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/api/user.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  })\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  })\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  })\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  })\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  })\n}\n\n// 更新用户 - 极简版只发送ID、姓名和电话\nexport function updateUserSimplified(data) {\n  // 只包含最必要的字段\n  const minimalData = {\n    id: data.id,\n    name: data.name,\n    phone: data.phone\n  };\n  \n  console.log('发送极简用户数据:', minimalData);\n  \n  // 使用PUT方法，只发送最少字段\n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: minimalData,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 20000\n  });\n}\n\n// 更新用户 - 使用表单格式而非JSON (模仿CustomerInfoController)\nexport function updateUserForm(data) {\n  // 创建表单数据对象，便于日志输出\n  const formData = {\n    id: data.id,\n    username: data.username,\n    name: data.name,\n    phone: data.phone,\n    status: data.status === undefined ? 1 : Number(data.status)\n  };\n  \n  // 只有在有值时才添加可选字段\n  if (data.deptId !== undefined && data.deptId !== null) {\n    formData.deptId = Number(data.deptId);\n  }\n  \n  if (data.postId !== undefined && data.postId !== null) {\n    formData.postId = Number(data.postId);\n  }\n  \n  if (data.description !== undefined) {\n    formData.description = data.description;\n  }\n  \n  console.log('发送表单格式用户数据:', formData);\n  \n  // 使用POST方法，用params发送表单数据\n  return request({\n    url: '/sysUser/update',\n    method: 'post',\n    params: formData,\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  })\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  \n  console.log('登录日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  \n  console.log('操作日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}