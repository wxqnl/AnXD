{"ast":null,"code":"import request from '@/utils/request';\n\n// 获取部门树 - 使用getById模拟\nexport function getDeptTree(params) {\n  // 由于/sysDept/list一直500错误，我们使用getById替代\n  // 首先获取根部门\n  return request({\n    url: '/sysDept/getById',\n    method: 'get',\n    params: {\n      id: 1\n    }\n  }).then(async response => {\n    console.log('获取根部门成功:', response);\n\n    // 如果获取到根部门\n    if (response.data) {\n      // 创建部门数组\n      const deptArray = [response.data];\n\n      // 尝试获取一些常见ID的部门（2-10）\n      try {\n        for (let i = 2; i <= 10; i++) {\n          try {\n            const childResponse = await request({\n              url: '/sysDept/getById',\n              method: 'get',\n              params: {\n                id: i\n              }\n            });\n            if (childResponse.data) {\n              deptArray.push(childResponse.data);\n              console.log(`获取到部门ID=${i}:`, childResponse.data);\n            }\n          } catch (e) {\n            console.log(`部门ID=${i}不存在或请求失败`);\n          }\n        }\n      } catch (e) {\n        console.warn('获取更多部门失败', e);\n      }\n\n      // 模拟分页接口返回格式\n      return {\n        data: {\n          items: deptArray,\n          total: deptArray.length\n        }\n      };\n    }\n    return {\n      data: {\n        items: [],\n        total: 0\n      }\n    };\n  }).catch(error => {\n    console.error('获取部门失败:', error);\n    return {\n      data: {\n        items: [],\n        total: 0\n      }\n    };\n  });\n}\n\n// 获取部门详情\nexport function getDeptById(id) {\n  return request({\n    url: '/sysDept/getById',\n    method: 'get',\n    params: {\n      id\n    }\n  });\n}\n\n// 添加部门\nexport function addDept(data) {\n  return request({\n    url: '/sysDept/add',\n    method: 'post',\n    data\n  });\n}\n\n// 更新部门\nexport function updateDept(data) {\n  return request({\n    url: '/sysDept/update',\n    method: 'post',\n    data\n  });\n}\n\n// 删除部门\nexport function deleteDept(id) {\n  return request({\n    url: '/sysDept/delete',\n    method: 'post',\n    params: {\n      id\n    }\n  });\n}","map":{"version":3,"names":["request","getDeptTree","params","url","method","id","then","response","console","log","data","deptArray","i","childResponse","push","e","warn","items","total","length","catch","error","getDeptById","addDept","updateDept","deleteDept"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/api/dept.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 获取部门树 - 使用getById模拟\nexport function getDeptTree(params) {\n  // 由于/sysDept/list一直500错误，我们使用getById替代\n  // 首先获取根部门\n  return request({\n    url: '/sysDept/getById',\n    method: 'get',\n    params: { id: 1 }\n  }).then(async response => {\n    console.log('获取根部门成功:', response);\n    \n    // 如果获取到根部门\n    if (response.data) {\n      // 创建部门数组\n      const deptArray = [response.data];\n      \n      // 尝试获取一些常见ID的部门（2-10）\n      try {\n        for (let i = 2; i <= 10; i++) {\n          try {\n            const childResponse = await request({\n              url: '/sysDept/getById',\n              method: 'get',\n              params: { id: i }\n            });\n            \n            if (childResponse.data) {\n              deptArray.push(childResponse.data);\n              console.log(`获取到部门ID=${i}:`, childResponse.data);\n            }\n          } catch (e) {\n            console.log(`部门ID=${i}不存在或请求失败`);\n          }\n        }\n      } catch (e) {\n        console.warn('获取更多部门失败', e);\n      }\n      \n      // 模拟分页接口返回格式\n      return {\n        data: {\n          items: deptArray,\n          total: deptArray.length\n        }\n      };\n    }\n    \n    return {\n      data: {\n        items: [],\n        total: 0\n      }\n    };\n  }).catch(error => {\n    console.error('获取部门失败:', error);\n    return {\n      data: {\n        items: [],\n        total: 0\n      }\n    };\n  });\n}\n\n// 获取部门详情\nexport function getDeptById(id) {\n  return request({\n    url: '/sysDept/getById',\n    method: 'get',\n    params: { id }\n  })\n}\n\n// 添加部门\nexport function addDept(data) {\n  return request({\n    url: '/sysDept/add',\n    method: 'post',\n    data\n  })\n}\n\n// 更新部门\nexport function updateDept(data) {\n  return request({\n    url: '/sysDept/update',\n    method: 'post',\n    data\n  })\n}\n\n// 删除部门\nexport function deleteDept(id) {\n  return request({\n    url: '/sysDept/delete',\n    method: 'post',\n    params: { id }\n  })\n} "],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;;AAErC;AACA,OAAO,SAASC,WAAWA,CAACC,MAAM,EAAE;EAClC;EACA;EACA,OAAOF,OAAO,CAAC;IACbG,GAAG,EAAE,kBAAkB;IACvBC,MAAM,EAAE,KAAK;IACbF,MAAM,EAAE;MAAEG,EAAE,EAAE;IAAE;EAClB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAMC,QAAQ,IAAI;IACxBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC;;IAEjC;IACA,IAAIA,QAAQ,CAACG,IAAI,EAAE;MACjB;MACA,MAAMC,SAAS,GAAG,CAACJ,QAAQ,CAACG,IAAI,CAAC;;MAEjC;MACA,IAAI;QACF,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC5B,IAAI;YACF,MAAMC,aAAa,GAAG,MAAMb,OAAO,CAAC;cAClCG,GAAG,EAAE,kBAAkB;cACvBC,MAAM,EAAE,KAAK;cACbF,MAAM,EAAE;gBAAEG,EAAE,EAAEO;cAAE;YAClB,CAAC,CAAC;YAEF,IAAIC,aAAa,CAACH,IAAI,EAAE;cACtBC,SAAS,CAACG,IAAI,CAACD,aAAa,CAACH,IAAI,CAAC;cAClCF,OAAO,CAACC,GAAG,CAAC,WAAWG,CAAC,GAAG,EAAEC,aAAa,CAACH,IAAI,CAAC;YAClD;UACF,CAAC,CAAC,OAAOK,CAAC,EAAE;YACVP,OAAO,CAACC,GAAG,CAAC,QAAQG,CAAC,UAAU,CAAC;UAClC;QACF;MACF,CAAC,CAAC,OAAOG,CAAC,EAAE;QACVP,OAAO,CAACQ,IAAI,CAAC,UAAU,EAAED,CAAC,CAAC;MAC7B;;MAEA;MACA,OAAO;QACLL,IAAI,EAAE;UACJO,KAAK,EAAEN,SAAS;UAChBO,KAAK,EAAEP,SAAS,CAACQ;QACnB;MACF,CAAC;IACH;IAEA,OAAO;MACLT,IAAI,EAAE;QACJO,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC,CAAC,CAACE,KAAK,CAACC,KAAK,IAAI;IAChBb,OAAO,CAACa,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/B,OAAO;MACLX,IAAI,EAAE;QACJO,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASI,WAAWA,CAACjB,EAAE,EAAE;EAC9B,OAAOL,OAAO,CAAC;IACbG,GAAG,EAAE,kBAAkB;IACvBC,MAAM,EAAE,KAAK;IACbF,MAAM,EAAE;MAAEG;IAAG;EACf,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASkB,OAAOA,CAACb,IAAI,EAAE;EAC5B,OAAOV,OAAO,CAAC;IACbG,GAAG,EAAE,cAAc;IACnBC,MAAM,EAAE,MAAM;IACdM;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASc,UAAUA,CAACd,IAAI,EAAE;EAC/B,OAAOV,OAAO,CAAC;IACbG,GAAG,EAAE,iBAAiB;IACtBC,MAAM,EAAE,MAAM;IACdM;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASe,UAAUA,CAACpB,EAAE,EAAE;EAC7B,OAAOL,OAAO,CAAC;IACbG,GAAG,EAAE,iBAAiB;IACtBC,MAAM,EAAE,MAAM;IACdF,MAAM,EAAE;MAAEG;IAAG;EACf,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}