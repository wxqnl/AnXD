{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_tree_select = _resolveComponent(\"el-tree-select\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 搜索区域 \"), _createVNode(_component_el_card, {\n    class: \"search-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.queryParams,\n      ref: \"queryForm\",\n      inline: true,\n      class: \"search-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"部门名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.queryParams.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.queryParams.name = $event),\n          placeholder: \"请输入部门名称\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"负责人\",\n        prop: \"leader\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.queryParams.leader,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.queryParams.leader = $event),\n          placeholder: \"请输入负责人\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.queryParams.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.queryParams.status = $event),\n          placeholder: \"请选择状态\",\n          clearable: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"正常\",\n            value: 1\n          }), _createVNode(_component_el_option, {\n            label: \"停用\",\n            value: 0\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleQuery\n        }, {\n          default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_button, {\n          onClick: $setup.resetQuery\n        }, {\n          default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"重置\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_card, null, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[16] || (_cache[16] = _createElementVNode(\"span\", null, \"部门管理\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleAdd\n    }, {\n      default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"新增部门\")])),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $setup.deptList,\n      \"row-key\": \"id\",\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"部门名称\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"leader\",\n        label: \"负责人\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"phone\",\n        label: \"联系电话\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"treePath\",\n        label: \"树结构路径\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"sortValue\",\n        label: \"排序\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"status\",\n        label: \"状态\",\n        width: \"80\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_tag, {\n          type: scope.row.status === 1 ? 'success' : 'danger'\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.status === 1 ? '正常' : '停用'), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"200\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          link: \"\",\n          onClick: $event => $setup.handleEdit(scope.row)\n        }, {\n          default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\"编辑\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"danger\",\n          link: \"\",\n          onClick: $event => $setup.handleDelete(scope.row)\n        }, {\n          default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"删除\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]), $setup.total > 0 ? (_openBlock(), _createBlock(_component_el_pagination, {\n      key: 0,\n      \"current-page\": $setup.queryParams.pageNum,\n      \"onUpdate:currentPage\": _cache[3] || (_cache[3] = $event => $setup.queryParams.pageNum = $event),\n      \"page-size\": $setup.queryParams.pageSize,\n      \"onUpdate:pageSize\": _cache[4] || (_cache[4] = $event => $setup.queryParams.pageSize = $event),\n      \"page-sizes\": [10, 20, 50, 100],\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $setup.total,\n      onSizeChange: $setup.handleSizeChange,\n      onCurrentChange: $setup.handleCurrentChange,\n      class: \"pagination\"\n    }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 添加/编辑部门对话框 \"), _createVNode(_component_el_dialog, {\n    title: $setup.dialogTitle,\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.dialogVisible = $event),\n    width: \"500px\",\n    \"append-to-body\": \"\",\n    \"close-on-click-modal\": false\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n      onClick: $setup.cancelForm\n    }, {\n      default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"取 消\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.submitForm\n    }, {\n      default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"确 定\")])),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"deptFormRef\",\n      model: $setup.deptForm,\n      rules: $setup.rules,\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"上级部门\",\n        prop: \"parentId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tree_select, {\n          modelValue: $setup.deptForm.parentId,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.deptForm.parentId = $event),\n          data: $setup.deptTreeOptions,\n          \"render-after-expand\": false,\n          \"node-key\": \"id\",\n          props: {\n            label: 'name',\n            value: 'id',\n            children: 'children'\n          },\n          placeholder: \"请选择上级部门\",\n          \"check-strictly\": \"\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"data\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"部门名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.deptForm.name,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.deptForm.name = $event),\n          placeholder: \"请输入部门名称\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"负责人\",\n        prop: \"leader\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.deptForm.leader,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.deptForm.leader = $event),\n          placeholder: \"请输入负责人\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"联系电话\",\n        prop: \"phone\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.deptForm.phone,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.deptForm.phone = $event),\n          placeholder: \"请输入联系电话\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"树结构\",\n        prop: \"treePath\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.deptForm.treePath,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.deptForm.treePath = $event),\n          placeholder: \"树结构路径，自动生成\",\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"排序\",\n        prop: \"sortValue\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $setup.deptForm.sortValue,\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.deptForm.sortValue = $event),\n          min: 0,\n          max: 999,\n          \"controls-position\": \"right\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.deptForm.status,\n          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.deptForm.status = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: 1\n          }, {\n            default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"正常\")])),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_radio, {\n            label: 0\n          }, {\n            default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"停用\")])),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","default","_withCtx","_component_el_form","model","$setup","queryParams","ref","inline","_component_el_form_item","label","prop","_component_el_input","modelValue","name","_cache","$event","placeholder","clearable","_","leader","_component_el_select","status","_component_el_option","value","_component_el_button","type","onClick","handleQuery","_createTextVNode","resetQuery","header","_createElementVNode","_hoisted_2","handleAdd","_createBlock","_component_el_table","data","deptList","border","_component_el_table_column","width","scope","_component_el_tag","row","_toDisplayString","link","handleEdit","handleDelete","loading","total","_component_el_pagination","key","pageNum","pageSize","layout","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_component_el_dialog","title","dialogTitle","dialogVisible","footer","_hoisted_3","cancelForm","submitForm","deptForm","rules","_component_el_tree_select","parentId","deptTreeOptions","props","children","phone","treePath","disabled","_component_el_input_number","sortValue","min","max","_component_el_radio_group","_component_el_radio"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/pages/system/SysDept.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 搜索区域 -->\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"queryParams.name\" placeholder=\"请输入部门名称\" clearable />\n        </el-form-item>\n        <el-form-item label=\"负责人\" prop=\"leader\">\n          <el-input v-model=\"queryParams.leader\" placeholder=\"请输入负责人\" clearable />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n            <el-option label=\"正常\" :value=\"1\" />\n            <el-option label=\"停用\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>部门管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">新增部门</el-button>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"deptList\" row-key=\"id\" border>\n        <el-table-column prop=\"name\" label=\"部门名称\" />\n        <el-table-column prop=\"leader\" label=\"负责人\" />\n        <el-table-column prop=\"phone\" label=\"联系电话\" />\n        <el-table-column prop=\"treePath\" label=\"树结构路径\" />\n        <el-table-column prop=\"sortValue\" label=\"排序\" width=\"80\" />\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '正常' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"danger\" link @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pagination\"\n      />\n    </el-card>\n\n    <!-- 添加/编辑部门对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      v-model=\"dialogVisible\" \n      width=\"500px\" \n      append-to-body\n      :close-on-click-modal=\"false\"\n    >\n      <el-form \n        ref=\"deptFormRef\" \n        :model=\"deptForm\" \n        :rules=\"rules\" \n        label-width=\"80px\"\n      >\n        <el-form-item label=\"上级部门\" prop=\"parentId\">\n          <el-tree-select\n            v-model=\"deptForm.parentId\"\n            :data=\"deptTreeOptions\"\n            :render-after-expand=\"false\"\n            node-key=\"id\"\n            :props=\"{ label: 'name', value: 'id', children: 'children' }\"\n            placeholder=\"请选择上级部门\"\n            check-strictly\n            clearable\n          />\n        </el-form-item>\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"deptForm.name\" placeholder=\"请输入部门名称\" />\n        </el-form-item>\n        <el-form-item label=\"负责人\" prop=\"leader\">\n          <el-input v-model=\"deptForm.leader\" placeholder=\"请输入负责人\" />\n        </el-form-item>\n        <el-form-item label=\"联系电话\" prop=\"phone\">\n          <el-input v-model=\"deptForm.phone\" placeholder=\"请输入联系电话\" />\n        </el-form-item>\n        <el-form-item label=\"树结构\" prop=\"treePath\">\n          <el-input v-model=\"deptForm.treePath\" placeholder=\"树结构路径，自动生成\" disabled />\n        </el-form-item>\n        <el-form-item label=\"排序\" prop=\"sortValue\">\n          <el-input-number v-model=\"deptForm.sortValue\" :min=\"0\" :max=\"999\" controls-position=\"right\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"deptForm.status\">\n            <el-radio :label=\"1\">正常</el-radio>\n            <el-radio :label=\"0\">停用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"cancelForm\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getDeptTree, addDept, updateDept, deleteDept, getDeptById } from '@/api/dept'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  name: undefined,\n  parentId: 0,\n  children: null,\n  leader: undefined,\n  status: undefined\n})\n\n// 表格数据和状态\nconst deptList = ref([])\nconst deptTreeOptions = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 对话框相关\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\nconst deptFormRef = ref(null)\nconst deptForm = reactive({\n  id: undefined,\n  parentId: 0,\n  name: '',\n  leader: '',\n  phone: '',\n  treePath: '',\n  sortValue: 0,\n  status: 1\n})\n\n// 表单验证规则\nconst rules = {\n  name: [\n    { required: true, message: '请输入部门名称', trigger: 'blur' },\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n  ],\n  parentId: [\n    { required: true, message: '请选择上级部门', trigger: 'change' }\n  ],\n  sortValue: [\n    { required: true, message: '请输入排序', trigger: 'blur' }\n  ],\n  status: [\n    { required: true, message: '请选择状态', trigger: 'change' }\n  ]\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.name = undefined\n  queryParams.parentId = 0\n  queryParams.children = null\n  queryParams.leader = undefined\n  queryParams.status = undefined\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 获取部门树\nconst getList = async () => {\n  try {\n    loading.value = true\n    console.log('发送查询参数:', queryParams)\n    const res = await getDeptTree(queryParams)\n    console.log('部门树响应:', res)\n    \n    // 处理分页数据\n    if (res.data && res.data.items) {\n      deptList.value = res.data.items || []\n      total.value = res.data.total || 0\n    } else {\n      deptList.value = res.data || []\n      total.value = deptList.value.length\n    }\n    \n    // 复制一份作为下拉框数据源，并在最前面添加顶级部门选项\n    deptTreeOptions.value = [{ id: 0, name: '顶级部门', parentId: -1 }]\n    if (deptList.value && deptList.value.length > 0) {\n      deptTreeOptions.value = deptTreeOptions.value.concat(JSON.parse(JSON.stringify(deptList.value)))\n    }\n  } catch (error) {\n    console.error('获取部门列表失败', error)\n    ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n  } finally {\n    loading.value = false\n  }\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 重置表单\nconst resetForm = () => {\n  deptForm.id = undefined\n  deptForm.parentId = 0\n  deptForm.name = ''\n  deptForm.leader = ''\n  deptForm.phone = ''\n  deptForm.treePath = ''\n  deptForm.sortValue = 0\n  deptForm.status = 1\n  nextTick(() => {\n    deptFormRef.value?.resetFields()\n  })\n}\n\n// 新增部门\nconst handleAdd = () => {\n  resetForm()\n  dialogTitle.value = '新增部门'\n  dialogVisible.value = true\n}\n\n// 编辑部门\nconst handleEdit = async (row) => {\n  resetForm()\n  dialogTitle.value = '编辑部门'\n  dialogVisible.value = true\n  \n  // 获取最新的部门信息\n  try {\n    const res = await getDeptById(row.id)\n    if (res.data) {\n      // 填充表单数据\n      Object.assign(deptForm, res.data)\n    }\n  } catch (error) {\n    ElMessage.error('获取部门信息失败')\n  }\n}\n\n// 删除部门\nconst handleDelete = (row) => {\n  ElMessageBox.confirm(`确定要删除部门 ${row.name} 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await deleteDept(row.id)\n      ElMessage.success('删除成功')\n      getList()\n    } catch (error) {\n      ElMessage.error('删除失败')\n    }\n  }).catch(() => {})\n}\n\n// 取消表单\nconst cancelForm = () => {\n  dialogVisible.value = false\n  resetForm()\n}\n\n// 提交表单\nconst submitForm = async () => {\n  deptFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        if (deptForm.id) {\n          // 编辑部门\n          await updateDept(deptForm)\n          ElMessage.success('修改部门成功')\n        } else {\n          // 新增部门\n          await addDept(deptForm)\n          ElMessage.success('新增部门成功')\n        }\n        dialogVisible.value = false\n        getList()\n      } catch (error) {\n        console.error('操作失败', error)\n        ElMessage.error('操作失败，请稍后重试')\n      }\n    }\n  })\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.pagination {\n  margin-top: 15px;\n  text-align: right;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}