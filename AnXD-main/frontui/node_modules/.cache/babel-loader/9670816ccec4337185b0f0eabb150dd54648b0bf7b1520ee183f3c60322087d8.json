{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getOrderList, getOrderByOrderNo, updateOrder } from '@/api/order';\n\n// 查询参数\n\nexport default {\n  __name: 'OrderInfo',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      orderNo: '',\n      customerName: '',\n      driverName: '',\n      status: undefined\n    });\n\n    // 表格数据和状态\n    const orderList = ref([]);\n    const loading = ref(false);\n    const total = ref(0);\n\n    // 获取订单列表\n    const getList = async () => {\n      try {\n        loading.value = true;\n        const res = await getOrderList(queryParams);\n        console.log('订单列表响应:', res);\n        orderList.value = res.data.items || [];\n        total.value = res.data.total || 0;\n      } catch (error) {\n        console.error('获取订单列表失败', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 查询按钮\n    const handleQuery = () => {\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      queryParams.orderNo = '';\n      queryParams.customerName = '';\n      queryParams.driverName = '';\n      queryParams.status = undefined;\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 获取订单状态文本\n    const getStatusText = status => {\n      const statusMap = {\n        1: '待接单',\n        2: '已接单',\n        3: '进行中',\n        4: '已完成',\n        5: '已取消'\n      };\n      return statusMap[status] || '未知';\n    };\n\n    // 获取订单状态对应的标签类型\n    const getStatusType = status => {\n      const typeMap = {\n        1: 'info',\n        2: 'warning',\n        3: 'primary',\n        4: 'success',\n        5: 'danger'\n      };\n      return typeMap[status] || '';\n    };\n\n    // 查看订单详情\n    const handleDetail = row => {\n      ElMessage.info(`查看订单详情: ${row.orderNo}`);\n    };\n\n    // 修改订单状态\n    const handleStatus = row => {\n      ElMessage.info(`修改订单状态: ${row.orderNo}`);\n    };\n\n    // 分页操作\n    const handleSizeChange = size => {\n      queryParams.pageSize = size;\n      getList();\n    };\n    const handleCurrentChange = page => {\n      queryParams.pageNum = page;\n      getList();\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getList();\n    });\n    const __returned__ = {\n      queryParams,\n      orderList,\n      loading,\n      total,\n      getList,\n      handleQuery,\n      resetQuery,\n      getStatusText,\n      getStatusType,\n      handleDetail,\n      handleStatus,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get getOrderList() {\n        return getOrderList;\n      },\n      get getOrderByOrderNo() {\n        return getOrderByOrderNo;\n      },\n      get updateOrder() {\n        return updateOrder;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","getOrderList","getOrderByOrderNo","updateOrder","queryParams","pageNum","pageSize","orderNo","customerName","driverName","status","undefined","orderList","loading","total","getList","value","res","console","log","data","items","error","handleQuery","resetQuery","getStatusText","statusMap","getStatusType","typeMap","handleDetail","row","info","handleStatus","handleSizeChange","size","handleCurrentChange","page"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/pages/order/OrderInfo.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"订单号\" prop=\"orderNo\">\n          <el-input v-model=\"queryParams.orderNo\" placeholder=\"请输入订单号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"客户姓名\" prop=\"customerName\">\n          <el-input v-model=\"queryParams.customerName\" placeholder=\"请输入客户姓名\" clearable />\n        </el-form-item>\n        <el-form-item label=\"司机姓名\" prop=\"driverName\">\n          <el-input v-model=\"queryParams.driverName\" placeholder=\"请输入司机姓名\" clearable />\n        </el-form-item>\n        <el-form-item label=\"订单状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择订单状态\" clearable>\n            <el-option label=\"待接单\" :value=\"1\" />\n            <el-option label=\"已接单\" :value=\"2\" />\n            <el-option label=\"进行中\" :value=\"3\" />\n            <el-option label=\"已完成\" :value=\"4\" />\n            <el-option label=\"已取消\" :value=\"5\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>订单列表</span>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"orderList\" border>\n        <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n        <el-table-column prop=\"orderNo\" label=\"订单号\" width=\"180\" />\n        <el-table-column prop=\"customerName\" label=\"客户姓名\" />\n        <el-table-column prop=\"driverName\" label=\"司机姓名\" />\n        <el-table-column prop=\"startAddress\" label=\"起始地址\" show-overflow-tooltip />\n        <el-table-column prop=\"endAddress\" label=\"目的地址\" show-overflow-tooltip />\n        <el-table-column prop=\"orderAmount\" label=\"订单金额\">\n          <template #default=\"scope\">\n            ¥{{ scope.row.orderAmount }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"下单时间\" width=\"160\" />\n        <el-table-column prop=\"status\" label=\"订单状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"160\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleDetail(scope.row)\">详情</el-button>\n            <el-button type=\"success\" link @click=\"handleStatus(scope.row)\" v-if=\"scope.row.status < 4\">修改状态</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getOrderList, getOrderByOrderNo, updateOrder } from '@/api/order'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  orderNo: '',\n  customerName: '',\n  driverName: '',\n  status: undefined\n})\n\n// 表格数据和状态\nconst orderList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 获取订单列表\nconst getList = async () => {\n  try {\n    loading.value = true\n    const res = await getOrderList(queryParams)\n    console.log('订单列表响应:', res)\n    orderList.value = res.data.items || []\n    total.value = res.data.total || 0\n  } catch (error) {\n    console.error('获取订单列表失败', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.orderNo = ''\n  queryParams.customerName = ''\n  queryParams.driverName = ''\n  queryParams.status = undefined\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 获取订单状态文本\nconst getStatusText = (status) => {\n  const statusMap = {\n    1: '待接单',\n    2: '已接单',\n    3: '进行中',\n    4: '已完成',\n    5: '已取消'\n  }\n  return statusMap[status] || '未知'\n}\n\n// 获取订单状态对应的标签类型\nconst getStatusType = (status) => {\n  const typeMap = {\n    1: 'info',\n    2: 'warning',\n    3: 'primary',\n    4: 'success',\n    5: 'danger'\n  }\n  return typeMap[status] || ''\n}\n\n// 查看订单详情\nconst handleDetail = (row) => {\n  ElMessage.info(`查看订单详情: ${row.orderNo}`)\n}\n\n// 修改订单状态\nconst handleStatus = (row) => {\n  ElMessage.info(`修改订单状态: ${row.orderNo}`)\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.el-pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n</style> "],"mappings":"AA+EA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAI;AAC7C,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAa;AACrD,SAASC,YAAY,EAAEC,iBAAiB,EAAEC,WAAW,QAAQ,aAAY;;AAEzE;;;;;;;;IACA,MAAMC,WAAW,GAAGP,QAAQ,CAAC;MAC3BQ,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAEC;IACV,CAAC;;IAED;IACA,MAAMC,SAAS,GAAGhB,GAAG,CAAC,EAAE;IACxB,MAAMiB,OAAO,GAAGjB,GAAG,CAAC,KAAK;IACzB,MAAMkB,KAAK,GAAGlB,GAAG,CAAC,CAAC;;IAEnB;IACA,MAAMmB,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACFF,OAAO,CAACG,KAAK,GAAG,IAAG;QACnB,MAAMC,GAAG,GAAG,MAAMhB,YAAY,CAACG,WAAW;QAC1Cc,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG;QAC1BL,SAAS,CAACI,KAAK,GAAGC,GAAG,CAACG,IAAI,CAACC,KAAK,IAAI,EAAC;QACrCP,KAAK,CAACE,KAAK,GAAGC,GAAG,CAACG,IAAI,CAACN,KAAK,IAAI;MAClC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,UAAU,EAAEA,KAAK;MACjC,CAAC,SAAS;QACRT,OAAO,CAACG,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;MACxBnB,WAAW,CAACC,OAAO,GAAG;MACtBU,OAAO,CAAC;IACV;;IAEA;IACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;MACvBpB,WAAW,CAACG,OAAO,GAAG,EAAC;MACvBH,WAAW,CAACI,YAAY,GAAG,EAAC;MAC5BJ,WAAW,CAACK,UAAU,GAAG,EAAC;MAC1BL,WAAW,CAACM,MAAM,GAAGC,SAAQ;MAC7BP,WAAW,CAACC,OAAO,GAAG;MACtBU,OAAO,CAAC;IACV;;IAEA;IACA,MAAMU,aAAa,GAAIf,MAAM,IAAK;MAChC,MAAMgB,SAAS,GAAG;QAChB,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE;MACL;MACA,OAAOA,SAAS,CAAChB,MAAM,CAAC,IAAI,IAAG;IACjC;;IAEA;IACA,MAAMiB,aAAa,GAAIjB,MAAM,IAAK;MAChC,MAAMkB,OAAO,GAAG;QACd,CAAC,EAAE,MAAM;QACT,CAAC,EAAE,SAAS;QACZ,CAAC,EAAE,SAAS;QACZ,CAAC,EAAE,SAAS;QACZ,CAAC,EAAE;MACL;MACA,OAAOA,OAAO,CAAClB,MAAM,CAAC,IAAI,EAAC;IAC7B;;IAEA;IACA,MAAMmB,YAAY,GAAIC,GAAG,IAAK;MAC5B/B,SAAS,CAACgC,IAAI,CAAC,WAAWD,GAAG,CAACvB,OAAO,EAAE;IACzC;;IAEA;IACA,MAAMyB,YAAY,GAAIF,GAAG,IAAK;MAC5B/B,SAAS,CAACgC,IAAI,CAAC,WAAWD,GAAG,CAACvB,OAAO,EAAE;IACzC;;IAEA;IACA,MAAM0B,gBAAgB,GAAIC,IAAI,IAAK;MACjC9B,WAAW,CAACE,QAAQ,GAAG4B,IAAG;MAC1BnB,OAAO,CAAC;IACV;IAEA,MAAMoB,mBAAmB,GAAIC,IAAI,IAAK;MACpChC,WAAW,CAACC,OAAO,GAAG+B,IAAG;MACzBrB,OAAO,CAAC;IACV;;IAEA;IACAjB,SAAS,CAAC,MAAM;MACdiB,OAAO,CAAC;IACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}