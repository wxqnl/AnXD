{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getOrderCommentList, getCommentByOrderId, updateComment } from '@/api/order';\n\n// 查询参数\n\nexport default {\n  __name: 'OrderComment',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      customerId: undefined,\n      driverId: undefined,\n      rate: undefined,\n      status: undefined\n    });\n\n    // 表格数据和状态\n    const commentList = ref([]);\n    const loading = ref(false);\n    const total = ref(0);\n\n    // 回复对话框\n    const replyDialogVisible = ref(false);\n    const replyFormRef = ref(null);\n    const replyForm = reactive({\n      id: undefined,\n      orderId: undefined,\n      content: '',\n      replyContent: ''\n    });\n\n    // 表单验证规则\n    const replyRules = {\n      replyContent: [{\n        required: true,\n        message: '请输入回复内容',\n        trigger: 'blur'\n      }, {\n        min: 1,\n        max: 200,\n        message: '长度在 1 到 200 个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 获取评价列表\n    const getList = async () => {\n      try {\n        loading.value = true;\n        const res = await getOrderCommentList(queryParams);\n        console.log('订单评价响应:', res);\n        commentList.value = res.data.items || [];\n        total.value = res.data.total || 0;\n      } catch (error) {\n        console.error('获取评价列表失败', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 查询按钮\n    const handleQuery = () => {\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      queryParams.customerId = undefined;\n      queryParams.driverId = undefined;\n      queryParams.rate = undefined;\n      queryParams.status = undefined;\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 查看详情\n    const handleDetail = async row => {\n      try {\n        const res = await getCommentByOrderId(row.orderId);\n        ElMessage.info(`查看评价详情: ${row.orderNo || row.orderId}`);\n        console.log('评价详情:', res.data);\n      } catch (error) {\n        ElMessage.error('获取详情失败');\n      }\n    };\n\n    // 回复评价\n    const handleReply = row => {\n      replyForm.id = row.id;\n      replyForm.orderId = row.orderId;\n      replyForm.content = row.content;\n      replyForm.replyContent = '';\n      replyDialogVisible.value = true;\n    };\n\n    // 提交回复\n    const submitReply = async () => {\n      if (!replyFormRef.value) return;\n      await replyFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            await updateComment({\n              id: replyForm.id,\n              orderId: replyForm.orderId,\n              replyContent: replyForm.replyContent\n            });\n            ElMessage.success('回复成功');\n            replyDialogVisible.value = false;\n            getList();\n          } catch (error) {\n            ElMessage.error('回复失败');\n          }\n        }\n      });\n    };\n\n    // 分页操作\n    const handleSizeChange = size => {\n      queryParams.pageSize = size;\n      getList();\n    };\n    const handleCurrentChange = page => {\n      queryParams.pageNum = page;\n      getList();\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getList();\n    });\n    const __returned__ = {\n      queryParams,\n      commentList,\n      loading,\n      total,\n      replyDialogVisible,\n      replyFormRef,\n      replyForm,\n      replyRules,\n      getList,\n      handleQuery,\n      resetQuery,\n      handleDetail,\n      handleReply,\n      submitReply,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get getOrderCommentList() {\n        return getOrderCommentList;\n      },\n      get getCommentByOrderId() {\n        return getCommentByOrderId;\n      },\n      get updateComment() {\n        return updateComment;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","getOrderCommentList","getCommentByOrderId","updateComment","queryParams","pageNum","pageSize","customerId","undefined","driverId","rate","status","commentList","loading","total","replyDialogVisible","replyFormRef","replyForm","id","orderId","content","replyContent","replyRules","required","message","trigger","min","max","getList","value","res","console","log","data","items","error","handleQuery","resetQuery","handleDetail","row","info","orderNo","handleReply","submitReply","validate","valid","success","handleSizeChange","size","handleCurrentChange","page"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/pages/order/OrderComment.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"订单号\" prop=\"orderNo\">\n          <el-input v-model=\"queryParams.orderNo\" placeholder=\"请输入订单号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"客户姓名\" prop=\"customerName\">\n          <el-input v-model=\"queryParams.customerName\" placeholder=\"请输入客户姓名\" clearable />\n        </el-form-item>\n        <el-form-item label=\"评分\" prop=\"score\">\n          <el-select v-model=\"queryParams.score\" placeholder=\"请选择评分\" clearable>\n            <el-option label=\"1星\" :value=\"1\" />\n            <el-option label=\"2星\" :value=\"2\" />\n            <el-option label=\"3星\" :value=\"3\" />\n            <el-option label=\"4星\" :value=\"4\" />\n            <el-option label=\"5星\" :value=\"5\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>评价列表</span>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"commentList\" border>\n        <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n        <el-table-column prop=\"orderNo\" label=\"订单号\" width=\"180\" />\n        <el-table-column prop=\"customerName\" label=\"客户姓名\" />\n        <el-table-column prop=\"driverName\" label=\"司机姓名\" />\n        <el-table-column prop=\"score\" label=\"评分\">\n          <template #default=\"scope\">\n            <el-rate v-model=\"scope.row.score\" disabled />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"content\" label=\"评价内容\" show-overflow-tooltip />\n        <el-table-column prop=\"createTime\" label=\"评价时间\" width=\"160\" />\n        <el-table-column prop=\"replyContent\" label=\"回复内容\" show-overflow-tooltip />\n        <el-table-column label=\"操作\" width=\"120\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleReply(scope.row)\" v-if=\"!scope.row.replyContent\">回复</el-button>\n            <el-button type=\"info\" link @click=\"handleDetail(scope.row)\">详情</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n\n    <!-- 回复评价对话框 -->\n    <el-dialog title=\"回复评价\" v-model=\"replyDialogVisible\" width=\"500px\">\n      <el-form ref=\"replyFormRef\" :model=\"replyForm\" :rules=\"replyRules\" label-width=\"80px\">\n        <el-form-item label=\"订单号\">\n          <el-input v-model=\"replyForm.orderNo\" disabled />\n        </el-form-item>\n        <el-form-item label=\"客户评价\">\n          <el-input v-model=\"replyForm.content\" type=\"textarea\" disabled :rows=\"3\" />\n        </el-form-item>\n        <el-form-item label=\"回复内容\" prop=\"replyContent\">\n          <el-input v-model=\"replyForm.replyContent\" type=\"textarea\" placeholder=\"请输入回复内容\" :rows=\"3\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"replyDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitReply\">确认</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getOrderCommentList, getCommentByOrderId, updateComment } from '@/api/order'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  customerId: undefined,\n  driverId: undefined,\n  rate: undefined,\n  status: undefined\n})\n\n// 表格数据和状态\nconst commentList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 回复对话框\nconst replyDialogVisible = ref(false)\nconst replyFormRef = ref(null)\nconst replyForm = reactive({\n  id: undefined,\n  orderId: undefined,\n  content: '',\n  replyContent: ''\n})\n\n// 表单验证规则\nconst replyRules = {\n  replyContent: [\n    { required: true, message: '请输入回复内容', trigger: 'blur' },\n    { min: 1, max: 200, message: '长度在 1 到 200 个字符', trigger: 'blur' }\n  ]\n}\n\n// 获取评价列表\nconst getList = async () => {\n  try {\n    loading.value = true\n    const res = await getOrderCommentList(queryParams)\n    console.log('订单评价响应:', res)\n    commentList.value = res.data.items || []\n    total.value = res.data.total || 0\n  } catch (error) {\n    console.error('获取评价列表失败', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.customerId = undefined\n  queryParams.driverId = undefined\n  queryParams.rate = undefined\n  queryParams.status = undefined\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 查看详情\nconst handleDetail = async (row) => {\n  try {\n    const res = await getCommentByOrderId(row.orderId)\n    ElMessage.info(`查看评价详情: ${row.orderNo || row.orderId}`)\n    console.log('评价详情:', res.data)\n  } catch (error) {\n    ElMessage.error('获取详情失败')\n  }\n}\n\n// 回复评价\nconst handleReply = (row) => {\n  replyForm.id = row.id\n  replyForm.orderId = row.orderId\n  replyForm.content = row.content\n  replyForm.replyContent = ''\n  replyDialogVisible.value = true\n}\n\n// 提交回复\nconst submitReply = async () => {\n  if (!replyFormRef.value) return\n  \n  await replyFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        await updateComment({\n          id: replyForm.id,\n          orderId: replyForm.orderId,\n          replyContent: replyForm.replyContent\n        })\n        ElMessage.success('回复成功')\n        replyDialogVisible.value = false\n        getList()\n      } catch (error) {\n        ElMessage.error('回复失败')\n      }\n    }\n  })\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.el-pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n</style> "],"mappings":"AA0FA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAI;AAC7C,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAa;AACrD,SAASC,mBAAmB,EAAEC,mBAAmB,EAAEC,aAAa,QAAQ,aAAY;;AAEpF;;;;;;;;IACA,MAAMC,WAAW,GAAGP,QAAQ,CAAC;MAC3BQ,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAEC,SAAS;MACrBC,QAAQ,EAAED,SAAS;MACnBE,IAAI,EAAEF,SAAS;MACfG,MAAM,EAAEH;IACV,CAAC;;IAED;IACA,MAAMI,WAAW,GAAGhB,GAAG,CAAC,EAAE;IAC1B,MAAMiB,OAAO,GAAGjB,GAAG,CAAC,KAAK;IACzB,MAAMkB,KAAK,GAAGlB,GAAG,CAAC,CAAC;;IAEnB;IACA,MAAMmB,kBAAkB,GAAGnB,GAAG,CAAC,KAAK;IACpC,MAAMoB,YAAY,GAAGpB,GAAG,CAAC,IAAI;IAC7B,MAAMqB,SAAS,GAAGpB,QAAQ,CAAC;MACzBqB,EAAE,EAAEV,SAAS;MACbW,OAAO,EAAEX,SAAS;MAClBY,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IAChB,CAAC;;IAED;IACA,MAAMC,UAAU,GAAG;MACjBD,YAAY,EAAE,CACZ;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,GAAG;QAAEH,OAAO,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAO;IAEpE;;IAEA;IACA,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACFf,OAAO,CAACgB,KAAK,GAAG,IAAG;QACnB,MAAMC,GAAG,GAAG,MAAM7B,mBAAmB,CAACG,WAAW;QACjD2B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG;QAC1BlB,WAAW,CAACiB,KAAK,GAAGC,GAAG,CAACG,IAAI,CAACC,KAAK,IAAI,EAAC;QACvCpB,KAAK,CAACe,KAAK,GAAGC,GAAG,CAACG,IAAI,CAACnB,KAAK,IAAI;MAClC,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,UAAU,EAAEA,KAAK;MACjC,CAAC,SAAS;QACRtB,OAAO,CAACgB,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;MACxBhC,WAAW,CAACC,OAAO,GAAG;MACtBuB,OAAO,CAAC;IACV;;IAEA;IACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;MACvBjC,WAAW,CAACG,UAAU,GAAGC,SAAQ;MACjCJ,WAAW,CAACK,QAAQ,GAAGD,SAAQ;MAC/BJ,WAAW,CAACM,IAAI,GAAGF,SAAQ;MAC3BJ,WAAW,CAACO,MAAM,GAAGH,SAAQ;MAC7BJ,WAAW,CAACC,OAAO,GAAG;MACtBuB,OAAO,CAAC;IACV;;IAEA;IACA,MAAMU,YAAY,GAAG,MAAOC,GAAG,IAAK;MAClC,IAAI;QACF,MAAMT,GAAG,GAAG,MAAM5B,mBAAmB,CAACqC,GAAG,CAACpB,OAAO;QACjDpB,SAAS,CAACyC,IAAI,CAAC,WAAWD,GAAG,CAACE,OAAO,IAAIF,GAAG,CAACpB,OAAO,EAAE;QACtDY,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAACG,IAAI;MAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdpC,SAAS,CAACoC,KAAK,CAAC,QAAQ;MAC1B;IACF;;IAEA;IACA,MAAMO,WAAW,GAAIH,GAAG,IAAK;MAC3BtB,SAAS,CAACC,EAAE,GAAGqB,GAAG,CAACrB,EAAC;MACpBD,SAAS,CAACE,OAAO,GAAGoB,GAAG,CAACpB,OAAM;MAC9BF,SAAS,CAACG,OAAO,GAAGmB,GAAG,CAACnB,OAAM;MAC9BH,SAAS,CAACI,YAAY,GAAG,EAAC;MAC1BN,kBAAkB,CAACc,KAAK,GAAG,IAAG;IAChC;;IAEA;IACA,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAAC3B,YAAY,CAACa,KAAK,EAAE;MAEzB,MAAMb,YAAY,CAACa,KAAK,CAACe,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACjD,IAAIA,KAAK,EAAE;UACT,IAAI;YACF,MAAM1C,aAAa,CAAC;cAClBe,EAAE,EAAED,SAAS,CAACC,EAAE;cAChBC,OAAO,EAAEF,SAAS,CAACE,OAAO;cAC1BE,YAAY,EAAEJ,SAAS,CAACI;YAC1B,CAAC;YACDtB,SAAS,CAAC+C,OAAO,CAAC,MAAM;YACxB/B,kBAAkB,CAACc,KAAK,GAAG,KAAI;YAC/BD,OAAO,CAAC;UACV,CAAC,CAAC,OAAOO,KAAK,EAAE;YACdpC,SAAS,CAACoC,KAAK,CAAC,MAAM;UACxB;QACF;MACF,CAAC;IACH;;IAEA;IACA,MAAMY,gBAAgB,GAAIC,IAAI,IAAK;MACjC5C,WAAW,CAACE,QAAQ,GAAG0C,IAAG;MAC1BpB,OAAO,CAAC;IACV;IAEA,MAAMqB,mBAAmB,GAAIC,IAAI,IAAK;MACpC9C,WAAW,CAACC,OAAO,GAAG6C,IAAG;MACzBtB,OAAO,CAAC;IACV;;IAEA;IACA9B,SAAS,CAAC,MAAM;MACd8B,OAAO,CAAC;IACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}