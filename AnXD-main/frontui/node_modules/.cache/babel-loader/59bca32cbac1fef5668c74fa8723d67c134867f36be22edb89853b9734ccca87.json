{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: '/api',\n  // url = base url + request url\n  timeout: 15000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在发送请求之前做些什么\n  if (store.state.user.token) {\n    // 让每个请求携带token\n    config.headers['Authorization'] = getToken();\n  }\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  console.log(error); // for debug\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n\n  // 如果返回的状态码不是200，说明请求异常\n  if (res.code !== 200) {\n    ElMessage({\n      message: res.message || '系统异常',\n      type: 'error',\n      duration: 5 * 1000\n    });\n\n    // 401: 未登录或token过期\n    if (res.code === 208) {\n      // 重新登录\n      store.dispatch('user/logout').then(() => {\n        location.reload();\n      });\n    }\n    return Promise.reject(new Error(res.message || '系统异常'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.log('err' + error); // for debug\n  ElMessage({\n    message: error.message || '请求失败',\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","state","user","token","headers","error","console","log","Promise","reject","response","res","data","code","message","type","duration","dispatch","then","location","reload","Error"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport store from '@/store'\nimport { getToken } from '@/utils/auth'\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: '/api', // url = base url + request url\n  timeout: 15000 // 请求超时时间\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    // 在发送请求之前做些什么\n    if (store.state.user.token) {\n      // 让每个请求携带token\n      config.headers['Authorization'] = getToken()\n    }\n    return config\n  },\n  error => {\n    // 对请求错误做些什么\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => {\n    const res = response.data\n    \n    // 如果返回的状态码不是200，说明请求异常\n    if (res.code !== 200) {\n      ElMessage({\n        message: res.message || '系统异常',\n        type: 'error',\n        duration: 5 * 1000\n      })\n      \n      // 401: 未登录或token过期\n      if (res.code === 208) {\n        // 重新登录\n        store.dispatch('user/logout').then(() => {\n          location.reload()\n        })\n      }\n      return Promise.reject(new Error(res.message || '系统异常'))\n    } else {\n      return res\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    ElMessage({\n      message: error.message || '请求失败',\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR;EACA,IAAIT,KAAK,CAACU,KAAK,CAACC,IAAI,CAACC,KAAK,EAAE;IAC1B;IACAH,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAC9C;EACA,OAAOQ,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACP;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,EAAC;EACnB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,OAAO,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC/BW,QAAQ,IAAI;EACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;;EAEzB;EACA,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IACpBvB,SAAS,CAAC;MACRwB,OAAO,EAAEH,GAAG,CAACG,OAAO,IAAI,MAAM;MAC9BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;;IAEF;IACA,IAAIL,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;MACpB;MACAtB,KAAK,CAAC0B,QAAQ,CAAC,aAAa,CAAC,CAACC,IAAI,CAAC,MAAM;QACvCC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACnB,CAAC,CAAC;IACJ;IACA,OAAOZ,OAAO,CAACC,MAAM,CAAC,IAAIY,KAAK,CAACV,GAAG,CAACG,OAAO,IAAI,MAAM,CAAC,CAAC;EACzD,CAAC,MAAM;IACL,OAAOH,GAAG;EACZ;AACF,CAAC,EACDN,KAAK,IAAI;EACPC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,KAAK,CAAC,EAAC;EAC3Bf,SAAS,CAAC;IACRwB,OAAO,EAAET,KAAK,CAACS,OAAO,IAAI,MAAM;IAChCC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOR,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}