{"ast":null,"code":"import request from '@/utils/request';\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  });\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  });\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  });\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  });\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  });\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 确保数据结构完全符合后端SysUser对象的期望\n  const userData = {\n    // 确保id为数字类型(Long)\n    id: data.id ? Number(data.id) : null,\n    username: data.username || '',\n    // 后端可能要求password字段必填，但我们不更新密码，可能需要先获取原密码\n    password: data.password || '',\n    name: data.name || '',\n    phone: data.phone || '',\n    headUrl: data.headUrl || '',\n    // 可能需要保留头像字段\n    // 确保deptId为数字类型(Long)\n    deptId: data.deptId ? Number(data.deptId) : null,\n    // 确保postId为数字类型(Long)\n    postId: data.postId ? Number(data.postId) : null,\n    description: data.description || '',\n    // 确保status为整数类型(Integer)\n    status: data.status === undefined ? 1 : Number(data.status)\n  };\n  console.log('发送严格格式的用户数据:', userData);\n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: userData,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  });\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  console.log('登录日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n\n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  console.log('操作日志请求参数:', requestParams);\n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n}","map":{"version":3,"names":["request","login","data","url","method","params","getUserInfo","getAllUsers","getUserById","id","createUser","updateUser","userData","Number","username","password","name","phone","headUrl","deptId","postId","description","status","undefined","console","log","headers","timeout","deleteUser","getUserLoginLog","requestParams","pageNum","pageSize","getUserOperLog","operName"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/api/user.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 登录接口\nexport function login(data) {\n  return request({\n    url: '/securityLogin/login',\n    method: 'post',\n    params: data\n  })\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/securityLogin/getUserInfo',\n    method: 'get'\n  })\n}\n\n// 获取所有用户\nexport function getAllUsers(params) {\n  return request({\n    url: '/sysUser/SearchAllUser',\n    method: 'get',\n    params\n  })\n}\n\n// 根据ID获取用户\nexport function getUserById(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'get'\n  })\n}\n\n// 创建用户\nexport function createUser(data) {\n  return request({\n    url: '/sysUser',\n    method: 'post',\n    data\n  })\n}\n\n// 更新用户\nexport function updateUser(data) {\n  // 确保数据结构完全符合后端SysUser对象的期望\n  const userData = {\n    // 确保id为数字类型(Long)\n    id: data.id ? Number(data.id) : null,\n    username: data.username || '',\n    // 后端可能要求password字段必填，但我们不更新密码，可能需要先获取原密码\n    password: data.password || '',\n    name: data.name || '',\n    phone: data.phone || '',\n    headUrl: data.headUrl || '',  // 可能需要保留头像字段\n    // 确保deptId为数字类型(Long)\n    deptId: data.deptId ? Number(data.deptId) : null,\n    // 确保postId为数字类型(Long)\n    postId: data.postId ? Number(data.postId) : null,\n    description: data.description || '',\n    // 确保status为整数类型(Integer)\n    status: data.status === undefined ? 1 : Number(data.status)\n  };\n  \n  console.log('发送严格格式的用户数据:', userData);\n  \n  return request({\n    url: '/sysUser',\n    method: 'put',\n    data: userData,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 20000\n  });\n}\n\n// 删除用户\nexport function deleteUser(id) {\n  return request({\n    url: `/sysUser/${id}`,\n    method: 'delete'\n  })\n}\n\n// 获取用户登录日志\nexport function getUserLoginLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加用户名参数\n  if (params.username) {\n    requestParams.username = params.username;\n  }\n  \n  console.log('登录日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserLoginLog',\n    method: 'post',\n    params: requestParams\n  });\n}\n\n// 获取用户操作日志\nexport function getUserOperLog(params) {\n  // 简化请求参数\n  const requestParams = {\n    pageNum: 1,\n    pageSize: 10\n  };\n  \n  // 仅添加操作人名称\n  if (params.operName) {\n    requestParams.operName = params.operName;\n  }\n  \n  console.log('操作日志请求参数:', requestParams);\n  \n  return request({\n    url: '/sysUser/getUserOperLog',\n    method: 'post',\n    params: requestParams\n  });\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}