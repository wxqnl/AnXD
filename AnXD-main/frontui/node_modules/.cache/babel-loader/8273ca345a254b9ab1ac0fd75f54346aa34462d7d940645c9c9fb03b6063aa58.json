{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { getDashboardStatistics, getLoginLogs, getSystemInfo } from '@/api/dashboard';\nimport { ElMessage } from 'element-plus';\n\n// 加载状态\n\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const logLoading = ref(false);\n    const sysInfoLoading = ref(false);\n\n    // 统计数据\n    const statistics = ref({\n      driverCount: 0,\n      customerCount: 0,\n      orderCount: 0,\n      todayOrderCount: 0\n    });\n\n    // 系统信息\n    const systemInfo = ref({\n      name: '代驾管理系统',\n      version: '1.0.0',\n      server: 'Spring Boot',\n      database: 'MySQL',\n      cache: 'Redis'\n    });\n\n    // 最近登录记录\n    const loginLogs = ref([]);\n\n    // 获取统计数据\n    const fetchStatistics = async () => {\n      loading.value = true;\n      try {\n        const res = await getDashboardStatistics();\n        if (res.code === 200) {\n          statistics.value = res.data;\n        } else {\n          // 如果API调用失败，保留默认数据\n          statistics.value = {\n            driverCount: 120,\n            customerCount: 2356,\n            orderCount: 15782,\n            todayOrderCount: 58\n          };\n          ElMessage.warning('获取统计数据失败，显示模拟数据');\n        }\n      } catch (error) {\n        console.error('获取统计数据失败', error);\n        ElMessage.error('获取统计数据失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取系统信息\n    const fetchSystemInfo = async () => {\n      sysInfoLoading.value = true;\n      try {\n        const res = await getSystemInfo();\n        if (res.code === 200) {\n          systemInfo.value = res.data;\n        }\n      } catch (error) {\n        console.error('获取系统信息失败', error);\n      } finally {\n        sysInfoLoading.value = false;\n      }\n    };\n\n    // 获取登录日志\n    const fetchLoginLogs = async () => {\n      logLoading.value = true;\n      try {\n        const res = await getLoginLogs();\n        if (res.code === 200) {\n          loginLogs.value = res.data;\n        } else {\n          // 如果API调用失败，使用示例数据\n          loginLogs.value = [{\n            username: 'admin',\n            ipaddr: '192.168.1.1',\n            loginTime: '2023-06-15 08:30:00'\n          }, {\n            username: 'user1',\n            ipaddr: '192.168.1.2',\n            loginTime: '2023-06-15 09:12:00'\n          }, {\n            username: 'user2',\n            ipaddr: '192.168.1.3',\n            loginTime: '2023-06-15 10:05:00'\n          }, {\n            username: 'user3',\n            ipaddr: '192.168.1.4',\n            loginTime: '2023-06-15 11:30:00'\n          }, {\n            username: 'user4',\n            ipaddr: '192.168.1.5',\n            loginTime: '2023-06-15 13:15:00'\n          }];\n          ElMessage.warning('获取登录日志失败，显示模拟数据');\n        }\n      } catch (error) {\n        console.error('获取登录日志失败', error);\n      } finally {\n        logLoading.value = false;\n      }\n    };\n\n    // 初始化仪表盘数据\n    onMounted(() => {\n      fetchStatistics();\n      fetchSystemInfo();\n      fetchLoginLogs();\n    });\n    const __returned__ = {\n      loading,\n      logLoading,\n      sysInfoLoading,\n      statistics,\n      systemInfo,\n      loginLogs,\n      fetchStatistics,\n      fetchSystemInfo,\n      fetchLoginLogs,\n      ref,\n      onMounted,\n      get getDashboardStatistics() {\n        return getDashboardStatistics;\n      },\n      get getLoginLogs() {\n        return getLoginLogs;\n      },\n      get getSystemInfo() {\n        return getSystemInfo;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","getDashboardStatistics","getLoginLogs","getSystemInfo","ElMessage","loading","logLoading","sysInfoLoading","statistics","driverCount","customerCount","orderCount","todayOrderCount","systemInfo","name","version","server","database","cache","loginLogs","fetchStatistics","value","res","code","data","warning","error","console","fetchSystemInfo","fetchLoginLogs","username","ipaddr","loginTime"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/pages/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" v-loading=\"loading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>司机总数</span>\n            </div>\n          </template>\n          <div class=\"card-content\">\n            <el-statistic :value=\"statistics.driverCount\">\n              <template #prefix>\n                <el-icon><Avatar /></el-icon>\n              </template>\n            </el-statistic>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" v-loading=\"loading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>客户总数</span>\n            </div>\n          </template>\n          <div class=\"card-content\">\n            <el-statistic :value=\"statistics.customerCount\">\n              <template #prefix>\n                <el-icon><User /></el-icon>\n              </template>\n            </el-statistic>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" v-loading=\"loading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>订单总数</span>\n            </div>\n          </template>\n          <div class=\"card-content\">\n            <el-statistic :value=\"statistics.orderCount\">\n              <template #prefix>\n                <el-icon><ShoppingCart /></el-icon>\n              </template>\n            </el-statistic>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" v-loading=\"loading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>今日订单数</span>\n            </div>\n          </template>\n          <div class=\"card-content\">\n            <el-statistic :value=\"statistics.todayOrderCount\">\n              <template #prefix>\n                <el-icon><Calendar /></el-icon>\n              </template>\n            </el-statistic>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <el-col :span=\"12\">\n        <el-card v-loading=\"sysInfoLoading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>系统信息</span>\n            </div>\n          </template>\n          <div class=\"info-item\">\n            <span class=\"label\">系统名称：</span>\n            <span class=\"value\">{{ systemInfo.name }}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"label\">系统版本：</span>\n            <span class=\"value\">{{ systemInfo.version }}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"label\">服务器：</span>\n            <span class=\"value\">{{ systemInfo.server }}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"label\">数据库：</span>\n            <span class=\"value\">{{ systemInfo.database }}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"label\">缓存：</span>\n            <span class=\"value\">{{ systemInfo.cache }}</span>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"12\">\n        <el-card v-loading=\"logLoading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>最近登录</span>\n            </div>\n          </template>\n          <el-table :data=\"loginLogs\" style=\"width: 100%\" size=\"small\">\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" />\n            <el-table-column prop=\"ipaddr\" label=\"IP地址\" width=\"120\" />\n            <el-table-column prop=\"loginTime\" label=\"登录时间\" />\n          </el-table>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { getDashboardStatistics, getLoginLogs, getSystemInfo } from '@/api/dashboard'\nimport { ElMessage } from 'element-plus'\n\n// 加载状态\nconst loading = ref(false)\nconst logLoading = ref(false)\nconst sysInfoLoading = ref(false)\n\n// 统计数据\nconst statistics = ref({\n  driverCount: 0,\n  customerCount: 0,\n  orderCount: 0,\n  todayOrderCount: 0\n})\n\n// 系统信息\nconst systemInfo = ref({\n  name: '代驾管理系统',\n  version: '1.0.0',\n  server: 'Spring Boot',\n  database: 'MySQL',\n  cache: 'Redis'\n})\n\n// 最近登录记录\nconst loginLogs = ref([])\n\n// 获取统计数据\nconst fetchStatistics = async () => {\n  loading.value = true\n  try {\n    const res = await getDashboardStatistics()\n    if (res.code === 200) {\n      statistics.value = res.data\n    } else {\n      // 如果API调用失败，保留默认数据\n      statistics.value = {\n        driverCount: 120,\n        customerCount: 2356,\n        orderCount: 15782,\n        todayOrderCount: 58\n      }\n      ElMessage.warning('获取统计数据失败，显示模拟数据')\n    }\n  } catch (error) {\n    console.error('获取统计数据失败', error)\n    ElMessage.error('获取统计数据失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取系统信息\nconst fetchSystemInfo = async () => {\n  sysInfoLoading.value = true\n  try {\n    const res = await getSystemInfo()\n    if (res.code === 200) {\n      systemInfo.value = res.data\n    }\n  } catch (error) {\n    console.error('获取系统信息失败', error)\n  } finally {\n    sysInfoLoading.value = false\n  }\n}\n\n// 获取登录日志\nconst fetchLoginLogs = async () => {\n  logLoading.value = true\n  try {\n    const res = await getLoginLogs()\n    if (res.code === 200) {\n      loginLogs.value = res.data\n    } else {\n      // 如果API调用失败，使用示例数据\n      loginLogs.value = [\n        { username: 'admin', ipaddr: '192.168.1.1', loginTime: '2023-06-15 08:30:00' },\n        { username: 'user1', ipaddr: '192.168.1.2', loginTime: '2023-06-15 09:12:00' },\n        { username: 'user2', ipaddr: '192.168.1.3', loginTime: '2023-06-15 10:05:00' },\n        { username: 'user3', ipaddr: '192.168.1.4', loginTime: '2023-06-15 11:30:00' },\n        { username: 'user4', ipaddr: '192.168.1.5', loginTime: '2023-06-15 13:15:00' }\n      ]\n      ElMessage.warning('获取登录日志失败，显示模拟数据')\n    }\n  } catch (error) {\n    console.error('获取登录日志失败', error)\n  } finally {\n    logLoading.value = false\n  }\n}\n\n// 初始化仪表盘数据\nonMounted(() => {\n  fetchStatistics()\n  fetchSystemInfo()\n  fetchLoginLogs()\n})\n</script>\n\n<style scoped>\n.dashboard-container {\n  padding: 20px;\n}\n\n.stat-card {\n  height: 150px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.card-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n}\n\n.info-item {\n  margin-bottom: 10px;\n  display: flex;\n}\n\n.label {\n  width: 100px;\n  color: #606266;\n}\n\n.value {\n  color: #303133;\n  font-weight: 500;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}