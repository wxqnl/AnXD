{"ast":null,"code":"import { ref, reactive, onMounted, nextTick } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getDriverList, updateDriver, removeDriver, getDriverLoginLog, getDriverByName, getDriverAccountDetail, getDriverAccount } from '@/api/driver';\n\n// 查询参数\n\nexport default {\n  __name: 'DriverInfo',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      name: '',\n      jobNo: '',\n      phone: '',\n      status: undefined\n    });\n\n    // 表格数据和状态\n    const driverList = ref([]);\n    const loading = ref(false);\n    const total = ref(0);\n\n    // 弹窗相关\n    const dialogVisible = ref(false);\n    const driverFormRef = ref(null);\n    const driverForm = reactive({\n      name: '',\n      nickname: '',\n      jobNo: '',\n      phone: '',\n      gender: '',\n      idcardNo: '',\n      driverLicenseNo: '',\n      driverLicenseClazz: '',\n      status: 1\n    });\n\n    // 日志查看相关\n    const logDialogVisible = ref(false);\n    const logData = ref(null);\n\n    // 账户信息相关\n    const accountDialogVisible = ref(false);\n    const accountData = ref(null);\n    const activeTab = ref('overview');\n    const accountDetailList = ref([]);\n    const accountDetailTotal = ref(0);\n    const detailLoading = ref(false);\n    const currentDriverId = ref('');\n    const accountDetailError = ref('');\n\n    // 账单查询参数\n    const accountDetailQuery = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      dirverId: '',\n      tradeType: '',\n      tradeNo: '',\n      minAmount: undefined,\n      maxAmount: undefined\n    });\n\n    // 表单验证规则\n    const rules = {\n      jobNo: [{\n        required: true,\n        message: '请输入工号',\n        trigger: 'blur'\n      }],\n      phone: [{\n        required: true,\n        message: '请输入手机号码',\n        trigger: 'blur'\n      }, {\n        pattern: /^1[3-9]\\d{9}$/,\n        message: '请输入正确的手机号码',\n        trigger: 'blur'\n      }],\n      gender: [{\n        required: true,\n        message: '请选择性别',\n        trigger: 'change'\n      }],\n      idcardNo: [{\n        required: true,\n        message: '请输入身份证号码',\n        trigger: 'blur'\n      }, {\n        pattern: /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/,\n        message: '请输入正确的身份证号码',\n        trigger: 'blur'\n      }],\n      driverLicenseNo: [{\n        required: true,\n        message: '请输入驾驶证号',\n        trigger: 'blur'\n      }],\n      driverLicenseClazz: [{\n        required: true,\n        message: '请选择准驾车型',\n        trigger: 'change'\n      }],\n      status: [{\n        required: true,\n        message: '请选择状态',\n        trigger: 'change'\n      }]\n    };\n\n    // 获取司机列表\n    const getList = async () => {\n      try {\n        loading.value = true;\n        const res = await getDriverList(queryParams);\n        console.log('司机列表响应:', res);\n        driverList.value = res.data.items || [];\n        total.value = res.data.total || 0;\n      } catch (error) {\n        console.error('获取司机列表失败', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 查询按钮\n    const handleQuery = () => {\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      queryParams.name = '';\n      queryParams.jobNo = '';\n      queryParams.phone = '';\n      queryParams.status = undefined;\n      queryParams.pageNum = 1;\n      getList();\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      driverForm.name = '';\n      driverForm.nickname = '';\n      driverForm.jobNo = '';\n      driverForm.phone = '';\n      driverForm.gender = '';\n      driverForm.idcardNo = '';\n      driverForm.driverLicenseNo = '';\n      driverForm.driverLicenseClazz = '';\n      driverForm.status = 1;\n      nextTick(() => {\n        driverFormRef.value?.resetFields();\n      });\n    };\n\n    // 编辑司机\n    const handleEdit = async row => {\n      resetForm();\n      dialogVisible.value = true;\n\n      // 获取最新的司机信息\n      try {\n        const res = await getDriverByName(row.name);\n        if (res.data) {\n          // 填充表单数据\n          Object.assign(driverForm, res.data);\n        }\n      } catch (error) {\n        ElMessage.error('获取司机信息失败');\n      }\n    };\n\n    // 删除司机\n    const handleDelete = row => {\n      ElMessageBox.confirm(`确定要删除司机 ${row.name} 吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await removeDriver(row.name);\n          ElMessage.success('删除成功');\n          getList();\n        } catch (error) {\n          ElMessage.error('删除失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 查看日志\n    const viewLog = async row => {\n      try {\n        logDialogVisible.value = true;\n        const res = await getDriverLoginLog(row.name);\n        logData.value = res.data;\n      } catch (error) {\n        console.error('获取登录日志失败', error);\n        ElMessage.error('获取登录日志失败');\n        logData.value = null;\n      }\n    };\n\n    // 查看账户信息\n    const viewAccount = async row => {\n      accountDialogVisible.value = true;\n      activeTab.value = 'overview';\n      currentDriverId.value = row.id || row.driverId;\n\n      // 获取账户概览\n      try {\n        const res = await getDriverAccount(currentDriverId.value);\n        accountData.value = res.data;\n      } catch (error) {\n        console.error('获取账户信息失败', error);\n        ElMessage.error('获取账户信息失败');\n        accountData.value = null;\n      }\n\n      // 账单查询参数设置\n      accountDetailQuery.dirverId = currentDriverId.value;\n\n      // 获取账单明细\n      getAccountDetail();\n    };\n\n    // 获取账单明细\n    const getAccountDetail = async () => {\n      try {\n        detailLoading.value = true;\n        accountDetailError.value = '';\n        console.log('账单查询参数:', accountDetailQuery); // 调试日志\n        const res = await getDriverAccountDetail(accountDetailQuery);\n        if (res.data) {\n          accountDetailList.value = res.data.items || [];\n          accountDetailTotal.value = res.data.total || 0;\n        } else {\n          accountDetailList.value = [];\n          accountDetailTotal.value = 0;\n          accountDetailError.value = '服务器返回数据为空';\n        }\n      } catch (error) {\n        console.error('获取账单明细失败', error);\n        accountDetailList.value = [];\n        accountDetailTotal.value = 0;\n        accountDetailError.value = error.message || '获取账单明细数据失败';\n      } finally {\n        detailLoading.value = false;\n      }\n    };\n\n    // 重试获取账单明细\n    const retryGetAccountDetail = () => {\n      getAccountDetail();\n    };\n\n    // 账单分页操作\n    const handleDetailSizeChange = size => {\n      accountDetailQuery.pageSize = size;\n      getAccountDetail();\n    };\n    const handleDetailCurrentChange = page => {\n      accountDetailQuery.pageNum = page;\n      getAccountDetail();\n    };\n\n    // 交易类型标签颜色\n    const getTradeTypeTag = type => {\n      const typeMap = {\n        '1': 'success',\n        // 订单收入\n        '2': 'danger',\n        // 提现\n        '3': 'warning',\n        // 退款\n        '4': 'info' // 其他\n      };\n      return typeMap[type] || 'info';\n    };\n\n    // 交易类型名称\n    const getTradeTypeName = type => {\n      const typeMap = {\n        '1': '订单收入',\n        '2': '提现',\n        '3': '退款',\n        '4': '其他'\n      };\n      return typeMap[type] || '未知类型';\n    };\n\n    // 取消表单\n    const cancelForm = () => {\n      dialogVisible.value = false;\n      resetForm();\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      driverFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            // 编辑司机\n            const res = await updateDriver(driverForm);\n            ElMessage.success('修改司机信息成功');\n            dialogVisible.value = false;\n            getList();\n          } catch (error) {\n            console.error('操作失败', error);\n            ElMessage.error('操作失败，请稍后重试');\n          }\n        }\n      });\n    };\n\n    // 分页操作\n    const handleSizeChange = size => {\n      queryParams.pageSize = size;\n      getList();\n    };\n    const handleCurrentChange = page => {\n      queryParams.pageNum = page;\n      getList();\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getList();\n    });\n    const __returned__ = {\n      queryParams,\n      driverList,\n      loading,\n      total,\n      dialogVisible,\n      driverFormRef,\n      driverForm,\n      logDialogVisible,\n      logData,\n      accountDialogVisible,\n      accountData,\n      activeTab,\n      accountDetailList,\n      accountDetailTotal,\n      detailLoading,\n      currentDriverId,\n      accountDetailError,\n      accountDetailQuery,\n      rules,\n      getList,\n      handleQuery,\n      resetQuery,\n      resetForm,\n      handleEdit,\n      handleDelete,\n      viewLog,\n      viewAccount,\n      getAccountDetail,\n      retryGetAccountDetail,\n      handleDetailSizeChange,\n      handleDetailCurrentChange,\n      getTradeTypeTag,\n      getTradeTypeName,\n      cancelForm,\n      submitForm,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      nextTick,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get getDriverList() {\n        return getDriverList;\n      },\n      get updateDriver() {\n        return updateDriver;\n      },\n      get removeDriver() {\n        return removeDriver;\n      },\n      get getDriverLoginLog() {\n        return getDriverLoginLog;\n      },\n      get getDriverByName() {\n        return getDriverByName;\n      },\n      get getDriverAccountDetail() {\n        return getDriverAccountDetail;\n      },\n      get getDriverAccount() {\n        return getDriverAccount;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","ElMessage","ElMessageBox","getDriverList","updateDriver","removeDriver","getDriverLoginLog","getDriverByName","getDriverAccountDetail","getDriverAccount","queryParams","pageNum","pageSize","name","jobNo","phone","status","undefined","driverList","loading","total","dialogVisible","driverFormRef","driverForm","nickname","gender","idcardNo","driverLicenseNo","driverLicenseClazz","logDialogVisible","logData","accountDialogVisible","accountData","activeTab","accountDetailList","accountDetailTotal","detailLoading","currentDriverId","accountDetailError","accountDetailQuery","dirverId","tradeType","tradeNo","minAmount","maxAmount","rules","required","message","trigger","pattern","getList","value","res","console","log","data","items","error","handleQuery","resetQuery","resetForm","resetFields","handleEdit","row","Object","assign","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","viewLog","viewAccount","id","driverId","getAccountDetail","retryGetAccountDetail","handleDetailSizeChange","size","handleDetailCurrentChange","page","getTradeTypeTag","typeMap","getTradeTypeName","cancelForm","submitForm","validate","valid","handleSizeChange","handleCurrentChange"],"sources":["/Users/apple/Desktop/111111/zongheshixi/daijiaguanli/frontui/src/pages/driver/DriverInfo.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-card\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" class=\"search-form\">\n        <el-form-item label=\"司机姓名\" prop=\"name\">\n          <el-input v-model=\"queryParams.name\" placeholder=\"请输入司机姓名\" clearable />\n        </el-form-item>\n        <el-form-item label=\"工号\" prop=\"jobNo\">\n          <el-input v-model=\"queryParams.jobNo\" placeholder=\"请输入工号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"queryParams.phone\" placeholder=\"请输入手机号\" clearable />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n            <el-option label=\"正常\" :value=\"1\" />\n            <el-option label=\"停用\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>司机列表</span>\n        </div>\n      </template>\n      \n      <el-table v-loading=\"loading\" :data=\"driverList\" border>\n        <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n        <el-table-column prop=\"name\" label=\"司机姓名\" />\n        <el-table-column prop=\"jobNo\" label=\"工号\" />\n        <el-table-column prop=\"phone\" label=\"手机号\" />\n        <el-table-column prop=\"idcardNo\" label=\"身份证号\" />\n        <el-table-column prop=\"driverLicenseNo\" label=\"驾驶证号\" />\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '正常' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"320\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"danger\" link @click=\"handleDelete(scope.row)\">删除</el-button>\n            <el-button type=\"info\" link @click=\"viewLog(scope.row)\">查看日志</el-button>\n            <el-button type=\"success\" link @click=\"viewAccount(scope.row)\">查看账户</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <el-pagination\n        v-if=\"total > 0\"\n        v-model:current-page=\"queryParams.pageNum\"\n        v-model:page-size=\"queryParams.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n\n    <!-- 编辑司机对话框 -->\n    <el-dialog \n      title=\"编辑司机\" \n      v-model=\"dialogVisible\" \n      width=\"600px\" \n      append-to-body\n      :close-on-click-modal=\"false\"\n    >\n      <el-form \n        ref=\"driverFormRef\" \n        :model=\"driverForm\" \n        :rules=\"rules\" \n        label-width=\"100px\"\n      >\n        <el-form-item label=\"司机姓名\" prop=\"name\">\n          <el-input v-model=\"driverForm.name\" placeholder=\"请输入司机姓名\" disabled />\n        </el-form-item>\n        <el-form-item label=\"工号\" prop=\"jobNo\">\n          <el-input v-model=\"driverForm.jobNo\" placeholder=\"请输入工号\" />\n        </el-form-item>\n        <el-form-item label=\"手机号码\" prop=\"phone\">\n          <el-input v-model=\"driverForm.phone\" placeholder=\"请输入手机号码\" />\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-select v-model=\"driverForm.gender\" placeholder=\"请选择性别\">\n            <el-option label=\"男\" value=\"男\" />\n            <el-option label=\"女\" value=\"女\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"身份证号\" prop=\"idcardNo\">\n          <el-input v-model=\"driverForm.idcardNo\" placeholder=\"请输入身份证号码\" />\n        </el-form-item>\n        <el-form-item label=\"驾驶证号\" prop=\"driverLicenseNo\">\n          <el-input v-model=\"driverForm.driverLicenseNo\" placeholder=\"请输入驾驶证号\" />\n        </el-form-item>\n        <el-form-item label=\"准驾车型\" prop=\"driverLicenseClazz\">\n          <el-select v-model=\"driverForm.driverLicenseClazz\" placeholder=\"请选择准驾车型\">\n            <el-option label=\"A1\" value=\"A1\" />\n            <el-option label=\"A2\" value=\"A2\" />\n            <el-option label=\"B1\" value=\"B1\" />\n            <el-option label=\"B2\" value=\"B2\" />\n            <el-option label=\"C1\" value=\"C1\" />\n            <el-option label=\"C2\" value=\"C2\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"driverForm.status\">\n            <el-radio :value=\"1\">正常</el-radio>\n            <el-radio :value=\"0\">停用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"cancelForm\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 登录日志对话框 -->\n    <el-dialog title=\"司机登录日志\" v-model=\"logDialogVisible\" width=\"600px\">\n      <div v-if=\"logData\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"司机ID\">{{ logData.driverId }}</el-descriptions-item>\n          <el-descriptions-item label=\"登录消息\">{{ logData.msg }}</el-descriptions-item>\n          <el-descriptions-item label=\"登录状态\">\n            <el-tag :type=\"logData.status ? 'success' : 'danger'\">\n              {{ logData.status ? '成功' : '失败' }}\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"IP地址\">{{ logData.ipaddr || '未记录' }}</el-descriptions-item>\n        </el-descriptions>\n      </div>\n      <div v-else class=\"empty-data\">\n        暂无登录日志数据\n      </div>\n    </el-dialog>\n\n    <!-- 账户信息对话框 -->\n    <el-dialog title=\"司机账户信息\" v-model=\"accountDialogVisible\" width=\"700px\">\n      <el-tabs v-model=\"activeTab\">\n        <el-tab-pane label=\"账户概览\" name=\"overview\">\n          <div v-if=\"accountData\">\n            <el-descriptions :column=\"2\" border>\n              <el-descriptions-item label=\"司机ID\">{{ accountData.driverId }}</el-descriptions-item>\n              <el-descriptions-item label=\"司机姓名\">{{ accountData.driverName || '未知' }}</el-descriptions-item>\n              <el-descriptions-item label=\"总收入\">\n                <span class=\"income\">¥ {{ accountData.totalIncome || '0.00' }}</span>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"可提现金额\">\n                <span class=\"withdraw\">¥ {{ accountData.availableAmount || '0.00' }}</span>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"冻结金额\">¥ {{ accountData.frozenAmount || '0.00' }}</el-descriptions-item>\n              <el-descriptions-item label=\"已提现金额\">¥ {{ accountData.withdrawAmount || '0.00' }}</el-descriptions-item>\n              <el-descriptions-item label=\"账户状态\" :span=\"2\">\n                <el-tag :type=\"accountData.status === 1 ? 'success' : 'danger'\">\n                  {{ accountData.status === 1 ? '正常' : '冻结' }}\n                </el-tag>\n              </el-descriptions-item>\n            </el-descriptions>\n          </div>\n          <div v-else class=\"empty-data\">\n            暂无账户信息数据\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"账单明细\" name=\"detail\">\n          <div v-if=\"accountDetailError\" class=\"error-message\">\n            <el-alert title=\"获取账单明细失败\" type=\"error\" :closable=\"false\" show-icon>\n              <p>{{ accountDetailError }}</p>\n              <el-button size=\"small\" type=\"primary\" @click=\"retryGetAccountDetail\">重试</el-button>\n            </el-alert>\n          </div>\n          <el-table v-else v-loading=\"detailLoading\" :data=\"accountDetailList\" border>\n            <el-table-column type=\"index\" label=\"#\" width=\"50\" />\n            <el-table-column prop=\"tradeNo\" label=\"交易号\" width=\"180\" />\n            <el-table-column prop=\"tradeType\" label=\"交易类型\">\n              <template #default=\"scope\">\n                <el-tag :type=\"getTradeTypeTag(scope.row.tradeType)\">\n                  {{ getTradeTypeName(scope.row.tradeType) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"amount\" label=\"金额\">\n              <template #default=\"scope\">\n                <span :class=\"scope.row.amount > 0 ? 'income-amount' : 'expense-amount'\">\n                  {{ scope.row.amount > 0 ? '+' : '' }}{{ scope.row.amount }}\n                </span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"createTime\" label=\"交易时间\" width=\"160\" />\n            <el-table-column prop=\"remark\" label=\"备注\" />\n          </el-table>\n          \n          <el-pagination\n            v-if=\"!accountDetailError && accountDetailTotal > 0\"\n            v-model:current-page=\"accountDetailQuery.pageNum\"\n            v-model:page-size=\"accountDetailQuery.pageSize\"\n            :page-sizes=\"[5, 10, 20, 50]\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"accountDetailTotal\"\n            @size-change=\"handleDetailSizeChange\"\n            @current-change=\"handleDetailCurrentChange\"\n            class=\"detail-pagination\"\n          />\n          <div v-else-if=\"!accountDetailError && accountDetailList.length === 0\" class=\"empty-data\">\n            暂无交易明细数据\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  getDriverList, \n  updateDriver, \n  removeDriver, \n  getDriverLoginLog, \n  getDriverByName,\n  getDriverAccountDetail,\n  getDriverAccount\n} from '@/api/driver'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  name: '',\n  jobNo: '',\n  phone: '',\n  status: undefined\n})\n\n// 表格数据和状态\nconst driverList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 弹窗相关\nconst dialogVisible = ref(false)\nconst driverFormRef = ref(null)\nconst driverForm = reactive({\n  name: '',\n  nickname: '',\n  jobNo: '',\n  phone: '',\n  gender: '',\n  idcardNo: '',\n  driverLicenseNo: '',\n  driverLicenseClazz: '',\n  status: 1\n})\n\n// 日志查看相关\nconst logDialogVisible = ref(false)\nconst logData = ref(null)\n\n// 账户信息相关\nconst accountDialogVisible = ref(false)\nconst accountData = ref(null)\nconst activeTab = ref('overview')\nconst accountDetailList = ref([])\nconst accountDetailTotal = ref(0)\nconst detailLoading = ref(false)\nconst currentDriverId = ref('')\nconst accountDetailError = ref('')\n\n// 账单查询参数\nconst accountDetailQuery = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  dirverId: '',\n  tradeType: '',\n  tradeNo: '',\n  minAmount: undefined,\n  maxAmount: undefined\n})\n\n// 表单验证规则\nconst rules = {\n  jobNo: [\n    { required: true, message: '请输入工号', trigger: 'blur' }\n  ],\n  phone: [\n    { required: true, message: '请输入手机号码', trigger: 'blur' },\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\n  ],\n  gender: [\n    { required: true, message: '请选择性别', trigger: 'change' }\n  ],\n  idcardNo: [\n    { required: true, message: '请输入身份证号码', trigger: 'blur' },\n    { pattern: /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/, message: '请输入正确的身份证号码', trigger: 'blur' }\n  ],\n  driverLicenseNo: [\n    { required: true, message: '请输入驾驶证号', trigger: 'blur' }\n  ],\n  driverLicenseClazz: [\n    { required: true, message: '请选择准驾车型', trigger: 'change' }\n  ],\n  status: [\n    { required: true, message: '请选择状态', trigger: 'change' }\n  ]\n}\n\n// 获取司机列表\nconst getList = async () => {\n  try {\n    loading.value = true\n    const res = await getDriverList(queryParams)\n    console.log('司机列表响应:', res)\n    driverList.value = res.data.items || []\n    total.value = res.data.total || 0\n  } catch (error) {\n    console.error('获取司机列表失败', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 查询按钮\nconst handleQuery = () => {\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.name = ''\n  queryParams.jobNo = ''\n  queryParams.phone = ''\n  queryParams.status = undefined\n  queryParams.pageNum = 1\n  getList()\n}\n\n// 重置表单\nconst resetForm = () => {\n  driverForm.name = ''\n  driverForm.nickname = ''\n  driverForm.jobNo = ''\n  driverForm.phone = ''\n  driverForm.gender = ''\n  driverForm.idcardNo = ''\n  driverForm.driverLicenseNo = ''\n  driverForm.driverLicenseClazz = ''\n  driverForm.status = 1\n  nextTick(() => {\n    driverFormRef.value?.resetFields()\n  })\n}\n\n// 编辑司机\nconst handleEdit = async (row) => {\n  resetForm()\n  dialogVisible.value = true\n  \n  // 获取最新的司机信息\n  try {\n    const res = await getDriverByName(row.name)\n    if (res.data) {\n      // 填充表单数据\n      Object.assign(driverForm, res.data)\n    }\n  } catch (error) {\n    ElMessage.error('获取司机信息失败')\n  }\n}\n\n// 删除司机\nconst handleDelete = (row) => {\n  ElMessageBox.confirm(`确定要删除司机 ${row.name} 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await removeDriver(row.name)\n      ElMessage.success('删除成功')\n      getList()\n    } catch (error) {\n      ElMessage.error('删除失败')\n    }\n  }).catch(() => {})\n}\n\n// 查看日志\nconst viewLog = async (row) => {\n  try {\n    logDialogVisible.value = true\n    const res = await getDriverLoginLog(row.name)\n    logData.value = res.data\n  } catch (error) {\n    console.error('获取登录日志失败', error)\n    ElMessage.error('获取登录日志失败')\n    logData.value = null\n  }\n}\n\n// 查看账户信息\nconst viewAccount = async (row) => {\n  accountDialogVisible.value = true\n  activeTab.value = 'overview'\n  currentDriverId.value = row.id || row.driverId\n  \n  // 获取账户概览\n  try {\n    const res = await getDriverAccount(currentDriverId.value)\n    accountData.value = res.data\n  } catch (error) {\n    console.error('获取账户信息失败', error)\n    ElMessage.error('获取账户信息失败')\n    accountData.value = null\n  }\n  \n  // 账单查询参数设置\n  accountDetailQuery.dirverId = currentDriverId.value\n  \n  // 获取账单明细\n  getAccountDetail()\n}\n\n// 获取账单明细\nconst getAccountDetail = async () => {\n  try {\n    detailLoading.value = true\n    accountDetailError.value = ''\n    console.log('账单查询参数:', accountDetailQuery) // 调试日志\n    const res = await getDriverAccountDetail(accountDetailQuery)\n    if (res.data) {\n      accountDetailList.value = res.data.items || []\n      accountDetailTotal.value = res.data.total || 0\n    } else {\n      accountDetailList.value = []\n      accountDetailTotal.value = 0\n      accountDetailError.value = '服务器返回数据为空'\n    }\n  } catch (error) {\n    console.error('获取账单明细失败', error)\n    accountDetailList.value = []\n    accountDetailTotal.value = 0\n    accountDetailError.value = error.message || '获取账单明细数据失败'\n  } finally {\n    detailLoading.value = false\n  }\n}\n\n// 重试获取账单明细\nconst retryGetAccountDetail = () => {\n  getAccountDetail()\n}\n\n// 账单分页操作\nconst handleDetailSizeChange = (size) => {\n  accountDetailQuery.pageSize = size\n  getAccountDetail()\n}\n\nconst handleDetailCurrentChange = (page) => {\n  accountDetailQuery.pageNum = page\n  getAccountDetail()\n}\n\n// 交易类型标签颜色\nconst getTradeTypeTag = (type) => {\n  const typeMap = {\n    '1': 'success', // 订单收入\n    '2': 'danger',  // 提现\n    '3': 'warning', // 退款\n    '4': 'info'     // 其他\n  }\n  return typeMap[type] || 'info'\n}\n\n// 交易类型名称\nconst getTradeTypeName = (type) => {\n  const typeMap = {\n    '1': '订单收入',\n    '2': '提现',\n    '3': '退款',\n    '4': '其他'\n  }\n  return typeMap[type] || '未知类型'\n}\n\n// 取消表单\nconst cancelForm = () => {\n  dialogVisible.value = false\n  resetForm()\n}\n\n// 提交表单\nconst submitForm = async () => {\n  driverFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        // 编辑司机\n        const res = await updateDriver(driverForm)\n        ElMessage.success('修改司机信息成功')\n        dialogVisible.value = false\n        getList()\n      } catch (error) {\n        console.error('操作失败', error)\n        ElMessage.error('操作失败，请稍后重试')\n      }\n    }\n  })\n}\n\n// 分页操作\nconst handleSizeChange = (size) => {\n  queryParams.pageSize = size\n  getList()\n}\n\nconst handleCurrentChange = (page) => {\n  queryParams.pageNum = page\n  getList()\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getList()\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.el-pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.empty-data {\n  text-align: center;\n  color: #909399;\n  padding: 30px 0;\n}\n\n.income {\n  color: #67C23A;\n  font-weight: bold;\n}\n\n.withdraw {\n  color: #409EFF;\n  font-weight: bold;\n}\n\n.income-amount {\n  color: #67C23A;\n}\n\n.expense-amount {\n  color: #F56C6C;\n}\n\n.detail-pagination {\n  margin-top: 15px;\n}\n\n.error-message {\n  margin-bottom: 15px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}